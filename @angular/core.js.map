{"version":3,"file":"core.js","sources":["../../../../packages/core/src/animation/animation_metadata_wrapped.ts","../../../../packages/core/src/animation/dsl.ts","../../../../packages/core/src/metadata/lifecycle_hooks.ts","../../../../packages/core/src/application_module.ts","../../../../packages/core/src/view/services.ts","../../../../packages/core/src/view/view.ts","../../../../packages/core/src/view/text.ts","../../../../packages/core/src/view/query.ts","../../../../packages/core/src/view/pure_expression.ts","../../../../packages/core/src/view/provider.ts","../../../../packages/core/src/view/refs.ts","../../../../packages/core/src/view/view_attach.ts","../../../../packages/core/src/view/ng_content.ts","../../../../packages/core/src/view/element.ts","../../../../packages/core/src/view/util.ts","../../../../packages/core/src/view/errors.ts","../../../../packages/core/src/view/types.ts","../../../../packages/core/src/security.ts","../../../../packages/core/src/i18n/tokens.ts","../../../../packages/core/src/platform_core_providers.ts","../../../../packages/core/src/change_detection/change_detection.ts","../../../../packages/core/src/change_detection/differs/keyvalue_differs.ts","../../../../packages/core/src/change_detection/differs/iterable_differs.ts","../../../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../../../../packages/core/src/change_detection/differs/default_iterable_differ.ts","../../../../packages/core/src/change_detection/change_detection_util.ts","../../../../packages/core/src/debug/debug_node.ts","../../../../packages/core/src/linker/view_ref.ts","../../../../packages/core/src/change_detection/change_detector_ref.ts","../../../../packages/core/src/linker/view_container_ref.ts","../../../../packages/core/src/linker/template_ref.ts","../../../../packages/core/src/linker/system_js_ng_module_factory_loader.ts","../../../../packages/core/src/linker/query_list.ts","../../../../packages/core/src/linker/ng_module_factory_loader.ts","../../../../packages/core/src/linker/element_ref.ts","../../../../packages/core/src/render/api.ts","../../../../packages/core/src/application_ref.ts","../../../../packages/core/src/testability/testability.ts","../../../../packages/core/src/zone/ng_zone.ts","../../../../packages/core/src/event_emitter.ts","../../../../packages/core/src/profile/profile.ts","../../../../packages/core/src/profile/wtf_impl.ts","../../../../packages/core/src/linker/ng_module_factory.ts","../../../../packages/core/src/linker/component_factory_resolver.ts","../../../../packages/core/src/linker/component_factory.ts","../../../../packages/core/src/linker/compiler.ts","../../../../packages/core/src/console.ts","../../../../packages/core/src/application_tokens.ts","../../../../packages/core/src/application_init.ts","../../../../packages/core/src/util/lang.ts","../../../../packages/core/src/di/reflective_injector.ts","../../../../packages/core/src/di/reflective_provider.ts","../../../../packages/core/src/reflection/reflection.ts","../../../../packages/core/src/reflection/reflector.ts","../../../../packages/core/src/reflection/reflector_reader.ts","../../../../packages/core/src/reflection/reflection_capabilities.ts","../../../../packages/core/src/type.ts","../../../../packages/core/src/di/reflective_key.ts","../../../../packages/core/src/di/reflective_errors.ts","../../../../packages/core/src/error_handler.ts","../../../../packages/core/src/errors.ts","../../../../packages/core/src/di/injector.ts","../../../../packages/core/src/di/forward_ref.ts","../../../../packages/core/src/di/metadata.ts","../../../../packages/core/src/version.ts","../../../../packages/core/src/metadata/view.ts","../../../../packages/core/src/metadata/ng_module.ts","../../../../packages/core/src/metadata/directives.ts","../../../../packages/core/src/change_detection/constants.ts","../../../../packages/core/src/metadata/di.ts","../../../../packages/core/src/util/decorators.ts","../../../../packages/core/src/util.ts","../../../../packages/core/src/di/injection_token.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateTimings, AnimationMetadataType, animate as _animate, group as _group, keyframes as _keyframes, sequence as _sequence, state as _state, style as _style, transition as _transition, trigger as _trigger} from './dsl';\n\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport const /** @type {?} */ AUTO_STYLE = '*';\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTriggerMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string|((fromState: string, toState: string) => boolean);\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: {[key: string]: string | number}|{[key: string]: string | number}[];\n  offset?: number;\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata;\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return _trigger(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles: AnimationStyleMetadata | AnimationKeyframesSequenceMetadata =\n                                  null): AnimationAnimateMetadata {\n  return _animate(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function group(steps: AnimationMetadata[]): AnimationGroupMetadata {\n  return _group(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[]): AnimationSequenceMetadata {\n  return _sequence(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: {[key: string]: string | number} |\n    Array<{[key: string]: string | number}>): AnimationStyleMetadata {\n  return _style(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nexport function state(name: string, styles: AnimationStyleMetadata): AnimationStateMetadata {\n  return _state(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return _keyframes(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nexport function transition(\n    stateChangeExpr: string | ((fromState: string, toState: string) => boolean),\n    steps: AnimationMetadata | AnimationMetadata[]): AnimationTransitionMetadata {\n  return _transition(stateChangeExpr, steps);\n}\n\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from @angular/animations.\n */\nexport interface AnimationTransitionEvent {\n  fromState: string;\n  toState: string;\n  totalTime: number;\n  phaseName: string;\n  element: any;\n  triggerName: string;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport interface ÉµStyleData { [key: string]: string|number; }\n\n/**\n * @experimental Animation support is experimental.\n */\nexport declare type AnimateTimings = {\n  duration: number,\n  delay: number,\n  easing: string\n};\n\n/**\n * @experimental Animation support is experimental.\n */\nexport const enum AnimationMetadataType {\n  State,\n  Transition,\n  Sequence,\n  Group,\n  Animate,\n  KeyframeSequence,\n  Style\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport const /** @type {?} */ AUTO_STYLE = '*';\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTriggerMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link state state animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link transition transition animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string|((fromState: string, toState: string) => boolean);\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link keyframes keyframes animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link style style animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: {[key: string]: string | number}|{[key: string]: string | number}[];\n  offset?: number;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link animate animate animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link sequence sequence animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n\n/**\n * Metadata representing the entry of animations. Instances of this class are provided via the\n * animation DSL when the {@link group group animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n * transition transition} entries that will be evaluated when the expression bound to the trigger\n * changes.\n * \n * Triggers are registered within the component annotation data under the {\\@link\n * Component#animations-anchor animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n * \n * ### Usage\n * \n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and {\\@link\n * transition transition} declarations.\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * tools/gulp-tasks/validate-commit-message.js ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return {name, definitions};\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n * \n * ### Usage\n * \n * The `animate` function accepts two input parameters: `timing` and `styles`:\n * \n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n * \n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n * \n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles: AnimationStyleMetadata | AnimationKeyframesSequenceMetadata =\n                                  null): AnimationAnimateMetadata {\n  return {type: AnimationMetadataType.Animate, styles: styles, timings: timings};\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different statrting/ending times.\n * \n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n * \n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nexport function group(steps: AnimationMetadata[]): AnimationGroupMetadata {\n  return {type: AnimationMetadataType.Group, steps: steps};\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n * \n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n * \n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n * \n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[]): AnimationSequenceMetadata {\n  return {type: AnimationMetadataType.Sequence, steps: steps};\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n * \n * ### Usage\n * \n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n * \n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n * \n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n * \n * #### Auto-styles (using `*`)\n * \n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n * \n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n * \n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: {[key: string]: string | number} |\n    Array<{[key: string]: string | number}>): AnimationStyleMetadata {\n  return {type: AnimationMetadataType.Style, styles: tokens};\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n * \n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n * \n * #### The `void` state\n * \n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n * \n * #### The `*` (default) state\n * \n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n * \n * ### Usage\n * \n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n * \n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n * \n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n * \n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nexport function state(name: string, styles: AnimationStyleMetadata): AnimationStateMetadata {\n  return {type: AnimationMetadataType.State, name: name, styles: styles};\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n * \n * ### Usage\n * \n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n * \n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n * \n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n * \n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n * \n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return {type: AnimationMetadataType.KeyframeSequence, steps: steps};\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations-anchor component animations metadata page} to gain a better understanding of\n * how animations in Angular2 are used.\n * \n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n * \n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n * \n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n * \n * ### Usage\n * \n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n * \n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n * \n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n * \n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n * \n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n * \n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n * \n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n * \n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * #### The final `animate` call\n * \n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n * \n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n * \n * ### Transition Aliases (`:enter` and `:leave`)\n * \n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n * \n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nexport function transition(\n    stateChangeExpr: string | ((fromState: string, toState: string) => boolean),\n    steps: AnimationMetadata | AnimationMetadata[]): AnimationTransitionMetadata {\n  return {type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps};\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../change_detection/change_detection_util';\nexport type LifecycleHooks = number;\nexport let LifecycleHooks: any = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\n\n\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {@link SimpleChange}. See {@link OnChanges}\n * @stable\n */\nexport interface SimpleChanges { [propName: string]: SimpleChange; }\n\nexport const /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n  LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n  LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n  LifecycleHooks.AfterViewChecked\n];\n\n/**\n * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n *\n * @description\n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n *\n * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnChanges { ngOnChanges(changes: SimpleChanges): void; }\n\n/**\n * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n *\n * @description\n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n *\n * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnInit { ngOnInit(): void; }\n\n/**\n * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n *\n * @description\n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n *\n * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n *\n * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n *\n * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface DoCheck { ngDoCheck(): void; }\n\n/**\n * @whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n *\n * @description\n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n *\n * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface OnDestroy { ngOnDestroy(): void; }\n\n/**\n *\n * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterContentInit { ngAfterContentInit(): void; }\n\n/**\n * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterContentChecked { ngAfterContentChecked(): void; }\n\n/**\n * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterViewInit { ngAfterViewInit(): void; }\n\n/**\n * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n * @howToUse\n * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n *\n * @description\n * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * @stable\n */\nexport interface AfterViewChecked { ngAfterViewChecked(): void; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nimport {ApplicationRef, ApplicationRef_} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\nimport {initServicesIfNeeded} from './view/index';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n/**\n * @return {?}\n */\nexport function _initViewEngine() {\n  initServicesIfNeeded();\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n * \n * \\@experimental\n */\nexport class ApplicationModule {\n/**\n * @param {?} appRef\n */\nconstructor(appRef: ApplicationRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n    {provide: APP_INITIALIZER, useValue: _initViewEngine, multi: true},\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ApplicationRef, },\n];\n}\n\nfunction ApplicationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector} from './refs';\nimport {ArgumentType, BindingType, CheckType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeFlags, NodeLogger, RootData, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asPureExpressionData} from './types';\nimport {NOOP, checkBinding, isComponentView, renderNode, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  return callWithDebugContext(DebugAction.create, createRootView, null, [root, def, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer\n  };\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null, [parent, anchorDef, context]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  };\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & (NodeFlags.TypeDirective | NodeFlags.TypeElement)) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if ((binding.type === BindingType.ComponentHostProperty ||\n             binding.type === BindingType.DirectiveProperty)) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = nodeDef.flags & NodeFlags.TypeDirective ? nodeDef.parent : nodeDef;\n      const /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n      if (!elDef.element.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView);\n        elView = elView.parent;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.index).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewFactory: ViewDefinitionFactory;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewFactory = this.view.def.factory;\n      logNodeIndex = this.nodeDef.index;\n    } else {\n      logViewFactory = this.elView.def.factory;\n      logNodeIndex = this.elDef.index;\n    }\n    let /** @type {?} */ currNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currNodeIndex++;\n      if (currNodeIndex === logNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewFactory(nodeLogger);\n    if (currNodeIndex < logNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData {\n  while (view && !isComponentView(view)) {\n    view = view.parent;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view).index);\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    _currentView.state |= ViewState.Errored;\n    throw viewWrappedDebugError(e, getCurrentDebugContext());\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = getDebugNode(refChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Renderer2, RendererType2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery, queryDef} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, ElementDef, NodeData, NodeDef, NodeFlags, ProviderData, ProviderDef, RootData, Services, TextDef, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asProviderData, asPureExpressionData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, resolveViewDefinition, viewParentEl} from './util';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  if (nodes.length === 0) {\n    throw new Error(`Illegal State: Views without nodes are not allowed!`);\n  }\n\n  const /** @type {?} */ reverseChildNodes: NodeDef[] = new Array(nodes.length);\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= currentParent.childFlags;\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef;\n    if (currentParent && currentParent.flags & NodeFlags.TypeElement &&\n        !currentParent.element.name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use protoypical inheritance to not get O(n^2) complexity...\n        currentParent.element.publicProviders =\n            Object.create(currentParent.element.publicProviders);\n        currentParent.element.allProviders = currentParent.element.publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent.element.publicProviders[node.provider.tokenKey] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use protoypical inheritance to not get O(n^2) complexity...\n          currentParent.element.allProviders = Object.create(currentParent.element.publicProviders);\n        }\n        currentParent.element.allProviders[node.provider.tokenKey] = node;\n      }\n      if (isComponent) {\n        currentParent.element.componentProvider = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element.handleEvent(view, eventName, event);\n  return {\n    // Will be filled later...\n    factory: undefined,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : null;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view =\n      createView(parent.root, parent.renderer, parent, anchorDef, anchorDef.element.template);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData, parentNodeDef: NodeDef,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : undefined;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: undefined, parentNodeDef,\n    context: undefined,\n    component: undefined, nodes,\n    state: ViewState.FirstCheck | ViewState.ChecksEnabled, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent, hostDef.parent.index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveViewDefinition(nodeDef.element.componentView);\n          const /** @type {?} */ rendererType = nodeDef.element.componentRendererType;\n          let /** @type {?} */ compRenderer: Renderer2;\n          if (!rendererType) {\n            compRenderer = view.root.renderer;\n          } else {\n            compRenderer = view.root.rendererFactory.createRenderer(el, rendererType);\n          }\n          componentView = createView(\n              view.root, compRenderer, view, nodeDef.element.componentProvider, compViewDef);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: undefined,\n          template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, nodeDef.parent.index).componentView;\n          initView(compView, instance, instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~ViewState.FirstCheck;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeDirective:\n      changed =\n          checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed =\n          checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeDirective:\n      changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n      break;\n  }\n  if (changed) {\n    // Update oldValues after all bindings have been updated,\n    // as a setter for a property might update other properties.\n    const /** @type {?} */ bindLen = nodeDef.bindings.length;\n    const /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n    const /** @type {?} */ oldValues = view.oldValues;\n    for (let /** @type {?} */ i = 0; i < bindLen; i++) {\n      oldValues[bindingStart + i] = values[i];\n    }\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${nodeDef.query.id} not dirty`,\n        `Query ${nodeDef.query.id} dirty`, (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkNoChangesView(view);\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkAndUpdateView(view);\n      }\n      break;\n    case ViewAction.Destroy:\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical} from '../util';\n\nimport {BindingDef, BindingType, DebugContext, NodeData, NodeDef, NodeFlags, RootData, Services, TextData, ViewData, ViewFlags, asElementData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nexport function textDef(ngContentIndex: number, constants: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(constants.length - 1);\n  for (let /** @type {?} */ i = 1; i < constants.length; i++) {\n    bindings[i - 1] = {\n      type: BindingType.TextInterpolation,\n      name: undefined,\n      ns: undefined,\n      nonMinifiedName: undefined,\n      securityContext: undefined,\n      suffix: constants[i]\n    };\n  }\n  const /** @type {?} */ flags = NodeFlags.TypeText;\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: {prefix: constants[0]},\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText(def.text.prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = def.text.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text.prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, Services, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView, viewParentEl} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: undefined,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: undefined\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = view.parentNodeDef;\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.index + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.index) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[];\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const /** @type {?} */ elementDef = nodeDef.parent.parent;\n    newValues = calcQueryValues(\n        view, elementDef.index, elementDef.index + elementDef.childCount, nodeDef.query, []);\n    directiveInstance = asProviderData(view, nodeDef.parent.index).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = nodeDef.query.bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element.template &&\n        (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n      // check embedded views that were attached at the place of their template.\n      const /** @type {?} */ elementData = asElementData(view, i);\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    let /** @type {?} */ value: any;\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        value = asElementData(view, nodeDef.index).renderElement;\n        break;\n      case QueryValueType.ElementRef:\n        value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n        break;\n      case QueryValueType.TemplateRef:\n        value = asElementData(view, nodeDef.index).template;\n        break;\n      case QueryValueType.ViewContainerRef:\n        value = asElementData(view, nodeDef.index).viewContainer;\n        break;\n      case QueryValueType.Provider:\n        value = asProviderData(view, nodeDef.index).instance;\n        break;\n    }\n    return value;\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingType, DepDef, DepFlags, NodeData, NodeDef, NodeFlags, ProviderData, PureExpressionData, Services, ViewData, asPureExpressionData} from './types';\nimport {checkAndUpdateBinding, tokenKey} from './util';\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, new Array(argCount));\n}\n/**\n * @param {?} propertyNames\n * @return {?}\n */\nexport function pureObjectDef(propertyNames: string[]): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureObject, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags: NodeFlags, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      type: BindingType.PureExpressionProperty,\n      name: prop,\n      ns: undefined,\n      nonMinifiedName: prop,\n      securityContext: undefined,\n      suffix: undefined\n    };\n  }\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: undefined,\n    childCount: 0, bindings,\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name] = v0;\n        if (bindLen > 1) value[bindings[1].name] = v1;\n        if (bindLen > 2) value[bindings[2].name] = v2;\n        if (bindLen > 3) value[bindings[3].name] = v3;\n        if (bindLen > 4) value[bindings[4].name] = v4;\n        if (bindLen > 5) value[bindings[5].name] = v5;\n        if (bindLen > 6) value[bindings[6].name] = v6;\n        if (bindLen > 7) value[bindings[7].name] = v7;\n        if (bindLen > 8) value[bindings[8].name] = v8;\n        if (bindLen > 9) value[bindings[9].name] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[bindings[i].name] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Renderer as RendererV1, Renderer2, RendererFactory2, RendererType2} from '../render/api';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingType, DepDef, DepFlags, DisposableFn, NodeData, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryBindingType, QueryDef, QueryValueType, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {checkBinding, dispatchEvent, filterQueryId, isComponentView, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nconst /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], childCount: number,\n    ctor: any, deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    outputs?: {[name: string]: string}): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        type: BindingType.DirectiveProperty,\n        name: prop, nonMinifiedName,\n        ns: undefined,\n        securityContext: undefined,\n        suffix: undefined\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][], childCount: number,\n    token: any, value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs: DepDef[] = deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: undefined, childCount, bindings, outputs,\n    element: undefined,\n    provider: {token, tokenKey: tokenKey(token), value, deps: depDefs},\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */ allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value,\n      def.provider.deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance =\n      createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */ output = def.outputs[i];\n      const /** @type {?} */ subscription = instance[output.propName].subscribe(\n          eventHandlerClosure(view, def.parent.index, output.eventName));\n      view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges;\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  };\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  };\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  };\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  };\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  };\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  };\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  };\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  };\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  };\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  };\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const /** @type {?} */ providerDef = def.provider;\n  let /** @type {?} */ injectable: any;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable =\n          createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable =\n          callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nconst /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (depDef.flags & DepFlags.SkipSelf) {\n    allowPrivateServices = false;\n    elDef = elDef.parent;\n  }\n\n  while (view) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.index).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.index).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element.template) {\n            return asElementData(view, elDef.index).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */ providerDef =\n              (allowPrivateServices ? elDef.element.allProviders :\n                                      elDef.element.publicProviders)[tokenKey];\n          if (providerDef) {\n            const /** @type {?} */ providerData = asProviderData(view, providerDef.index);\n            if (providerData.instance === NOT_CREATED) {\n              providerData.instance = _createProviderInstance(view, providerDef);\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = viewParentEl(view);\n    view = view.parent;\n  }\n\n  const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let /** @type {?} */ compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.index).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const /** @type {?} */ compView = asElementData(view, def.parent.index).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ propName = binding.name;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ nodes = view.def.nodes;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ nodeDef = nodes[i];\n    let /** @type {?} */ parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.index + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view: ViewData, elDef: NodeDef, lifecycles: NodeFlags) {\n  for (let /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view: ViewData, index: number, lifecycles: NodeFlags) {\n  const /** @type {?} */ provider = asProviderData(view, index).instance;\n  if (provider === NOT_CREATED) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ElementRef} from '../linker/element_ref';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {VERSION} from '../version';\n\nimport {ArgumentType, BindingType, DebugContext, DepFlags, ElementData, NodeCheckFn, NodeData, NodeDef, NodeFlags, RootData, Services, TemplateData, ViewContainerData, ViewData, ViewDefinition, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {isComponentView, markParentViewsForCheck, renderNode, resolveViewDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>,\n    viewDefFactory: ViewDefinitionFactory): ComponentFactory<any> {\n  return new ComponentFactory_(selector, componentType, viewDefFactory);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory) {\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveViewDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = viewDef.nodes[0].element.componentProvider.index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent;\n    }\n\n    return view ? new Injector_(view, elDef) : this._view.root.injector;\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = detachEmbeddedView(this._data, i);\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; };\n/**\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][]): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    const /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef;\nprivate _appRef: ApplicationRef;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.ChecksEnabled; }\n/**\n * @return {?}\n */\ndetectChanges(): void { Services.checkAndUpdateView(this._view); }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.ChecksEnabled; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices = (this.elDef.flags & NodeFlags.ComponentView) !== 0;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.index);\n    return def.element.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.index).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.index).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeData, NodeDef, NodeFlags, Services, ViewData, asElementData, asProviderData, asTextData} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, rootRenderNodes, visitProjectedRenderNodes, visitRootRenderNodes} from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number, view: ViewData) {\n  let /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n  if (viewIndex == null) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex, view);\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData && dvcElementData !== elementData) {\n    let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n      projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n  }\n\n  Services.dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} elementData\n * @param {?} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  view.viewContainerParent = undefined;\n  removeFromArray(embeddedViews, viewIndex);\n\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData && dvcElementData !== elementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    removeFromArray(projectedViews, projectedViews.indexOf(view));\n  }\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData: ElementData, prevView: ViewData, view: ViewData) {\n  const /** @type {?} */ prevRenderNode =\n      prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) : elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData, asElementData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex: number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: {index}\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ ngContentIndex = def.ngContent.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, undefined, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2, RendererType2} from '../render/api';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingType, DebugContext, DisposableFn, ElementData, ElementHandleEventFn, NodeData, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, asElementData, asProviderData} from './types';\nimport {NOOP, checkAndUpdateBinding, dispatchEvent, elementEventFullName, filterQueryId, getParentRenderElement, resolveViewDefinition, splitMatchedQueriesDsl, splitNamespace} from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, handleEvent?: ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */ template = templateFactory ? resolveViewDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    outputs: [],\n    element: {\n      ns: undefined,\n      name: undefined,\n      attrs: undefined, template,\n      componentProvider: undefined,\n      componentView: undefined,\n      componentRendererType: undefined,\n      publicProviders: undefined,\n      allProviders: undefined, handleEvent\n    },\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, namespaceAndName: string,\n    fixedAttrs: [string, string][] = [],\n    bindings?:\n        ([BindingType.ElementClass, string] | [BindingType.ElementStyle, string, string] |\n         [\n           BindingType.ElementAttribute | BindingType.ElementProperty |\n               BindingType.ComponentHostProperty,\n           string, SecurityContext\n         ])[],\n    outputs?: ([string, string])[], handleEvent?: ElementHandleEventFn,\n    componentView?: ViewDefinitionFactory, componentRendererType?: RendererType2): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string;\n  let /** @type {?} */ name: string;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ entry = bindings[i];\n    let /** @type {?} */ bindingDef: BindingDef;\n    const /** @type {?} */ bindingType = entry[0];\n    const [ns, name] = splitNamespace(entry[1]);\n    let /** @type {?} */ securityContext: SecurityContext;\n    let /** @type {?} */ suffix: string;\n    switch (bindingType) {\n      case BindingType.ElementStyle:\n        suffix = /** @type {?} */(( <string>entry[2]));\n        break;\n      case BindingType.ElementAttribute:\n      case BindingType.ElementProperty:\n      case BindingType.ComponentHostProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>entry[2]));\n        break;\n    }\n    bindingDefs[i] = {type: bindingType, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: /** @type {?} */(( <any>target)), eventName,\n      propName: undefined\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  // This is needed as the jit compiler always uses an empty hash as default RendererType2,\n  // which is not filled for host views.\n  if (componentRendererType && componentRendererType.encapsulation == null) {\n    componentRendererType = null;\n  }\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: undefined,\n      // will bet set by the view definition\n      componentProvider: undefined, componentView, componentRendererType,\n      publicProviders: undefined,\n      allProviders: undefined, handleEvent,\n    },\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = def.element;\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */ output = def.outputs[i];\n    const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n        view, def.index, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */ listenTarget = output.target;\n    let /** @type {?} */ listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */ disposable = /** @type {?} */((\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)));\n    view.disposables[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  let /** @type {?} */ changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ elData = asElementData(view, def.index);\n  const /** @type {?} */ renderNode = elData.renderElement;\n  const /** @type {?} */ name = binding.name;\n  switch (binding.type) {\n    case BindingType.ElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingType.ElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingType.ElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingType.ElementProperty:\n      setElementProperty(view, binding, renderNode, name, value);\n      break;\n    case BindingType.ComponentHostProperty:\n      setElementProperty(elData.componentView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SimpleChange} from '../change_detection/change_detection_util';\nimport {Injector} from '../di';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {ViewRef} from '../linker/view_ref';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Renderer, RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\n\nimport {expressionChangedAfterItHasBeenCheckedError, isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {DebugContext, ElementData, NodeData, NodeDef, NodeFlags, NodeLogger, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asProviderData, asTextData} from './types';\n\nexport const /** @type {?} */ NOOP: any = () => {};\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nlet /** @type {?} */ unwrapCounter = 0;\n/**\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    unwrapCounter++;\n  }\n  return value;\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  const /** @type {?} */ isFilled = values && (values.encapsulation !== ViewEncapsulation.None ||\n                              values.styles.length || Object.keys(values.data).length);\n  if (isFilled) {\n    const /** @type {?} */ id = `c${_renderCompCount++}`;\n    return {id: id, styles: values.styles, encapsulation: values.encapsulation, data: values.data};\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if (unwrapCounter > 0 || !!(view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    unwrapCounter = 0;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if (unwrapCounter || (view.state & ViewState.FirstCheck) || !devModeEqual(oldValue, value)) {\n    unwrapCounter = 0;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.index), oldValue, value,\n        (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view: ViewData) {\n  let /** @type {?} */ currView = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean {\n  markParentViewsForCheck(view);\n  return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef.index);\n  }\n  return undefined;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef.parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.index).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.index).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef.flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef.flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(matchedQueriesDsl: [string | number, QueryValueType][]): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element.componentRendererType &&\n         renderParent.element.componentRendererType.encapsulation === ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent.index).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ VIEW_DEFINITION_CACHE = new WeakMap<any, ViewDefinition>();\n/**\n * @param {?} factory\n * @return {?}\n */\nexport function resolveViewDefinition(factory: ViewDefinitionFactory): ViewDefinition {\n  let /** @type {?} */ value: ViewDefinition = VIEW_DEFINITION_CACHE.get(factory);\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    VIEW_DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\nexport type RenderNodeAction = number;\nexport let RenderNodeAction: any = {};\nRenderNodeAction.Collect = 0;\nRenderNodeAction.AppendChild = 1;\nRenderNodeAction.InsertBefore = 2;\nRenderNodeAction.RemoveChild = 3;\nRenderNodeAction[RenderNodeAction.Collect] = \"Collect\";\nRenderNodeAction[RenderNodeAction.AppendChild] = \"AppendChild\";\nRenderNodeAction[RenderNodeAction.InsertBefore] = \"InsertBefore\";\nRenderNodeAction[RenderNodeAction.RemoveChild] = \"RemoveChild\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target: any[]) {\n  let /** @type {?} */ compView = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = compView.parent;\n  const /** @type {?} */ hostElDef = viewParentEl(compView);\n  const /** @type {?} */ startIndex = hostElDef.index + 1;\n  const /** @type {?} */ endIndex = hostElDef.index + hostElDef.childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = hostView.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView.parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const /** @type {?} */ embeddedViews = asElementData(view, nodeDef.index).viewContainer._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target.push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = name.match(NS_PREFIX_RE);\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let /** @type {?} */ result = '';\n  for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport const /** @type {?} */ EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let /** @type {?} */ msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const /** @type {?} */ err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  ( /** @type {?} */((err as any)))[ERROR_DEBUG_CONTEXT] = context;\n  ( /** @type {?} */((err as any)))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PipeTransform} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentRef} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {ViewRef} from '../linker/view_ref';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\nexport interface ViewDefinition {\n  factory: ViewDefinitionFactory;\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\n/**\n * Factory for ViewDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface ViewDefinitionFactory { (logger: NodeLogger): ViewDefinition; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefintion.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  index: number;\n  parent: NodeDef;\n  renderParent: NodeDef;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef;\n  provider: ProviderDef;\n  text: TextDef;\n  query: QueryDef;\n  ngContent: NgContentDef;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 2,\n  TypePipe = 1 << 3,\n  TypePureArray = 1 << 4,\n  TypePureObject = 1 << 5,\n  TypePurePipe = 1 << 6,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 7,\n  TypeClassProvider = 1 << 8,\n  TypeFactoryProvider = 1 << 9,\n  TypeUseExistingProvider = 1 << 10,\n  LazyProvider = 1 << 11,\n  PrivateProvider = 1 << 12,\n  TypeDirective = 1 << 13,\n  Component = 1 << 14,\n  CatProvider = TypeValueProvider | TypeClassProvider | TypeFactoryProvider |\n      TypeUseExistingProvider | TypeDirective,\n  OnInit = 1 << 15,\n  OnDestroy = 1 << 16,\n  DoCheck = 1 << 17,\n  OnChanges = 1 << 18,\n  AfterContentInit = 1 << 19,\n  AfterContentChecked = 1 << 20,\n  AfterViewInit = 1 << 21,\n  AfterViewChecked = 1 << 22,\n  EmbeddedViews = 1 << 23,\n  ComponentView = 1 << 24,\n  TypeContentQuery = 1 << 25,\n  TypeViewQuery = 1 << 26,\n  StaticQuery = 1 << 27,\n  DynamicQuery = 1 << 28,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  type: BindingType;\n  ns: string;\n  name: string;\n  nonMinifiedName: string;\n  securityContext: SecurityContext;\n  suffix: string;\n}\n\nexport const enum BindingType {\n  ElementAttribute,\n  ElementClass,\n  ElementStyle,\n  ElementProperty,\n  ComponentHostProperty,\n  DirectiveProperty,\n  TextInterpolation,\n  PureExpressionProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component';\n  eventName: string;\n  propName: string;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n\nexport interface ElementDef {\n  name: string;\n  ns: string;\n  /** ns, name, value */\n  attrs: [string, string, string][];\n  template: ViewDefinition;\n  componentProvider: NodeDef;\n  componentRendererType: RendererType2;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef};\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef};\n  handleEvent: ElementHandleEventFn;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  tokenKey: string;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef;\n  parent: ViewData;\n  viewContainerParent: ViewData;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[];\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  FirstCheck = 1 << 0,\n  ChecksEnabled = 1 << 1,\n  Errored = 1 << 2,\n  Destroyed = 1 << 3\n}\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef { _embeddedViews: ViewData[]; }\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n/**\n * @abstract\n * @return {?}\n */\nview() {}\n/**\n * @abstract\n * @return {?}\n */\nnodeIndex() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentRenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {}\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const /** @type {?} */ Services: Services = {\n  setCurrentNode: undefined,\n  createRootView: undefined,\n  createEmbeddedView: undefined,\n  checkAndUpdateView: undefined,\n  checkNoChangesView: undefined,\n  destroyView: undefined,\n  resolveDep: undefined,\n  createDebugContext: undefined,\n  handleEvent: undefined,\n  updateDirectives: undefined,\n  updateRenderer: undefined,\n  dirtyParentQueries: undefined,\n};\n","\nexport type SecurityContext = number;\nexport let SecurityContext: any = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Sanitizer {\n/**\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nsanitize(context: SecurityContext, value: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n\n/**\n * @experimental i18n support is experimental.\n */\nexport const /** @type {?} */ LOCALE_ID = new InjectionToken<string>('LocaleId');\n\n/**\n * @experimental i18n support is experimental.\n */\nexport const /** @type {?} */ TRANSLATIONS = new InjectionToken<string>('Translations');\n\n/**\n * @experimental i18n support is experimental.\n */\nexport const /** @type {?} */ TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\nexport type MissingTranslationStrategy = number;\nexport let MissingTranslationStrategy: any = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, PlatformRef_, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Provider} from './di';\nimport {Reflector, reflector} from './reflection/reflection';\nimport {ReflectorReader} from './reflection/reflector_reader';\nimport {TestabilityRegistry} from './testability/testability';\n/**\n * @return {?}\n */\nfunction _reflector(): Reflector {\n  return reflector;\n}\n\nconst /** @type {?} */ _CORE_PLATFORM_PROVIDERS: Provider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  PlatformRef_,\n  {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: Reflector, useFactory: _reflector, deps: []},\n  {provide: ReflectorReader, useExisting: Reflector},\n  TestabilityRegistry,\n  Console,\n];\n\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nexport const /** @type {?} */ platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst /** @type {?} */ keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst /** @type {?} */ iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @stable\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  /* readonly */ key: K;\n\n  /**\n   * Current value for the key or `undefined` if removed.\n   */\n  /* readonly */ currentValue: V;\n\n  /**\n   * Previous value for the key or `undefined` if added.\n   */\n  /* readonly */ previousValue: V;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @stable\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<K, V>(_cdr?: ChangeDetectorRef): KeyValueDiffer<K, V>;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport class KeyValueDiffers {\n/**\n * @deprecated v4.0.0 - Should be private.\n */\nfactories: KeyValueDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n/**\n * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n * {\\@link KeyValueDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend<S>(factories: KeyValueDifferFactory[]): Provider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} kv\n * @return {?}\n */\nfind(kv: any): KeyValueDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private.\n * @type {?}\n */\nKeyValueDiffers.prototype.factories;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n/**\n * A type describing supported interable types.\n *\n * @stable\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @stable\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn: (record: IterableChangeRecord<V>, previousIndex: number, currentIndex: number) => void):\n      void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `trackByFn`) changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ currentIndex: number;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ previousIndex: number;\n\n  /** The item. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ item: V;\n\n  /** Track by identity as computed by the `trackByFn`. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n */\nexport interface TrackByFn { (index: number, item: any): any; }\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @stable\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @stable\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<V>(_cdr?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      IterableDiffer<V>;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport class IterableDiffers {\n/**\n * @deprecated v4.0.0 - Should be private\n */\nfactories: IterableDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n/**\n * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n * {\\@link IterableDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link IterableDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     IterableDiffers.extend([new ImmutableListDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend(factories: IterableDifferFactory[]): Provider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} iterable\n * @return {?}\n */\nfind(iterable: any): IterableDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nfunction IterableDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private\n * @type {?}\n */\nIterableDiffers.prototype.factories;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records: Map<K, V> = new Map<K, V>();\nprivate _mapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V> = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} map\n * @return {?}\n */\ndiff(map: Map<any, any>|{[k: string]: any}): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(`Error trying to diff '${map}'`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n    const /** @type {?} */ records = this._records;\n    let /** @type {?} */ oldSeqRecord: KeyValueChangeRecord_<K, V> = this._mapHead;\n    let /** @type {?} */ lastOldSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ lastNewSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ seqChanged: boolean = false;\n\n    this._forEach(map, (value: any, key: any) => {\n      let /** @type {?} */ newSeqRecord: any;\n      if (oldSeqRecord && key === oldSeqRecord.key) {\n        newSeqRecord = oldSeqRecord;\n        this._maybeAddToChanges(newSeqRecord, value);\n      } else {\n        seqChanged = true;\n        if (oldSeqRecord !== null) {\n          this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n          this._addToRemovals(oldSeqRecord);\n        }\n        if (records.has(key)) {\n          newSeqRecord = records.get(key);\n          this._maybeAddToChanges(newSeqRecord, value);\n        } else {\n          newSeqRecord = new KeyValueChangeRecord_<K, V>(key);\n          records.set(key, newSeqRecord);\n          newSeqRecord.currentValue = value;\n          this._addToAdditions(newSeqRecord);\n        }\n      }\n\n      if (seqChanged) {\n        if (this._isInRemovals(newSeqRecord)) {\n          this._removeFromRemovals(newSeqRecord);\n        }\n        if (lastNewSeqRecord == null) {\n          this._mapHead = newSeqRecord;\n        } else {\n          lastNewSeqRecord._next = newSeqRecord;\n        }\n      }\n      lastOldSeqRecord = oldSeqRecord;\n      lastNewSeqRecord = newSeqRecord;\n      oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n    });\n    this._truncate(lastOldSeqRecord, oldSeqRecord);\n    return this.isDirty;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n      // Record the state of the mapping\n      for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n/**\n * @param {?} lastRecord\n * @param {?} record\n * @return {?}\n */\nprivate _truncate(lastRecord: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    while (record !== null) {\n      if (lastRecord === null) {\n        this._mapHead = null;\n      } else {\n        lastRecord._next = null;\n      }\n      const /** @type {?} */ nextRecord = record._next;\n      this._addToRemovals(record);\n      lastRecord = record;\n      record = nextRecord;\n    }\n\n    for (let /** @type {?} */ rec: KeyValueChangeRecord_<K, V> = this._removalsHead; rec !== null;\n         rec = rec._nextRemoved) {\n      rec.previousValue = rec.currentValue;\n      rec.currentValue = null;\n      this._records.delete(rec.key);\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _isInRemovals(record: KeyValueChangeRecord_<K, V>) {\n    return record === this._removalsHead || record._nextRemoved !== null ||\n        record._prevRemoved !== null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: KeyValueChangeRecord_<K, V>) {\n    if (this._removalsHead === null) {\n      this._removalsHead = this._removalsTail = record;\n    } else {\n      this._removalsTail._nextRemoved = record;\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = record;\n    }\n  }\n/**\n * @param {?} prev\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromSeq(prev: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ next = record._next;\n    if (prev === null) {\n      this._mapHead = next;\n    } else {\n      prev._next = next;\n    }\n    record._next = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromRemovals(record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    record._prevRemoved = record._nextRemoved = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ items: any[] = [];\n    const /** @type {?} */ previous: any[] = [];\n    const /** @type {?} */ changes: any[] = [];\n    const /** @type {?} */ additions: any[] = [];\n    const /** @type {?} */ removals: any[] = [];\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n\n    for (record = this._mapHead; record !== null; record = record._next) {\n      items.push(stringify(record));\n    }\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      previous.push(stringify(record));\n    }\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      changes.push(stringify(record));\n    }\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      additions.push(stringify(record));\n    }\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      removals.push(stringify(record));\n    }\n\n    return 'map: ' + items.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'changes: ' + changes.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n';\n  }\n/**\n * \\@internal\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V = null;\n  currentValue: V = null;\n/**\n * \\@internal\n */\n_nextPrevious: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_next: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_nextAdded: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_nextRemoved: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_prevRemoved: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_nextChanged: KeyValueChangeRecord_<K, V> = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return looseIdentical(this.previousValue, this.currentValue) ?\n        stringify(this.key) :\n        (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n         stringify(this.currentValue) + ']');\n  }\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: Object): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<any>): DefaultIterableDiffer<V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @param {?=} cdRefOrTrackBy\n * @param {?=} trackByFn\n * @return {?}\n */\ncreate<V>(\n      cdRefOrTrackBy?: ChangeDetectorRef|TrackByFunction<any>,\n      trackByFn?: TrackByFunction<any>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn || /** @type {?} */(( <TrackByFunction<any>>cdRefOrTrackBy)));\n  }\n}\n\nconst /** @type {?} */ trackByIdentity = (index: number, item: any) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\nprivate _length: number = null;\nprivate _collection: NgIterable<V> = null;\nprivate _linkedRecords: _DuplicateMap<V> = null;\nprivate _unlinkedRecords: _DuplicateMap<V> = null;\nprivate _previousItHead: IterableChangeRecord_<V> = null;\nprivate _itHead: IterableChangeRecord_<V> = null;\nprivate _itTail: IterableChangeRecord_<V> = null;\nprivate _additionsHead: IterableChangeRecord_<V> = null;\nprivate _additionsTail: IterableChangeRecord_<V> = null;\nprivate _movesHead: IterableChangeRecord_<V> = null;\nprivate _movesTail: IterableChangeRecord_<V> = null;\nprivate _removalsHead: IterableChangeRecord_<V> = null;\nprivate _removalsTail: IterableChangeRecord_<V> = null;\nprivate _identityChangesHead: IterableChangeRecord_<V> = null;\nprivate _identityChangesTail: IterableChangeRecord_<V> = null;\n/**\n * @param {?=} _trackByFn\n */\nconstructor(private _trackByFn?: TrackByFunction<V>) {\n    this._trackByFn = this._trackByFn || trackByIdentity;\n  }\n/**\n * @return {?}\n */\nget collection() { return this._collection; }\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachOperation(\n      fn: (item: IterableChangeRecord_<V>, previousIndex: number, currentIndex: number) => void) {\n    let /** @type {?} */ nextIt = this._itHead;\n    let /** @type {?} */ nextRemove = this._removalsHead;\n    let /** @type {?} */ addRemoveOffset = 0;\n    let /** @type {?} */ moveOffsets: number[] = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */ record = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt :\n          nextRemove;\n      const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */ currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */ localCurrentIndex = currentIndex - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const /** @type {?} */ index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */ previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} collection\n * @return {?}\n */\ndiff(collection: NgIterable<V>): DefaultIterableDiffer<V> {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(`Error trying to diff '${collection}'`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} collection\n * @return {?}\n */\ncheck(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let /** @type {?} */ record: IterableChangeRecord_<V> = this._itHead;\n    let /** @type {?} */ mayBeDirty: boolean = false;\n    let /** @type {?} */ index: number;\n    let /** @type {?} */ item: V;\n    let /** @type {?} */ itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n\n      for (let /** @type {?} */ index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n/**\n * Reset the state of the change objects to show no changes. This means set previousKey to\n * currentKey, and clear all of the queues (additions, moves, removals).\n * Set the previousIndexes of moved and added items to their currentIndexes\n * Reset the list of additions, moves and removals\n * \n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: IterableChangeRecord_<V>;\n      let /** @type {?} */ nextRecord: IterableChangeRecord_<V>;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n/**\n * This is the core function which handles differences between collections.\n * \n * - `record` is the record which we saw at this position last time. If null then it is a new\n *   item.\n * - `item` is the current item in the collection\n * - `index` is the position of the item in the collection\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_mismatch(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */ previousRecord: IterableChangeRecord_<V>;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n/**\n * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n * \n * Use case: `[a, a]` => `[b, a, a]`\n * \n * If we did not have this check then the insertion of `b` would:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) leave `a` at index `1` as is. <-- this is wrong!\n *   3) reinsert `a` at index 2. <-- this is wrong!\n * \n * The correct behavior is:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) reinsert `a` at index 1.\n *   3) move `a` at from `1` to `2`.\n * \n * \n * Double check that we have not evicted a duplicate item. We need to check if the item type may\n * have already been removed:\n * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n * at the end.\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let /** @type {?} */ reinsertRecord: IterableChangeRecord_<V> =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n/**\n * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n * \n * - `record` The first excess {\\@link IterableChangeRecord_}.\n * \n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_truncate(record: IterableChangeRecord_<V>) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */ nextRecord: IterableChangeRecord_<V> = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_moveAfter(record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>, index: number):\n      IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_addAfter(record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>, index: number):\n      IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>,\n      index: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const /** @type {?} */ next: IterableChangeRecord_<V> = prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const /** @type {?} */ prev = record._prev;\n    const /** @type {?} */ next = record._next;\n\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} toIndex\n * @return {?}\n */\n_addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} item\n * @return {?}\n */\n_addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ list: IterableChangeRecord_<V>[] = [];\n    this.forEachItem((record: IterableChangeRecord_<V>) => list.push(record));\n\n    const /** @type {?} */ previous: IterableChangeRecord_<V>[] = [];\n    this.forEachPreviousItem((record: IterableChangeRecord_<V>) => previous.push(record));\n\n    const /** @type {?} */ additions: IterableChangeRecord_<V>[] = [];\n    this.forEachAddedItem((record: IterableChangeRecord_<V>) => additions.push(record));\n\n    const /** @type {?} */ moves: IterableChangeRecord_<V>[] = [];\n    this.forEachMovedItem((record: IterableChangeRecord_<V>) => moves.push(record));\n\n    const /** @type {?} */ removals: IterableChangeRecord_<V>[] = [];\n    this.forEachRemovedItem((record: IterableChangeRecord_<V>) => removals.push(record));\n\n    const /** @type {?} */ identityChanges: IterableChangeRecord_<V>[] = [];\n    this.forEachIdentityChange((record: IterableChangeRecord_<V>) => identityChanges.push(record));\n\n    return 'collection: ' + list.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'moves: ' + moves.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n' +\n        'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultIterableDiffer.prototype._length;\n/** @type {?} */\nDefaultIterableDiffer.prototype._collection;\n/** @type {?} */\nDefaultIterableDiffer.prototype._linkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._unlinkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._previousItHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._trackByFn;\n}\n\n/**\n * \\@stable\n */\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number = null;\n  previousIndex: number = null;\n/**\n * \\@internal\n */\n_nextPrevious: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_prev: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_next: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_prevDup: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextDup: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_prevRemoved: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextRemoved: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextAdded: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextMoved: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextIdentityChange: IterableChangeRecord_<V> = null;\n/**\n * @param {?} item\n * @param {?} trackById\n */\nconstructor(public item: V,\npublic trackById: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                                                      stringify(this.item) + '[' +\n            stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\n\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nIterableChangeRecord_.prototype.currentIndex;\n/** @type {?} */\nIterableChangeRecord_.prototype.previousIndex;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextMoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextIdentityChange;\n/** @type {?} */\nIterableChangeRecord_.prototype.item;\n/** @type {?} */\nIterableChangeRecord_.prototype.trackById;\n}\n\nclass _DuplicateItemRecordList<V> {\n/**\n * \\@internal\n */\n_head: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_tail: IterableChangeRecord_<V> = null;\n/**\n * Append the record to the list of duplicates.\n * \n * Note: by design all records in the list of duplicates hold the same value in record.item.\n * @param {?} record\n * @return {?}\n */\nadd(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n/**\n * @param {?} trackById\n * @param {?} afterIndex\n * @return {?}\n */\nget(trackById: any, afterIndex: number): IterableChangeRecord_<V> {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((afterIndex === null || afterIndex < record.currentIndex) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n/**\n * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * Returns whether the list of duplicates is empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): boolean {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const /** @type {?} */ prev: IterableChangeRecord_<V> = record._prevDup;\n    const /** @type {?} */ next: IterableChangeRecord_<V> = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._head;\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._tail;\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n/**\n * @param {?} record\n * @return {?}\n */\nput(record: IterableChangeRecord_<V>) {\n    const /** @type {?} */ key = record.trackById;\n\n    let /** @type {?} */ duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n/**\n * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n * have already iterated over, we use the afterIndex to pretend it is not there.\n * \n * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n * have any more `a`s needs to return the last `a` not the first or second.\n * @param {?} trackById\n * @param {?=} afterIndex\n * @return {?}\n */\nget(trackById: any, afterIndex: number = null): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = trackById;\n    const /** @type {?} */ recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, afterIndex) : null;\n  }\n/**\n * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * The list of duplicates also is removed from the map if it gets empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = record.trackById;\n    const /** @type {?} */ recordList: _DuplicateItemRecordList<V> = this.map.get(key);\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\nget isEmpty(): boolean { return this.map.size === 0; }\n/**\n * @return {?}\n */\nclear() { this.map.clear(); }\n/**\n * @return {?}\n */\ntoString(): string { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n/** @type {?} */\n_DuplicateMap.prototype.map;\n}\n\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item: any, addRemoveOffset: number, moveOffsets: number[]): number {\n  const /** @type {?} */ previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */ moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){}; }\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: DebugNode,\nprivate _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugContext ? this._debugContext.injector : null; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugContext ? this._debugContext.component : null; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugContext ? this._debugContext.context : null; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    return this._debugContext ? this._debugContext.references : null;\n  }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    return this._debugContext ? this._debugContext.providerTokens : null;\n  }\n/**\n * @deprecated since v4\n * @return {?}\n */\nget source(): string { return 'Deprecated since v4'; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugContext;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode {\n  return _nativeNodeToDebugNode.get(nativeNode);\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T, index?: number, array?: T[]): boolean; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n/**\n * Destroys the view and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n/**\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * Represents an Angular View.\n * \n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n * \n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n * \n * ### Example\n * \n * Given this template...\n * \n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n * \n * We have two {\\@link TemplateRef}s:\n * \n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n * \n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n * \n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n * \n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n * \n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nrootNodes() {}\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ChangeDetectorRef {\n/**\n * Marks all {\\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n * \n * <!-- TODO: Add a link to a chapter on OnPush components -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'cmp',\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   template: `Number of ticks: {{numberOfTicks}}`\n * })\n * class Cmp {\n *   numberOfTicks = 0;\n * \n *   constructor(ref: ChangeDetectorRef) {\n *     setInterval(() => {\n *       this.numberOfTicks ++\n *       // the following is required, otherwise the view will not be updated\n *       this.ref.markForCheck();\n *     }, 1000);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   template: `\n *     <cmp><cmp>\n *   `,\n * })\n * class App {\n * }\n * ```\n * @abstract\n * @return {?}\n */\nmarkForCheck() {}\n/**\n * Detaches the change detector from the change detector tree.\n * \n * The detached change detector will not be checked until it is reattached.\n * \n * This can also be used in combination with {\\@link ChangeDetectorRef#detectChanges} to implement\n * local change\n * detection checks.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n * \n * ### Example\n * \n * The following example defines a component with a large list of readonly data.\n * Imagine the data changes constantly, many times per second. For performance reasons,\n * we want to check and update the list every five seconds. We can do that by detaching\n * the component's change detector and doing a local check every five seconds.\n * \n * ```typescript\n * class DataProvider {\n *   // in a real application the returned data will be different every time\n *   get data() {\n *     return [1,2,3,4,5];\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'giant-list',\n *   template: `\n *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n *   `,\n * })\n * class GiantList {\n *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n *     ref.detach();\n *     setInterval(() => {\n *       this.ref.detectChanges();\n *     }, 5000);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   providers: [DataProvider],\n *   template: `\n *     <giant-list><giant-list>\n *   `,\n * })\n * class App {\n * }\n * ```\n * @abstract\n * @return {?}\n */\ndetach() {}\n/**\n * Checks the change detector and its children.\n * \n * This can also be used in combination with {\\@link ChangeDetectorRef#detach} to implement local\n * change detection\n * checks.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n * \n * ### Example\n * \n * The following example defines a component with a large list of readonly data.\n * Imagine, the data changes constantly, many times per second. For performance reasons,\n * we want to check and update the list every five seconds.\n * \n * We can do that by detaching the component's change detector and doing a local change detection\n * check\n * every five seconds.\n * \n * See {\\@link ChangeDetectorRef#detach} for more information.\n * @abstract\n * @return {?}\n */\ndetectChanges() {}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n * \n * This is used in development mode to verify that running change detection doesn't introduce\n * other changes.\n * @abstract\n * @return {?}\n */\ncheckNoChanges() {}\n/**\n * Reattach the change detector to the change detector tree.\n * \n * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n * checked during the next change detection run.\n * \n * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n * \n * The following example creates a component displaying `live` data. The component will detach\n * its change detector from the main change detector tree when the component's live property\n * is set to false.\n * \n * ```typescript\n * class DataProvider {\n *   data = 1;\n * \n *   constructor() {\n *     setInterval(() => {\n *       this.data = this.data * 2;\n *     }, 500);\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'live-data',\n *   inputs: ['live'],\n *   template: 'Data: {{dataProvider.data}}'\n * })\n * class LiveData {\n *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n * \n *   set live(value) {\n *     if (value)\n *       this.ref.reattach();\n *     else\n *       this.ref.detach();\n *   }\n * }\n * \n * \\@Component({ \n *   selector: 'app',\n *   providers: [DataProvider],\n *   template: `\n *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n *     <live-data [live]=\"live\"><live-data>\n *   `,\n * })\n * class App {\n *   live = true;\n * }\n * ```\n * @abstract\n * @return {?}\n */\nreattach() {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more Views can be attached.\n * \n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n * \n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n * \n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n * \n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport abstract class ViewContainerRef {\n/**\n * Anchor element that specifies the location of this container in the containing View.\n * <!-- TODO: rename to anchorElement -->\n * @abstract\n * @return {?}\n */\nelement() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\nparentInjector() {}\n/**\n * Destroys all Views in this container.\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n * @abstract\n * @param {?} index\n * @return {?}\n */\nget(index: number) {}\n/**\n * Returns the number of Views currently attached to this container.\n * @abstract\n * @return {?}\n */\nlength() {}\n/**\n * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n * into this container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the {\\@link ViewRef} for the newly created View.\n * @abstract\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number) {}\n/**\n * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n * specified `index`.\n * \n * The component is instantiated using its {\\@link ComponentFactory} which can be\n * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n * \n * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n * @abstract\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][]) {}\n/**\n * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number) {}\n/**\n * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef, currentIndex: number) {}\n/**\n * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n * `-1` if this container doesn't contain the View.\n * @abstract\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef) {}\n/**\n * Destroys a View attached to this container at the specified `index`.\n * \n * If `index` is not specified, the last View in the container will be removed.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number) {}\n/**\n * Use along with {\\@link #insert} to move a View within the current container.\n * \n * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n * \n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n * \n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nexport abstract class TemplateRef<C> {\n/**\n * @abstract\n * @return {?}\n */\nelementRef() {}\n/**\n * @abstract\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: C) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n  /**\n   * Prefix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathPrefix: string;\n\n  /**\n   * Suffix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T { return this._results.find(fn); }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n/**\n * @param {?} list\n * @return {?}\n */\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleFactoryLoader {\n/**\n * @abstract\n * @param {?} path\n * @return {?}\n */\nload(path: string) {}\n}\n\nlet /** @type {?} */ moduleFactories = new Map<string, NgModuleFactory<any>>();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const /** @type {?} */ existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id\n                    } - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\nexport function clearModulesForTest() {\n  moduleFactories = new Map<string, NgModuleFactory<any>>();\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nexport function getModuleFactory(id: string): NgModuleFactory<any> {\n  const /** @type {?} */ factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n","\nexport class ElementRef {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n */\npublic nativeElement: any;\n/**\n * @param {?} nativeElement\n */\nconstructor(nativeElement: any) { this.nativeElement = nativeElement; }\n}\n\nfunction ElementRef_tsickle_Closure_declarations() {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n * @type {?}\n */\nElementRef.prototype.nativeElement;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nsource() {}\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: any) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateText(parentElement: any, value: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: any, nodes: any[]) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: any, viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: any, viewAllNodes: any[]) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(renderElement: any, propertyName: string, propertyValue: any) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: any, attributeName: string, attributeValue: string) {}\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: any, className: string, isAdd: boolean) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: any, methodName: string, args?: any[]) {}\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: any, text: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]) {}\n}\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nrenderComponent(componentType: RenderComponentType) {}\n}\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2) {}\n}\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\ndata() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string) {}\n  /**\n   * This property is allowed to be null / undefined,\n   * in which case the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  destroyNode: (node: any) => void | null;\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any) {}\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void) {}\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {share} from 'rxjs/operator/share';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, Provider, ReflectiveInjector} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {NgModuleFactory, NgModuleInjector, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet /** @type {?} */ _devMode: boolean = true;\nlet /** @type {?} */ _runModeLocked: boolean = false;\nlet /** @type {?} */ _platform: PlatformRef;\n\nexport const /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n * \n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n * \n * \\@stable\n * @return {?}\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n * \n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n * \n * \\@experimental\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach(init => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: (extraProviders?: Provider[]) => PlatformRef, name: string,\n    providers: Provider[] = []): (extraProviders?: Provider[]) => PlatformRef {\n  const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders: Provider[] = []) => {\n    let /** @type {?} */ platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const /** @type {?} */ platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n/**\n * Destroy the existing platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform(): PlatformRef {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * \n * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n * explicitly by calling {\\@link createPlatform}().\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformRef {\n/**\n * Creates an instance of an `\\@NgModule` for the given platform\n * for offline compilation.\n * \n * ## Simple Example\n * \n * ```typescript\n * my_module.ts:\n * \n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {platformBrowser} from '\\@angular/platform-browser';\n * \n * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @abstract\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>) {}\n/**\n * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n * \n * ## Simple Example\n * \n * ```typescript\n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n * ```\n * \\@stable\n * @abstract\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions?: CompilerOptions|CompilerOptions[]) {}\n/**\n * Register a listener to be called when the platform is disposed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n/**\n * Retrieve the platform {\\@link Injector}, which is the parent injector for\n * every Angular application on the page and provides singleton providers.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * Destroy the Angular platform and all Angular applications on the page.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n}\n/**\n * @param {?} errorHandler\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler: ErrorHandler, callback: () => any): any {\n  try {\n    const /** @type {?} */ result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        errorHandler.handleError(e);\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch ( /** @type {?} */e) {\n    errorHandler.handleError(e);\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class PlatformRef_ extends PlatformRef {\nprivate _modules: NgModuleRef<any>[] = [];\nprivate _destroyListeners: Function[] = [];\nprivate _destroyed: boolean = false;\n/**\n * @param {?} _injector\n */\nconstructor(private _injector: Injector) { super(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n/**\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n  }\n/**\n * @param {?} moduleFactory\n * @param {?} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const /** @type {?} */ moduleRef = /** @type {?} */(( <NgModuleInjector<M>>moduleFactory.create(ngZoneInjector)));\n      const /** @type {?} */ exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone.onError.subscribe({next: (error: any) => { exceptionHandler.handleError(error); }});\n      return _callAndReportToErrorHandler(exceptionHandler, () => {\n        const /** @type {?} */ initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n/**\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n  }\n/**\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @param {?=} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [],\n      ngZone: NgZone = null): Promise<NgModuleRef<M>> {\n    const /** @type {?} */ compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */ compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n/**\n * @param {?} moduleRef\n * @return {?}\n */\nprivate _moduleDoBootstrap(moduleRef: NgModuleInjector<any>): void {\n    const /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n    if (moduleRef.bootstrapFactories.length > 0) {\n      moduleRef.bootstrapFactories.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction PlatformRef__tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformRef_.ctorParameters;\n/** @type {?} */\nPlatformRef_.prototype._modules;\n/** @type {?} */\nPlatformRef_.prototype._destroyListeners;\n/** @type {?} */\nPlatformRef_.prototype._destroyed;\n/** @type {?} */\nPlatformRef_.prototype._injector;\n}\n\n/**\n * A reference to an Angular application running on a page.\n * \n * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ApplicationRef {\n/**\n * Bootstrap a new component at the root level of the application.\n * \n * ### Bootstrap process\n * \n * When bootstrapping a new root component into an application, Angular mounts the\n * specified application component onto DOM elements identified by the [componentType]'s\n * selector and kicks off automatic change detection to finish initializing the component.\n * \n * ### Example\n * {\\@example core/ts/platform/platform.ts region='longform'}\n * @abstract\n * @param {?} componentFactory\n * @return {?}\n */\nbootstrap<C>(componentFactory: ComponentFactory<C>|Type<C>) {}\n/**\n * Invoke this method to explicitly process change detection and its side-effects.\n * \n * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n * further changes are detected. If additional changes are picked up during this second cycle,\n * bindings in the app have side-effects that cannot be resolved in a single change detection\n * pass.\n * In this case, Angular throws an error, since an Angular application can only have one change\n * detection pass during which all change detection must complete.\n * @abstract\n * @return {?}\n */\ntick() {}\n/**\n * Get a list of component types registered to this application.\n * This list is populated even before the component is created.\n * @abstract\n * @return {?}\n */\ncomponentTypes() {}\n/**\n * Get a list of components registered to this application.\n * @abstract\n * @return {?}\n */\ncomponents() {}\n/**\n * Attaches a view so that it will be dirty checked.\n * The view will be automatically detached when it is destroyed.\n * This will throw if the view is already attached to a ViewContainer.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nattachView(view: ViewRef) {}\n/**\n * Detaches a view from dirty checking again.\n * @abstract\n * @param {?} view\n * @return {?}\n */\ndetachView(view: ViewRef) {}\n/**\n * Returns the number of attached views.\n * @abstract\n * @return {?}\n */\nviewCount() {}\n/**\n * Returns an Observable that indicates when the application is stable or unstable.\n * @abstract\n * @return {?}\n */\nisStable() {}\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ApplicationRef_ extends ApplicationRef {\n/**\n * \\@internal\n */\nstatic _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\nprivate _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\nprivate _rootComponents: ComponentRef<any>[] = [];\nprivate _rootComponentTypes: Type<any>[] = [];\nprivate _views: InternalViewRef[] = [];\nprivate _runningTick: boolean = false;\nprivate _enforceNoNewChanges: boolean = false;\nprivate _isStable: Observable<boolean>;\nprivate _stable = true;\n/**\n * @param {?} _zone\n * @param {?} _console\n * @param {?} _injector\n * @param {?} _exceptionHandler\n * @param {?} _componentFactoryResolver\n * @param {?} _initStatus\n */\nconstructor(\nprivate _zone: NgZone,\nprivate _console: Console,\nprivate _injector: Injector,\nprivate _exceptionHandler: ErrorHandler,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _initStatus: ApplicationInitStatus) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      const stableSub: Subscription = this._zone.onStable.subscribe(() => {\n        NgZone.assertNotInAngularZone();\n\n        // Check whether there are no pending macro/micro tasks in the next tick\n        // to allow for NgZone to update the state.\n        scheduleMicroTask(() => {\n          if (!this._stable && !this._zone.hasPendingMacrotasks &&\n              !this._zone.hasPendingMicrotasks) {\n            this._stable = true;\n            observer.next(true);\n          }\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nattachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\ndetachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n/**\n * @param {?} componentOrFactory\n * @return {?}\n */\nbootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>): ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */ componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], componentFactory.selector, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */ listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n/**\n * @return {?}\n */\ntick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const /** @type {?} */ scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n/**\n * @return {?}\n */\nget viewCount() { return this._views.length; }\n/**\n * @return {?}\n */\nget componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n/**\n * @return {?}\n */\nget components(): ComponentRef<any>[] { return this._rootComponents; }\n/**\n * @return {?}\n */\nget isStable(): Observable<boolean> { return this._isStable; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n];\n}\n\nfunction ApplicationRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nApplicationRef_._tickScope;\n/** @type {?} */\nApplicationRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationRef_.ctorParameters;\n/** @type {?} */\nApplicationRef_.prototype._bootstrapListeners;\n/** @type {?} */\nApplicationRef_.prototype._rootComponents;\n/** @type {?} */\nApplicationRef_.prototype._rootComponentTypes;\n/** @type {?} */\nApplicationRef_.prototype._views;\n/** @type {?} */\nApplicationRef_.prototype._runningTick;\n/** @type {?} */\nApplicationRef_.prototype._enforceNoNewChanges;\n/** @type {?} */\nApplicationRef_.prototype._isStable;\n/** @type {?} */\nApplicationRef_.prototype._stable;\n/** @type {?} */\nApplicationRef_.prototype._zone;\n/** @type {?} */\nApplicationRef_.prototype._console;\n/** @type {?} */\nApplicationRef_.prototype._injector;\n/** @type {?} */\nApplicationRef_.prototype._exceptionHandler;\n/** @type {?} */\nApplicationRef_.prototype._componentFactoryResolver;\n/** @type {?} */\nApplicationRef_.prototype._initStatus;\n}\n\n/**\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nexport class Testability implements PublicTestability {\n/**\n * \\@internal\n */\n_pendingCount: number = 0;\n/**\n * \\@internal\n */\n_isZoneStable: boolean = true;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n */\n_didWork: boolean = false;\n/**\n * \\@internal\n */\n_callbacks: Function[] = [];\n/**\n * @param {?} _ngZone\n */\nconstructor(private _ngZone: NgZone) { this._watchAngularEvents(); }\n/**\n * \\@internal\n * @return {?}\n */\n_watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\nincreasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\ndecreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\nisStable(): boolean {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          (this._callbacks.pop())(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nwhenStable(callback: Function): void {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n/**\n * @return {?}\n */\ngetPendingRequestCount(): number { return this._pendingCount; }\n/**\n * @deprecated use findProviders\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindBindings(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n];\n}\n\nfunction Testability_tsickle_Closure_declarations() {\n/** @type {?} */\nTestability.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestability.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._pendingCount;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._isZoneStable;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n * @type {?}\n */\nTestability.prototype._didWork;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._callbacks;\n/** @type {?} */\nTestability.prototype._ngZone;\n}\n\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nexport class TestabilityRegistry {\n/**\n * \\@internal\n */\n_applications = new Map<any, Testability>();\nconstructor() { _testabilityGetter.addToWindow(this); }\n/**\n * @param {?} token\n * @param {?} testability\n * @return {?}\n */\nregisterApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\ngetTestability(elem: any): Testability { return this._applications.get(elem); }\n/**\n * @return {?}\n */\ngetAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n/**\n * @return {?}\n */\ngetAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n/**\n * @param {?} elem\n * @param {?=} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nTestabilityRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestabilityRegistry.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestabilityRegistry.prototype._applications;\n}\n\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability;\n}\nclass _NoopGetTestability implements GetTestability {\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {}\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet /** @type {?} */ _testabilityGetter: GetTestability = new _NoopGetTestability();\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter} from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n * \n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link run}.\n * \n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n * \n * ### Example\n * \n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n * \n * \\@Component({ \n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n * \n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n * \n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n * \n *   constructor(private _ngZone: NgZone) {}\n * \n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n * \n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n * \n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n * \n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class NgZone {\nprivate outer: Zone;\nprivate inner: Zone;\nprivate _hasPendingMicrotasks: boolean = false;\nprivate _hasPendingMacrotasks: boolean = false;\nprivate _isStable = true;\nprivate _nesting: number = 0;\nprivate _onUnstable: EventEmitter<any> = new EventEmitter(false);\nprivate _onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\nprivate _onStable: EventEmitter<any> = new EventEmitter(false);\nprivate _onErrorEvents: EventEmitter<any> = new EventEmitter(false);\n/**\n * @param {?} __0\n */\nconstructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n\n    Zone.assertZonePatched();\n\n    this.outer = this.inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      this.inner = this.inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      this.inner = this.inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    this.forkInnerZoneWithAngularBehavior();\n  }\n/**\n * @return {?}\n */\nstatic isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n/**\n * @return {?}\n */\nstatic assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n/**\n * @return {?}\n */\nstatic assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n * the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @param {?} fn\n * @return {?}\n */\nrun(fn: () => any): any { return this.inner.run(fn); }\n/**\n * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n * rethrown.\n * @param {?} fn\n * @return {?}\n */\nrunGuarded(fn: () => any): any { return this.inner.runGuarded(fn); }\n/**\n * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n * the function.\n * \n * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * outside of the Angular zone.\n * \n * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n * @param {?} fn\n * @return {?}\n */\nrunOutsideAngular(fn: () => any): any { return this.outer.run(fn); }\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n * @return {?}\n */\nget onUnstable(): EventEmitter<any> { return this._onUnstable; }\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n * @return {?}\n */\nget onMicrotaskEmpty(): EventEmitter<any> { return this._onMicrotaskEmpty; }\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n * @return {?}\n */\nget onStable(): EventEmitter<any> { return this._onStable; }\n/**\n * Notify that an error has been delivered.\n * @return {?}\n */\nget onError(): EventEmitter<any> { return this._onErrorEvents; }\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n * @return {?}\n */\nget isStable(): boolean { return this._isStable; }\n/**\n * @return {?}\n */\nget hasPendingMicrotasks(): boolean { return this._hasPendingMicrotasks; }\n/**\n * @return {?}\n */\nget hasPendingMacrotasks(): boolean { return this._hasPendingMacrotasks; }\n/**\n * @return {?}\n */\nprivate checkStable() {\n    if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n      try {\n        this._nesting++;\n        this._onMicrotaskEmpty.emit(null);\n      } finally {\n        this._nesting--;\n        if (!this._hasPendingMicrotasks) {\n          try {\n            this.runOutsideAngular(() => this._onStable.emit(null));\n          } finally {\n            this._isStable = true;\n          }\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate forkInnerZoneWithAngularBehavior() {\n    this.inner = this.inner.fork({\n      name: 'angular',\n      properties: /** @type {?} */(( <any>{'isAngularZone': true})),\n      onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task,\n                     applyThis: any, applyArgs: any): any => {\n        try {\n          this.onEnter();\n          return delegate.invokeTask(target, task, applyThis, applyArgs);\n        } finally {\n          this.onLeave();\n        }\n      },\n\n\n      onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n                 applyThis: any, applyArgs: any[], source: string): any => {\n        try {\n          this.onEnter();\n          return delegate.invoke(target, callback, applyThis, applyArgs, source);\n        } finally {\n          this.onLeave();\n        }\n      },\n\n      onHasTask:\n          (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n              // We are only interested in hasTask events which originate from our zone\n              // (A child hasTask event is not interesting to us)\n              if (hasTaskState.change == 'microTask') {\n                this.setHasMicrotask(hasTaskState.microTask);\n              } else if (hasTaskState.change == 'macroTask') {\n                this.setHasMacrotask(hasTaskState.macroTask);\n              }\n            }\n          },\n\n      onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n        delegate.handleError(target, error);\n        this.triggerError(error);\n        return false;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate onEnter() {\n    this._nesting++;\n    if (this._isStable) {\n      this._isStable = false;\n      this._onUnstable.emit(null);\n    }\n  }\n/**\n * @return {?}\n */\nprivate onLeave() {\n    this._nesting--;\n    this.checkStable();\n  }\n/**\n * @param {?} hasMicrotasks\n * @return {?}\n */\nprivate setHasMicrotask(hasMicrotasks: boolean) {\n    this._hasPendingMicrotasks = hasMicrotasks;\n    this.checkStable();\n  }\n/**\n * @param {?} hasMacrotasks\n * @return {?}\n */\nprivate setHasMacrotask(hasMacrotasks: boolean) { this._hasPendingMacrotasks = hasMacrotasks; }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate triggerError(error: any) { this._onErrorEvents.emit(error); }\n}\n\nfunction NgZone_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZone.prototype.outer;\n/** @type {?} */\nNgZone.prototype.inner;\n/** @type {?} */\nNgZone.prototype._hasPendingMicrotasks;\n/** @type {?} */\nNgZone.prototype._hasPendingMacrotasks;\n/** @type {?} */\nNgZone.prototype._isStable;\n/** @type {?} */\nNgZone.prototype._nesting;\n/** @type {?} */\nNgZone.prototype._onUnstable;\n/** @type {?} */\nNgZone.prototype._onMicrotaskEmpty;\n/** @type {?} */\nNgZone.prototype._onStable;\n/** @type {?} */\nNgZone.prototype._onErrorEvents;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n * \n * ### Examples\n * \n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n * \n * ```\n * \\@Component({ \n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n * \n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n * \n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n * \n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n * \n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n * \n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n/**\n * Creates an instance of [EventEmitter], which depending on [isAsync],\n * delivers events synchronously or asynchronously.\n * @param {?=} isAsync\n */\nconstructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nemit(value?: T) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn: (t: any) => any;\n    let /** @type {?} */ errorFn = (err: any): any => null;\n    let /** @type {?} */ completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\nfunction EventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nEventEmitter.prototype.__isAsync;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n\n\n/**\n * True if WTF is enabled.\n */\nexport const /** @type {?} */ wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nexport const /** @type {?} */ wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nexport const /** @type {?} */ wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nexport const /** @type {?} */ wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nexport const /** @type {?} */ wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n/**\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: T): T {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory} from './component_factory';\nimport {CodegenComponentFactoryResolver, ComponentFactoryBoundToModule, ComponentFactoryResolver} from './component_factory_resolver';\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n * \n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleRef<T> {\n/**\n * The injector that contains all of the providers of the NgModule.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The ComponentFactoryResolver to get hold of the ComponentFactories\n * declared in the `entryComponents` property of the module.\n * @abstract\n * @return {?}\n */\ncomponentFactoryResolver() {}\n/**\n * The NgModule instance.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * Destroys the module instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the module is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n}\n/**\n * \\@experimental\n */\nexport class NgModuleFactory<T> {\n/**\n * @param {?} _injectorClass\n * @param {?} _moduleType\n */\nconstructor(\nprivate _injectorClass: {new (parentInjector: Injector): NgModuleInjector<T>},\nprivate _moduleType: Type<T>) {}\n/**\n * @return {?}\n */\nget moduleType(): Type<T> { return this._moduleType; }\n/**\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector): NgModuleRef<T> {\n    const /** @type {?} */ instance = new this._injectorClass(parentInjector || Injector.NULL);\n    instance.create();\n    return instance;\n  }\n}\n\nfunction NgModuleFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleFactory.prototype._injectorClass;\n/** @type {?} */\nNgModuleFactory.prototype._moduleType;\n}\n\n\nconst /** @type {?} */ _UNDEFINED = new Object();\n/**\n * @abstract\n */\nexport abstract class NgModuleInjector<T> implements Injector, NgModuleRef<T> {\n  bootstrapFactories: ComponentFactory<any>[];\n  instance: T;\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\nprivate _cmpFactoryResolver: CodegenComponentFactoryResolver;\n/**\n * @param {?} parent\n * @param {?} factories\n * @param {?} bootstrapFactories\n */\nconstructor(\npublic parent: Injector, factories: ComponentFactory<any>[],\n      bootstrapFactories: ComponentFactory<any>[]) {\n    this.bootstrapFactories =\n        bootstrapFactories.map(f => new ComponentFactoryBoundToModule(f, this));\n    this._cmpFactoryResolver = new CodegenComponentFactoryResolver(\n        factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL), this);\n  }\n/**\n * @return {?}\n */\ncreate() { this.instance = this.createInternal(); }\n/**\n * @abstract\n * @return {?}\n */\ncreateInternal() {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    if (token === Injector || token === NgModuleRef) {\n      return this;\n    }\n\n    if (token === ComponentFactoryResolver) {\n      return this._cmpFactoryResolver;\n    }\n\n    const /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n    return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n  }\n/**\n * @abstract\n * @param {?} token\n * @param {?} notFoundValue\n * @return {?}\n */\ngetInternal(token: any, notFoundValue: any) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\nget componentFactoryResolver(): ComponentFactoryResolver { return this._cmpFactoryResolver; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    this.destroyInternal();\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @abstract\n * @return {?}\n */\ndestroyInternal() {}\n}\n\nfunction NgModuleInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleInjector.prototype.bootstrapFactories;\n/** @type {?} */\nNgModuleInjector.prototype.instance;\n/** @type {?} */\nNgModuleInjector.prototype._destroyListeners;\n/** @type {?} */\nNgModuleInjector.prototype._destroyed;\n/** @type {?} */\nNgModuleInjector.prototype._cmpFactoryResolver;\n/** @type {?} */\nNgModuleInjector.prototype.parent;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n/**\n * @abstract\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: Type<T>) {}\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component) || this._parent.resolveComponentFactory(component);\n\n    return factory ? new ComponentFactoryBoundToModule(factory, this._ngModule) : null;\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nlocation() {}\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nhostView() {}\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nchangeDetectorRef() {}\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactory<C> {\n/**\n * @abstract\n * @return {?}\n */\nselector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * Creates a new component.\n * @abstract\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n * \n * \\@experimental\n */\nexport class ModuleWithComponentFactories<T> {\n/**\n * @param {?} ngModuleFactory\n * @param {?} componentFactories\n */\nconstructor(\npublic ngModuleFactory: NgModuleFactory<T>,\npublic componentFactories: ComponentFactory<any>[]) {}\n}\n\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n}\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * \n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nexport class Compiler {\n/**\n * Compiles the given NgModule and all of its components. All templates of the components listed\n * in `entryComponents` have to be inlined.\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n/**\n * Compiles the given NgModule and all of its components\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n/**\n * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n/**\n * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n/**\n * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n * the template of the given component.\n * This is used by the `upgrade` library to compile the appropriate transclude content\n * in the AngularJS wrapper component.\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] { throw _throwError(); }\n/**\n * Clears all caches.\n * @return {?}\n */\nclearCache(): void {}\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n}\n\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated since v4 this option has no effect anymore.\n   */\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: any[],\n  missingTranslation?: MissingTranslationStrategy,\n  // Whether to support the `<template>` tag and the `template` attribute to define angular\n  // templates. They have been deprecated in 4.x, `<ng-template>` should be used instead.\n  enableLegacyTemplate?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nexport const /** @type {?} */ COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n/**\n * A factory for creating a Compiler\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class CompilerFactory {\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\ncreateCompiler(options?: CompilerOptions[]) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Console_tsickle_Closure_declarations() {\n/** @type {?} */\nConsole.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConsole.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nexport const /** @type {?} */ APP_ID = new InjectionToken<string>('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nexport const /** @type {?} */ APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: /** @type {?} */(( <any[]>[])),\n};\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nexport const /** @type {?} */ PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nexport const /** @type {?} */ PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nexport const /** @type {?} */ APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nexport const /** @type {?} */ PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nexport const /** @type {?} */ APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(  appInits: (() => any)[]) {\n    const asyncInitPromises: Promise<any>[] = [];\n    if (appInits) {\n      for (let i = 0; i < appInits.length; i++) {\n        const initResult = appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n    this._donePromise = Promise.all(asyncInitPromises).then(() => { this._done = true; });\n    if (asyncInitPromises.length === 0) {\n      this._done = true;\n    }\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n/**\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nexport function merge<V>(m1: {[key: string]: V}, m2: {[key: string]: V}): {[key: string]: V} {\n  const /** @type {?} */ m: {[key: string]: V} = {};\n\n  for (const /** @type {?} */ k of Object.keys(m1)) {\n    m[k] = m1[k];\n  }\n\n  for (const /** @type {?} */ k of Object.keys(m2)) {\n    m[k] = m2[k];\n  }\n\n  return m;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n * \n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n * \n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n * \n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n * \n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n * Turns an array of provider definitions into an array of resolved providers.\n * \n * A resolution is a process of flattening multiple nested arrays and converting individual\n * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n * \n * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n * \n * expect(providers.length).toEqual(2);\n * \n * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n * expect(providers[0].key.displayName).toBe(\"Car\");\n * expect(providers[0].dependencies.length).toEqual(1);\n * expect(providers[0].factory).toBeDefined();\n * \n * expect(providers[1].key.displayName).toBe(\"Engine\");\n * });\n * ```\n * \n * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n * Resolves an array of providers and creates an injector from those providers.\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \n * This function is slower than the corresponding `fromResolvedProviders`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Provider[], parent: Injector = null): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n * Creates an injector from previously resolved providers.\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, Engine]);\n * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \\@experimental\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent: Injector = null):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n/**\n * Parent of this injector.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n * \n * ```typescript\n * var parent = ReflectiveInjector.resolveAndCreate([]);\n * var child = parent.resolveAndCreateChild([]);\n * expect(child.parent).toBe(parent);\n * ```\n * @abstract\n * @return {?}\n */\nparent() {}\n/**\n * Resolves an array of providers and creates a child injector from those providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n * var child = parent.resolveAndCreateChild([ChildProvider]);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * \n * This function is slower than the corresponding `createChildFromResolved`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]) {}\n/**\n * Creates a child injector from previously resolved providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n * \n * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n * var child = parent.createChildFromResolved(childProviders);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * @abstract\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]) {}\n/**\n * Resolves a provider and instantiates an object in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * \n * var car = injector.resolveAndInstantiate(Car);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider) {}\n/**\n * Instantiates an object using a resolved provider in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * var carProvider = ReflectiveInjector.resolve([Car])[0];\n * var car = injector.instantiateResolved(carProvider);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider) {}\n/**\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n/**\n * \\@internal\n */\n_constructionCounter: number = 0;\n/**\n * \\@internal\n */\npublic _providers: ResolvedReflectiveProvider[];\n/**\n * \\@internal\n */\npublic _parent: Injector;\n\n  keyIds: number[];\n  objs: any[];\n/**\n * Private\n * @param {?} _providers\n * @param {?=} _parent\n */\nconstructor(_providers: ResolvedReflectiveProvider[], _parent: Injector = null) {\n    this._providers = _providers;\n    this._parent = _parent;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget parent(): Injector { return this._parent; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n/**\n * \\@internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @return {?}\n */\nprivate _getMaxNumberOfObjects(): number { return this.objs.length; }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\nprivate _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\n    let /** @type {?} */ deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch ( /** @type {?} */e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let /** @type {?} */ obj: any;\n    try {\n      obj = factory(...deps);\n    } catch ( /** @type {?} */e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\nprivate _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} visibility\n * @param {?} notFoundValue\n * @return {?}\n */\nprivate _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf, notFoundValue: any): any {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\nprivate _getObjByKeyId(keyId: number): any {\n    for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} visibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf): any {\n    let /** @type {?} */ inj: Injector;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n/**\n * @return {?}\n */\nget displayName(): string {\n    const /** @type {?} */ providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n}\n\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._constructionCounter;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._providers;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._parent;\n/** @type {?} */\nReflectiveInjector_.prototype.keyIds;\n/** @type {?} */\nReflectiveInjector_.prototype.objs;\n}\n\n\nconst /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const /** @type {?} */ res: any[] = new Array(injector._providers.length);\n  for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n/**\n * @param {?} key\n * @param {?} optional\n * @param {?} visibility\n */\nconstructor(\npublic key: ReflectiveKey,\npublic optional: boolean,\npublic visibility: Self|SkipSelf) {}\n/**\n * @param {?} key\n * @return {?}\n */\nstatic fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveDependency.prototype.key;\n/** @type {?} */\nReflectiveDependency.prototype.optional;\n/** @type {?} */\nReflectiveDependency.prototype.visibility;\n}\n\n\nconst /** @type {?} */ _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a {@link Provider} used by the {@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n/**\n * @param {?} key\n * @param {?} resolvedFactories\n * @param {?} multiProvider\n */\nconstructor(\npublic key: ReflectiveKey,\npublic resolvedFactories: ResolvedReflectiveFactory[],\npublic multiProvider: boolean) {}\n/**\n * @return {?}\n */\nget resolvedFactory(): ResolvedReflectiveFactory { return this.resolvedFactories[0]; }\n}\n\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.key;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.resolvedFactories;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.multiProvider;\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport class ResolvedReflectiveFactory {\n/**\n * @param {?} factory\n * @param {?} dependencies\n */\nconstructor(\npublic factory: Function,\npublic dependencies: ReflectiveDependency[]) {}\n}\n\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.factory;\n/**\n * Arguments (dependencies) to the `factory` function.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.dependencies;\n}\n\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let /** @type {?} */ factoryFn: Function;\n  let /** @type {?} */ resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n * \n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */ resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && ( /** @type {?} */((b as any))).provide !== undefined) {\n      res.push( /** @type {?} */((b as NormalizedProvider)));\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @return {?}\n */\nexport function constructDependencies(\n    typeOrFunc: any, dependencies: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */ params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let /** @type {?} */ token: any = null;\n  let /** @type {?} */ optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata['token'], optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let /** @type {?} */ visibility: Self|SkipSelf = null;\n\n  for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */ paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata['token'];\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {ReflectorReader} from './reflector_reader';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector extends ReflectorReader {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) { super(); }\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n","\n/**\n * Provides read-only access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n * @abstract\n */\nexport abstract class ReflectorReader {\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} typeOrFunc\n * @return {?}\n */\nimportUri(typeOrFunc: /*Type*/ any) {}\n/**\n * @abstract\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any) {}\n/**\n * @abstract\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const /** @type {?} */ DELEGATE_CTOR =\n    /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?(\\S+\\s+!==\\s+null\\s+&&\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][] {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[] {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]} {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @whatItDoes Represents a type that a Component or other object is instances of.\n *\n * @description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @stable\n */\nexport const /** @type {?} */ Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n * \n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n * \n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n * \n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nexport class ReflectiveKey {\n/**\n * Private\n * @param {?} token\n * @param {?} id\n */\nconstructor(public token: Object,\npublic id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n/**\n * Returns a stringified token.\n * @return {?}\n */\nget displayName(): string { return stringify(this.token); }\n/**\n * Retrieves a `Key` for a token.\n * @param {?} token\n * @return {?}\n */\nstatic get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n/**\n * @return {?} the number of keys registered in the system.\n */\nstatic get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveKey.prototype.token;\n/** @type {?} */\nReflectiveKey.prototype.id;\n}\n\n/**\n * \\@internal\n */\nexport class KeyRegistry {\nprivate _allKeys = new Map<Object, ReflectiveKey>();\n/**\n * @param {?} token\n * @return {?}\n */\nget(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token);\n    }\n\n    const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n/**\n * @return {?}\n */\nget numberOfKeys(): number { return this._allKeys.size; }\n}\n\nfunction KeyRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyRegistry.prototype._allKeys;\n}\n\n\nconst /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (this: InjectionError) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (this: InjectionError) => string,\n    originalError?: Error): InjectionError {\n  const /** @type {?} */ error = /** @type {?} */(( (originalError ? wrappedError('', originalError) : Error()) as InjectionError));\n  error.addKey = addKey;\n  error.keys = [key];\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  error.message = error.constructResolvingMessage();\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  this.message = this.constructResolvingMessage();\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(this: InjectionError) {\n    const /** @type {?} */ first = stringify(this.keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(this.keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(this: InjectionError) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(this.keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(this: InjectionError) {\n    const /** @type {?} */ first = stringify(this.keys[0].token);\n    return `${getOriginalError(this).message}: Error during instantiation of ${first}!${constructResolvingPath(this.keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const /** @type {?} */ signature: string[] = [];\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n    const /** @type {?} */ parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n * \n * \\@description \n * \n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n * \n * ### Example\n * \n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n * \n * \\@NgModule({ \n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n * \n * \\@stable\n */\nexport class ErrorHandler {\n/**\n * \\@internal\n */\n_console: Console = console;\n/**\n * \\@internal\n */\nrethrowError: boolean;\n/**\n * @param {?=} rethrowError\n */\nconstructor(rethrowError: boolean = true) { this.rethrowError = rethrowError; }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): void {\n    const /** @type {?} */ originalError = this._findOriginalError(error);\n    const /** @type {?} */ context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */ errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n\n    // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n    // when an error happens. If we do not rethrow, bootstrap will always succeed.\n    if (this.rethrowError) throw error;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findOriginalError(error: Error): any {\n    let /** @type {?} */ e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nfunction ErrorHandler_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype._console;\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype.rethrowError;\n}\n\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message: string, originalError: any): Error {\n  const /** @type {?} */ msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view/index';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectionToken} from './injection_token';\n\nconst /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport const /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector implements Injector {\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse \n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new _NullInjector();\n/**\n * Retrieves an instance from the injector based on the provided token.\n * If not found:\n * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n * Injector.THROW_IF_NOT_FOUND is given\n * - Returns the `notFoundValue` otherwise\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T) {}\n/**\n * @deprecated from v4.0.0 use Type<T> or InjectToken<T>\n * @suppress {duplicate}\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\n\nfunction Injector_tsickle_Closure_declarations() {\n/** @type {?} */\nInjector.THROW_IF_NOT_FOUND;\n/** @type {?} */\nInjector.NULL;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n/**\n * Allows to refer to references which are not yet defined.\n * \n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n * \n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  ( /** @type {?} */((<any>forwardRefFn))).__forward_ref__ = forwardRef;\n  ( /** @type {?} */((<any>forwardRefFn))).toString = function() { return stringify(this()); };\n  return ( /** @type {?} */((<Type<any>> /** @type {?} */((<any>forwardRefFn)))));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * \n * Acts as the identity function when given a non-forward-ref value.\n * \n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n * \n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return ( /** @type {?} */((<ForwardRefFn>type)))();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectDecorator {\n  /**\n   * @whatItDoes A parameter decorator that specifies a dependency.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Inject(\"MyEngine\") public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, {@link Injector} will use the type annotation of the\n   * parameter.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   *\n   * @stable\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @stable\n */\nexport interface Inject { token: any; }\n\n/**\n * Inject decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Inject: InjectDecorator = makeParamDecorator('Inject', [['token', undefined]]);\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @stable\n */\nexport interface OptionalDecorator {\n  /**\n   * @whatItDoes A parameter metadata that marks a dependency as optional.\n   * {@link Injector} provides `null` if the dependency is not found.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Optional() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @stable\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Optional: OptionalDecorator = makeParamDecorator('Optional', []);\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectableDecorator {\n  /**\n   * @whatItDoes A marker metadata that marks a class as available to {@link Injector} for creation.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {}\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * {@link Injector} will throw {@link NoAnnotationError} when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @stable\n */\nexport interface Injectable {}\n\n/**\n * Injectable decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Injectable: InjectableDecorator = /** @type {?} */(( <InjectableDecorator>makeDecorator('Injectable', [])));\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @stable\n */\nexport interface SelfDecorator {\n  /**\n   * @whatItDoes Specifies that an {@link Injector} should retrieve a dependency only from itself.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Self() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @stable\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Self: SelfDecorator = makeParamDecorator('Self', []);\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @stable\n */\nexport interface SkipSelfDecorator {\n  /**\n   * @whatItDoes Specifies that the dependency resolution should start from the parent injector.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@SkipSelf() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @stable\n */\nexport interface SkipSelf {}\n\n/**\n * SkipSelf decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf', []);\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @stable\n */\nexport interface HostDecorator {\n  /**\n   * @whatItDoes Specifies that an injector should retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Host() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @stable\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Host: HostDecorator = makeParamDecorator('Host', []);\n","\n/**\n * \\@whatItDoes Represents the version of Angular\n * \n * \\@stable\n */\nexport class Version {\n/**\n * @param {?} full\n */\nconstructor(public full: string) {}\n/**\n * @return {?}\n */\nget major(): string { return this.full.split('.')[0]; }\n/**\n * @return {?}\n */\nget minor(): string { return this.full.split('.')[1]; }\n/**\n * @return {?}\n */\nget patch(): string { return this.full.split('.').slice(2).join('.'); }\n}\n\nfunction Version_tsickle_Closure_declarations() {\n/** @type {?} */\nVersion.prototype.full;\n}\n\n\n/**\n * @stable\n */\nexport const /** @type {?} */ VERSION = new Version('4.0.0-rc.3-992aa17');\n","\nexport type ViewEncapsulation = number;\nexport let ViewEncapsulation: any = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * Metadata properties available for configuring Views.\n * \n * For details on the `\\@Component` annotation, see {\\@link Component}.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n * \n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * \n * @deprecated Use Component instead.\n * \n * {\\@link Component}\n */\nexport class ViewMetadata {\n  /** {@link Component.templateUrl} */\n  templateUrl: string;\n  /** {@link Component.template} */\n  template: string;\n  /** {@link Component.stylesUrl} */\n  styleUrls: string[];\n  /** {@link Component.styles} */\n  styles: string[];\n  /** {@link Component.encapsulation} */\n  encapsulation: ViewEncapsulation;\n  /** {@link Component.animation} */\n  animations: any[];\n  /** {@link Component.interpolation} */\n  interpolation: [string, string];\n/**\n * @param {?=} __0\n */\nconstructor(\n      {templateUrl, template, encapsulation, styles, styleUrls, animations, interpolation}: {\n        templateUrl?: string,\n        template?: string,\n        encapsulation?: ViewEncapsulation,\n        styles?: string[],\n        styleUrls?: string[],\n        animations?: any[],\n        interpolation?: [string, string]\n      } = {}) {\n    this.templateUrl = templateUrl;\n    this.template = template;\n    this.styleUrls = styleUrls;\n    this.styles = styles;\n    this.encapsulation = encapsulation;\n    this.animations = animations;\n    this.interpolation = interpolation;\n  }\n}\n\nfunction ViewMetadata_tsickle_Closure_declarations() {\n/**\n * {\\@link Component.templateUrl}\n * @type {?}\n */\nViewMetadata.prototype.templateUrl;\n/**\n * {\\@link Component.template}\n * @type {?}\n */\nViewMetadata.prototype.template;\n/**\n * {\\@link Component.stylesUrl}\n * @type {?}\n */\nViewMetadata.prototype.styleUrls;\n/**\n * {\\@link Component.styles}\n * @type {?}\n */\nViewMetadata.prototype.styles;\n/**\n * {\\@link Component.encapsulation}\n * @type {?}\n */\nViewMetadata.prototype.encapsulation;\n/**\n * {\\@link Component.animation}\n * @type {?}\n */\nViewMetadata.prototype.animations;\n/**\n * {\\@link Component.interpolation}\n * @type {?}\n */\nViewMetadata.prototype.interpolation;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * A wrapper around a module that also includes the providers.\n *\n * @stable\n */\nexport interface ModuleWithProviders {\n  ngModule: Type<any>;\n  providers?: Provider[];\n}\n\n/**\n * Interface for schema definitions in @NgModules.\n *\n * @experimental\n */\nexport interface SchemaMetadata { name: string; }\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * @stable\n */\nexport const /** @type {?} */ CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\n/**\n * Defines a schema that will allow any property on any element.\n *\n * @experimental\n */\nexport const /** @type {?} */ NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @stable\n */\nexport interface NgModuleDecorator {\n  /**\n   * Defines an NgModule.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @stable\n */\nexport interface NgModule {\n  /**\n   * Defines the set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Specifies a list of directives/pipes that belong to this module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of modules whose exported directives/pipes\n   * should be available to templates in this module.\n   * This can also contain {@link ModuleWithProviders}.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   */\n  imports?: Array<Type<any>|ModuleWithProviders|any[]>;\n\n  /**\n   * Specifies a list of directives/pipes/modules that can be used within the template\n   * of any component that is part of an Angular module\n   * that imports this Angular module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of components that should be compiled when this module is defined.\n   * For each component listed here, Angular will create a {@link ComponentFactory}\n   * and store it in the {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * Defines the components that should be bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * will automatically be added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * Elements and properties that are not Angular components nor directives have to be declared in\n   * the schema.\n   *\n   * Available schemas:\n   * - `NO_ERRORS_SCHEMA`: any elements and properties are allowed,\n   * - `CUSTOM_ELEMENTS_SCHEMA`: any custom elements (tag name has \"-\") with any properties are\n   *   allowed.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA` we're trusting that\n   * allowed elements (and its properties) securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * An opaque ID for this module, e.g. a name or a path. Used to identify modules in\n   * `getModuleFactory`. If left `undefined`, the `NgModule` will not be registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n}\n\n/**\n * NgModule decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ NgModule: NgModuleDecorator = /** @type {?} */(( <NgModuleDecorator>makeDecorator('NgModule', {\n  providers: undefined,\n  declarations: undefined,\n  imports: undefined,\n  exports: undefined,\n  entryComponents: undefined,\n  bootstrap: undefined,\n  schemas: undefined,\n  id: undefined,\n})));","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\n\nimport {ViewEncapsulation} from './view';\n\n\n/**\n * Type of the Directive decorator / constructor function.\n *\n * @stable\n */\nexport interface DirectiveDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular directive and collects directive configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * }\n   * ```\n   *\n   * @description\n   *\n   * Directive decorator allows you to mark a class as an Angular directive and provide additional\n   * metadata that determines how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directives allow you to attach behavior to elements in the DOM..\n   *\n   * A directive must belong to an NgModule in order for it to be usable\n   * by another directive, component, or application. To specify that a directive is a member of an\n   * NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Directive decorator,\n   * directives can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   * attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **outputs** - list of class property names that expose output events that others can\n   * subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the {@link Directive} decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries.\n   *\n   * `selector` may be declared as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   *\n   * ### Example\n   *\n   * Suppose we have a directive with an `input[type=text]` selector.\n   *\n   * And the following HTML:\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   * The directive would only be instantiated on the `<input type=\"text\">` element.\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   *\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ivhfXY?p=preview))\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   * class App {}\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/d5CNq7?p=preview))\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   *   outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n   * })\n   * class IntervalDir {\n   *   everySecond = new EventEmitter();\n   *   five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Specify the events, actions, properties and attributes related to the host element.\n   *\n   * ## Host Listeners\n   *\n   * Specifies which DOM events a directive listens to via a set of `(event)` to `method`\n   * key-value pairs:\n   *\n   * - `event`: the DOM event that the directive listens to.\n   * - `statement`: the statement to execute when the event occurs.\n   * If the evaluation of the statement returns `false`, then `preventDefault`is applied on the DOM\n   * event.\n   *\n   * To listen to global events, a target must be added to the event name.\n   * The target can be `window`, `document` or `body`.\n   *\n   * When writing a directive event binding, you can also refer to the $event local variable.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/DlA5KU?p=preview))\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'button[counting]',\n   *   host: {\n   *     '(click)': 'onClick($event.target)'\n   *   }\n   * })\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   onClick(btn) {\n   *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<button counting>Increment</button>`\n   * })\n   * class App {}\n   * ```\n   *\n   * ## Host Property Bindings\n   *\n   * Specifies which DOM properties a directive updates.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/gNg0ED?p=preview))\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[ngModel]',\n   *   host: {\n   *     '[class.valid]': 'valid',\n   *     '[class.invalid]': 'invalid'\n   *   }\n   * })\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   get valid { return this.control.valid; }\n   *   get invalid { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   * ## Attributes\n   *\n   * Specifies static attributes that should be propagated to a host element.\n   *\n   * ### Example\n   *\n   * In this example using `my-button` directive (ex.: `<div my-button></div>`) on a host element\n   * (here: `<div>` ) will ensure that this element will get the \"button\" role.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[my-button]',\n   *   host: {\n   *     'role': 'button'\n   *   }\n   * })\n   * class MyButton {\n   * }\n   * ```\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'greet',\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   *\n   * ```\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * ### Example\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   */\n  queries?: {[key: string]: any};\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Directive: DirectiveDecorator = /** @type {?} */(( <DirectiveDecorator>makeDecorator('Directive', {\n  selector: undefined,\n  inputs: undefined,\n  outputs: undefined,\n  host: undefined,\n  providers: undefined,\n  exportAs: undefined,\n  queries: undefined\n})));\n\n/**\n * Type of the Component decorator / constructor function.\n *\n * @stable\n */\nexport interface ComponentDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular component and collects component configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @description\n   * Component decorator allows you to mark a class as an Angular component and provide additional\n   * metadata that determines how the component should be processed, instantiated and used at\n   * runtime.\n   *\n   * Components are the most basic building block of an UI in an Angular application.\n   * An Angular application is a tree of Angular components.\n   * Angular components are a subset of directives. Unlike directives, components always have\n   * a template and only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be usable\n   * by another component or application. To specify that a component is a member of an NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Component decorator,\n   * components can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **animations** - list of animations of this component\n   * * **changeDetection** - change detection strategy used by this component\n   * * **encapsulation** - style encapsulation strategy used by this component\n   * * **entryComponents** - list of components that are dynamically inserted into the view of this\n   *   component\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   *   attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **interpolation** - custom interpolation markers used in this component's template\n   * * **moduleId** - ES/CommonJS module id of the file in which this component is defined\n   * * **outputs** - list of class property names that expose output events that others can\n   *   subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   * * **styleUrls** - list of urls to stylesheets to be applied to this component's view\n   * * **styles** - inline-defined styles to be applied to this component's view\n   * * **template** - inline-defined template for the view\n   * * **templateUrl** - url to an external file containing a template for the view\n   * * **viewProviders** - list of providers available to this component and its view children\n   *\n   * ### Example\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the {@link Component} decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Type of the Component metadata.\n *\n * @stable\n */\nexport interface Component extends Directive {\n  /**\n   * Defines the used change detection strategy.\n   *\n   * When a component is instantiated, Angular creates a change detector, which is responsible for\n   * propagating the component's bindings.\n   *\n   * The `changeDetection` property defines, whether the change detection will be checked every time\n   * or only when the component tells it to do so.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module id of the module that contains the component.\n   * Needed to be able to resolve relative urls for templates and styles.\n   * In CommonJS, this can always be set to `module.id`, similarly SystemJS exposes `__moduleName`\n   * variable within each module.\n   *\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'someDir',\n   *   moduleId: module.id\n   * })\n   * class SomeDir {\n   * }\n   *\n   * ```\n   */\n  moduleId?: string;\n\n  /**\n   * Specifies a template URL for an Angular component.\n   *\n   *Only one of `templateUrl` or `template` can be defined per View.\n   */\n  templateUrl?: string;\n\n  /**\n   * Specifies an inline template for an Angular component.\n   *\n   * Only one of `templateUrl` or `template` can be defined per Component.\n   */\n  template?: string;\n\n  /**\n   * Specifies stylesheet URLs for an Angular component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * Specifies inline stylesheets for an Angular component.\n   */\n  styles?: string[];\n\n  /**\n   * Animations are defined on components via an animation-like DSL. This DSL approach to describing\n   * animations allows for a flexibility that both benefits developers and the framework.\n   *\n   * Animations work by listening on state changes that occur on an element within\n   * the template. When a state change occurs, Angular can then take advantage and animate the\n   * arc in between. This works similar to how CSS transitions work, however, by having a\n   * programmatic DSL, animations are not limited to environments that are DOM-specific.\n   * (Angular can also perform optimizations behind the scenes to make animations more performant.)\n   *\n   * For animations to be available for use, animation state changes are placed within\n   * {@link trigger animation triggers} which are housed inside of the `animations` annotation\n   * metadata. Within a trigger both {@link state state} and {@link transition transition} entries\n   * can be placed.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'animation-cmp',\n   *   templateUrl: 'animation-cmp.html',\n   *   animations: [\n   *     // this here is our animation trigger that\n   *     // will contain our state change animations.\n   *     trigger('myTriggerName', [\n   *       // the styles defined for the `on` and `off`\n   *       // states declared below are persisted on the\n   *       // element once the animation completes.\n   *       state('on', style({ opacity: 1 }),\n   *       state('off', style({ opacity: 0 }),\n   *\n   *       // this here is our animation that kicks off when\n   *       // this state change jump is true\n   *       transition('on => off', [\n   *         animate(\"1s\")\n   *       ])\n   *     ])\n   *   ]\n   * })\n   * ```\n   *\n   * As depicted in the code above, a group of related animation states are all contained within\n   * an animation `trigger` (the code example above called the trigger `myTriggerName`).\n   * When a trigger is created then it can be bound onto an element within the component's\n   * template via a property prefixed by an `@` symbol followed by trigger name and an expression\n   * that\n   * is used to determine the state value for that trigger.\n   *\n   * ```html\n   * <!-- animation-cmp.html -->\n   * <div @myTriggerName=\"expression\">...</div>\n   * ```\n   *\n   * For state changes to be executed, the `expression` value must change value from its existing\n   * value\n   * to something that we have set an animation to animate on (in the example above we are listening\n   * to a change of state between `on` and `off`). The `expression` value attached to the trigger\n   * must be something that can be evaluated with the template/component context.\n   *\n   * ### DSL Animation Functions\n   *\n   * Please visit each of the animation DSL functions listed below to gain a better understanding\n   * of how and why they are used for crafting animations in Angular2:\n   *\n   * - {@link trigger trigger()}\n   * - {@link state state()}\n   * - {@link transition transition()}\n   * - {@link group group()}\n   * - {@link sequence sequence()}\n   * - {@link style style()}\n   * - {@link animate animate()}\n   * - {@link keyframes keyframes()}\n   */\n  animations?: any[];\n\n  /**\n   * Specifies how the template and the styles should be encapsulated:\n   * - {@link ViewEncapsulation#Native `ViewEncapsulation.Native`} to use shadow roots - only works\n   *   if natively available on the platform,\n   * - {@link ViewEncapsulation#Emulated `ViewEncapsulation.Emulated`} to use shimmed CSS that\n   *   emulates the native behavior,\n   * - {@link ViewEncapsulation#None `ViewEncapsulation.None`} to use global CSS without any\n   *   encapsulation.\n   *\n   * When no `encapsulation` is defined for the component, the default value from the\n   * {@link CompilerConfig} is used. The default is `ViewEncapsulation.Emulated`}. Provide a new\n   * `CompilerConfig` to override this value.\n   *\n   * If the encapsulation is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * nor `styleUrls` the encapsulation will automatically be switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (respectively `{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * Defines the components that should be compiled as well when\n   * this component is defined. For each components listed here,\n   * Angular will create a {@link ComponentFactory} and store it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n}\n\n/**\n * Component decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Component: ComponentDecorator = /** @type {?} */(( <ComponentDecorator>makeDecorator(\n    'Component', {\n      selector: undefined,\n      inputs: undefined,\n      outputs: undefined,\n      host: undefined,\n      exportAs: undefined,\n      moduleId: undefined,\n      providers: undefined,\n      viewProviders: undefined,\n      changeDetection: ChangeDetectionStrategy.Default,\n      queries: undefined,\n      templateUrl: undefined,\n      template: undefined,\n      styleUrls: undefined,\n      styles: undefined,\n      animations: undefined,\n      encapsulation: undefined,\n      interpolation: undefined,\n      entryComponents: undefined\n    },\n    Directive)));\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @stable\n */\nexport interface PipeDecorator {\n  /**\n   * Declare reusable pipe function.\n   *\n   * A \"pure\" pipe is only re-evaluated when either the input or any of the arguments change.\n   *\n   * When not specified, pipes default to being pure.\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the {@link Pipe} decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @stable\n */\nexport interface Pipe {\n  name: string;\n  pure?: boolean;\n}\n\n/**\n * Pipe decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Pipe: PipeDecorator = /** @type {?} */(( <PipeDecorator>makeDecorator('Pipe', {\n  name: undefined,\n  pure: true,\n})));\n\n\n/**\n * Type of the Input decorator / constructor function.\n *\n * @stable\n */\nexport interface InputDecorator {\n  /**\n   * Declares a data-bound input property.\n   *\n   * Angular automatically updates data-bound properties during change detection.\n   *\n   * `Input` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * The following example creates a component with two input properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   @Input() bankName: string;\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Input metadata.\n *\n * @stable\n */\nexport interface Input {\n  /**\n   * Name used when instantiating a component in the template.\n   */\n  bindingPropertyName?: string;\n}\n\n/**\n * Input decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Input: InputDecorator =\n    makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @stable\n */\nexport interface OutputDecorator {\n  /**\n   * Declares an event-bound output property.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * `Output` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   * })\n   * class IntervalDir {\n   *   @Output() everySecond = new EventEmitter();\n   *   @Output('everyFiveSeconds') five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @stable\n */\nexport interface Output { bindingPropertyName?: string; }\n\n/**\n * Output decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Output: OutputDecorator =\n    makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @stable\n */\nexport interface HostBindingDecorator {\n  /**\n   * Declares a host property binding.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * `HostBinding` takes an optional parameter that specifies the property\n   * name of the host element that will be updated. When not provided,\n   * the class property name is used.\n   *\n   * ### Example\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   * @stable\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @stable\n */\nexport interface HostBinding { hostPropertyName?: string; }\n\n/**\n * HostBinding decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @stable\n */\nexport interface HostListenerDecorator {\n  /**\n   * Declares a host listener.\n   *\n   * Angular will invoke the decorated method when the host element emits the specified event.\n   *\n   * If the decorated method returns `false`, then `preventDefault` is applied on the DOM event.\n   *\n   * ### Example\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({selector: 'button[counting]'})\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   @HostListener('click', ['$event.target'])\n   *   onClick(btn) {\n   *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: '<button counting>Increment</button>',\n   * })\n   * class App {}\n   * ```\n   * @stable\n   * @Annotation\n   */\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @stable\n */\nexport interface HostListener {\n  eventName?: string;\n  args?: string[];\n}\n\n/**\n * HostListener decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n","\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\nexport type ChangeDetectorStatus = number;\nexport let ChangeDetectorStatus: any = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nexport const /** @type {?} */ ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @stable\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 DSL\n   *\n   * ```\n   * var MyComponent = ng\n   *   .Component({...})\n   *   .Class({\n   *     constructor: [new ng.Attribute('title'), function(title) {\n   *       ...\n   *     }]\n   *   })\n   * ```\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @stable\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n\n/**\n * Attribute decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\n/**\n * Type of the Query metadata.\n *\n * @stable\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n/**\n * Base class for query metadata.\n * \n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {@link ContentChildren}.\n *\n * @stable\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChildren to get the {@link QueryList} of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string,\n   {descendants, read}?: {descendants?: boolean, read?: any}): any;\n  new (\n      selector: Type<any>|Function|string,\n      {descendants, read}?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n * @stable\n * @Annotation\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  @stable\n *  @Annotation\n */\nexport const /** @type {?} */ ContentChildren: ContentChildrenDecorator = /** @type {?} */((\n    <ContentChildrenDecorator>makePropDecorator(\n        'ContentChildren',\n        [\n          ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n          }\n        ],\n        Query)));\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * @stable\n */\nexport interface ContentChildDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, {read}?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, {read}?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * See {@link ContentChild}.\n *\n * @stable\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild',\n    [\n      ['selector', undefined], {\n        first: true,\n        isViewQuery: false,\n        descendants: true,\n        read: undefined,\n      }\n    ],\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {@ViewChildren}.\n *\n * @stable\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, {read}?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, {read}?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @stable\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren',\n    [\n      ['selector', undefined], {\n        first: false,\n        isViewQuery: true,\n        descendants: true,\n        read: undefined,\n      }\n    ],\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {@link ViewChild}\n *\n * @stable\n */\nexport interface ViewChildDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, {read}?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, {read}?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @stable\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nexport const /** @type {?} */ ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild',\n    [\n      ['selector', undefined], {\n        first: true,\n        isViewQuery: true,\n        descendants: true,\n        read: undefined,\n      }\n    ],\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {global, stringify} from '../util';\n\nlet /** @type {?} */ _nextClassId = 0;\nconst /** @type {?} */ Reflect = global['Reflect'];\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} &\n{\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n};\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: (Function | any[]), key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */ annotations: any[] = fnOrArray;\n    const /** @type {?} */ annoLength = annotations.length - 1;\n    const /** @type {?} */ fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */ annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n * \n * ## Basic Example\n * \n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n * \n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n * \n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n * \n * or equivalent to ES5:\n * \n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n * \n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n * \n * ### Example with parameter annotations\n * \n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n * \n * ### Example with inheritance\n * \n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n * \n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let /** @type {?} */ proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const /** @type {?} */ key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const /** @type {?} */ constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    ( /** @type {?} */((constructor as any)))['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <Type<any>>constructor));\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props: {[name: string]: any}, parentClass?: any,\n    chainFn: (fn: Function) => void = null): (...args: any[]) => (cls: any) => any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    }));\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n/**\n * @param {?} props\n * @return {?}\n */\nfunction makeMetadataCtor(props: ([string, any] | {[key: string]: any})[]): any {\n  return function ctor(...args: any[]) {\n    props.forEach((prop, i) => {\n      const /** @type {?} */ argVal = args[i];\n      if (Array.isArray(prop)) {\n        // plain parameter\n        this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n      } else {\n        for (const /** @type {?} */ propName in prop) {\n          this[propName] =\n              argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n        }\n      }\n    });\n  };\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props: ([string, any] | {[name: string]: any})[], parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const /** @type {?} */ parameters: any[][] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || [];\n      parameters[index].push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props: ([string, any] | {[key: string]: any})[], parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n","\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n * \n * ```typescript\n * var t = new OpaqueToken(\"value\");\n * \n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n * \n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n * \n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n * \n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nexport class OpaqueToken {\n/**\n * @param {?} _desc\n */\nconstructor(protected _desc: string) {}\n/**\n * @return {?}\n */\ntoString(): string { return `Token ${this._desc}`; }\n}\n\nfunction OpaqueToken_tsickle_Closure_declarations() {\n/** @type {?} */\nOpaqueToken.prototype._desc;\n}\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n * \n * `InjectionToken` is parametrize on `T` which is the type of object which will be returned by the\n * `Injector`. This provides additional level of type safety.\n * \n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * \\@stable\n */\nexport class InjectionToken<T> extends OpaqueToken {\nprivate _differentiate_from_OpaqueToken_structurally: any;\n/**\n * @param {?} desc\n */\nconstructor(desc: string) { super(desc); }\n/**\n * @return {?}\n */\ntoString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nfunction InjectionToken_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionToken.prototype._differentiate_from_OpaqueToken_structurally;\n}\n\n"],"names":["_transition","_keyframes","_state","_style","_sequence","_group","_animate","_trigger","transition","keyframes","state","style","sequence","group","animate","trigger","Renderer","global","merge","_global"],"mappings":"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"}