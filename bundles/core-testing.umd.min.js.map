{"version":3,"sources":["packages/core/core-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","testing","compiler","this","i0","_global","window","runInTestZone","fn","context","finishCallback","failCallback","currentZone","Zone","current","AsyncTestZoneSpec","undefined","Error","ProxyZoneSpec","proxyZoneSpec","get","assertPresent","proxyZone","getZoneWith","previousDelegate","getDelegate","parent","run","testZoneSpec","setDelegate","error","runGuarded","ComponentFixture","componentRef","ngZone","_autoDetect","_this","_isStable","_isDestroyed","_resolve","_promise","_onUnstableSubscription","_onStableSubscription","_onMicrotaskEmptySubscription","_onErrorSubscription","changeDetectorRef","elementRef","location","debugElement","getDebugNode","nativeElement","componentInstance","instance","runOutsideAngular","onUnstable","subscribe","next","onMicrotaskEmpty","detectChanges","onStable","scheduleMicroTask","hasPendingMacrotasks","onError","prototype","_tick","checkNoChanges","autoDetectChanges","autoDetect","isStable","whenStable","Promise","resolve","res","_getRenderer","_renderer","injector","RendererFactory2","whenRenderingDone","renderer","destroy","unsubscribe","_Zone","FakeAsyncTestZoneSpec","_fakeAsyncTestZoneSpec","resetFakeAsyncZoneFallback","resetDelegate","_inFakeAsyncCall","_getFakeAsyncZoneSpec","flushMicrotasksFallback","flushMicrotasks","_Zone$1","fakeAsyncTestModule","__symbol__","resetFakeAsyncZone","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","value","step","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","__values","o","m","__read","ar","__spread","concat","AsyncTestCompleter","rej","_reject","fail","stackTrace","enumerable","configurable","TestComponentRenderer","insertRootElement","rootElementId","ComponentFixtureAutoDetect","InjectionToken","ComponentFixtureNoNgZone","resolveComponentResources","resourceResolver","componentResolved","urlMap","Map","cachedResourceResolve","url","promise","resp","set","unwrapResponse","componentResourceResolutionQueue","forEach","component","type","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","index","style","splice","indexOf","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","Set","isComponentDefPendingResolution","has","old","response","text","_nextReferenceId","MetadataOverrider","_references","overrideMetadata","metadataClass","oldMetadata","override","props","_valueProps","obj","keys","prop","startsWith","proto","getPrototypeOf","protoProp","remove","add","ɵstringify","setMetadata","metadata","removeMetadata","references","removeObjects","_loop_1","removeValue","_propHashKey","_loop_2","propValue","filter","addMetadata","addValue","propName","JSON","stringify","_serializeReference","ref","id","reflection","ɵReflectionCapabilities","OverrideResolver","overrides","resolved","addOverride","setOverrides","clear","_a","_b","getAnnotation","annotations","annotation","Directive","Component","Pipe","NgModule","overrider_1","DirectiveResolver","_super","ComponentResolver","PipeResolver","NgModuleResolver","R3TestBedCompiler","platform","additionalModuleTypes","originalComponentResolutionQueue","declarations","imports","providers","schemas","pendingComponents","pendingDirectives","pendingPipes","seenComponents","seenDirectives","existingComponentStyles","resolvers","initResolvers","directive","pipe","componentToModuleScope","initialNgDefs","defCleanupOps","_injector","compilerProviders","providerOverrides","rootProviderOverrides","providerOverridesByToken","moduleProvidersOverridden","testModuleRef","testModuleType","DynamicTestModule","setCompilerProviders","configureTestingModule","moduleDef","_c","_d","queueTypeArray","queueTypesFromModulesArray","overrideModule","ngModule","name","recompileNgModule","overrideComponent","overrideDirective","overridePipe","overrideProvider","token","provider","injectableDef","providerDef","useFactory","provide","deps","useValue","ɵgetInjectableDef","providedIn","overridesForToken","overrideTemplateUsingTestingModule","def","ɵNG_COMPONENT_DEF","overrideStyleUrls","compileComponents","resourceLoader_1","clearComponentResolutionQueue","compileTypesSync","ResourceLoader","finalize","compileTestModule","applyTransitiveScopes","applyProviderOverrides","patchComponentsWithExistingStyles","ɵRender3NgModuleRef","localeId","LOCALE_ID","ɵDEFAULT_LOCALE_ID","ɵsetLocaleId","ApplicationInitStatus","runInitializers","_compileNgModuleSync","moduleType","applyProviderOverridesToModule","_compileNgModuleAsync","_getModuleResolver","_getComponentFactories","maybeUnwrapFn","ngModuleDef","reduce","factories","declaration","componentDef","ngComponentDef","ɵRender3ComponentFactory","needsAsyncResources","maybeStoreNgDef","ɵcompileComponent","ɵNG_DIRECTIVE_DEF","ɵcompileDirective","ɵNG_PIPE_DEF","ɵcompilePipe","moduleToScope","componentType","moduleScope","ɵtransitiveScopesFor","getScopeOfModule","storeFieldOfDefOnType","ɵpatchComponentDefWithScope","maybeApplyOverrides","field","hasProviderOverrides","patchDefWithProviderOverrides","e_1","injectorDef","ɵNG_INJECTOR_DEF","size","getProviderOverrides","ɵNG_MODULE_DEF","e_1_1","arr","e_2","arr_1","arr_1_1","isArray","queueType","e_2_1","ɵcompileNgModuleDefs","e_3","arr_2","arr_2_1","hasNgModuleDef","e_3_1","currentDef","defField","original","restoreComponentResolutionQueue","queue","restoreOriginalState","e_4","e_4_1","descriptor","RootScopeModule","jit","NgZone","enableLongStackTrace","Compiler","R3TestCompiler","COMPILER_OPTIONS","opts","CompilerModule","ɵɵdefineNgModule","ngInjectorDef","ɵɵdefineInjector","CompilerModule_Factory","CompilerModuleFactory","ɵNgModuleFactory","getSingleProviderOverrides","flatten","providersResolver","resolver_1","processProvidersFn_1","ngDef","maybeFn","Function","values","mapFn","out","testBed","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","ngModuleFactory","componentFactories","ModuleWithComponentFactories","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","meta","_nextRootElementId","UNDEFINED","TestBedRender3","_compiler","_testModuleRef","_activeFixtures","_globalCompilationChecked","initTestEnvironment","aotSummaries","_getTestBedRender3","resetTestEnvironment","configureCompiler","config","overrideTemplate","deprecatedOverrideProvider","notFoundValue","flags","Injector","THROW_IF_NOT_FOUND","InjectFlags","Default","createComponent","resetTestingModule","checkGlobalCompilationFinished","ɵresetCompiledComponents","destroyActiveFixtures","useJit","assertNotInstantiated","execute","tokens","params","map","testComponentRenderer","rootElId","noNgZone","componentFactory","initComponent","NULL","fixture","methodName","methodDescription","ɵflushModuleScopingQueueAsMuchAsPossible","console","stacktrace","unimplemented","testBed$1","TestingCompiler","loadAotSummaries","summaries","getComponentFactory","getComponentFromError","ngInjectableDef","ɵɵdefineInjectable","TestingCompiler_Factory","ɵTestingCompiler_BaseFactory","ɵɵgetInheritedFactory","TestingCompilerFactory","UNDEFINED$1","_nextRootElementId$1","TestBedViewEngine","_instantiated","_moduleRef","_moduleFactory","_compilerOptions","_moduleOverrides","_componentOverrides","_directiveOverrides","_pipeOverrides","_providers","_declarations","_imports","_schemas","_testEnvAotSummaries","_aotSummaries","_templateOverrides","_isRoot","_rootProviderOverrides","_getTestBedViewEngine","getTestBed","ɵclearOverrides","_assertNotInstantiated","_createCompilerAndModule","moduleAndComponentFactories","_initIfNeeded","errorCompType","compFactory","templateOf","ɵoverrideComponentView","ngZoneInjector","TestBed","entry","rootScopeImports","ɵAPP_ROOT","compilerFactory","createTestingCompiler","overrideProviderImpl","deprecated","dep","depToken","depFlags","Optional","SkipSelf","ɵoverrideProvider","deprecatedBehavior","OverrideComponent","selector","ɵivyEnabled","inject","completer","InjectSetupWrapper","_moduleDef","_addModule","_global$1","beforeEach","withModule","ɵMetadataOverrider","async","asyncTest","asyncFallback","jasmine","err","fakeAsync","fakeAsyncFallback","args","_i","lastProxyZoneSpec","pendingPeriodicTimers","pendingTimers","tick","millis","tickFallback","flush","maxTurns","flushFallback","discardPeriodicTasks","discardPeriodicTasksFallback","__core_private_testing_placeholder__","ɵTestingCompiler","ɵTestingCompilerFactory"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.12+16.sha-8027b3e.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/compiler')) :\n    typeof define === 'function' && define.amd ? define('@angular/core/testing', ['exports', '@angular/core', '@angular/compiler'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}, global.ng.core.testing = {}), global.ng.core, global.ng.compiler));\n}(this, function (exports, i0, compiler) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _global = (typeof window === 'undefined' ? global : window);\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done. Can be used\n     * to wrap an {@link inject} call.\n     *\n     * Example:\n     *\n     * ```\n     * it('...', async(inject([AClass], (object) => {\n     *   object.doSomething.then(() => {\n     *     expect(...);\n     *   })\n     * });\n     * ```\n     *\n     *\n     */\n    function asyncFallback(fn) {\n        // If we're running using the Jasmine test framework, adapt to call the 'done'\n        // function when asynchronous activity is finished.\n        if (_global.jasmine) {\n            // Not using an arrow function to preserve context passed from call site\n            return function (done) {\n                if (!done) {\n                    // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                    // fake it here and assume sync.\n                    done = function () { };\n                    done.fail = function (e) { throw e; };\n                }\n                runInTestZone(fn, this, done, function (err) {\n                    if (typeof err === 'string') {\n                        return done.fail(new Error(err));\n                    }\n                    else {\n                        done.fail(err);\n                    }\n                });\n            };\n        }\n        // Otherwise, return a promise which will resolve when asynchronous activity\n        // is finished. This will be correctly consumed by the Mocha framework with\n        // it('...', async(myFn)); or can be used in a custom framework.\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var _this = this;\n            return new Promise(function (finishCallback, failCallback) {\n                runInTestZone(fn, _this, finishCallback, failCallback);\n            });\n        };\n    }\n    function runInTestZone(fn, context, finishCallback, failCallback) {\n        var currentZone = Zone.current;\n        var AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n        if (AsyncTestZoneSpec === undefined) {\n            throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/async-test.js');\n        }\n        var ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        if (ProxyZoneSpec === undefined) {\n            throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/dist/proxy.js');\n        }\n        var proxyZoneSpec = ProxyZoneSpec.get();\n        ProxyZoneSpec.assertPresent();\n        // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n        // If we do it in ProxyZone then we will get to infinite recursion.\n        var proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n        var previousDelegate = proxyZoneSpec.getDelegate();\n        proxyZone.parent.run(function () {\n            var testZoneSpec = new AsyncTestZoneSpec(function () {\n                // Need to restore the original zone.\n                currentZone.run(function () {\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    finishCallback();\n                });\n            }, function (error) {\n                // Need to restore the original zone.\n                currentZone.run(function () {\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    failCallback(error);\n                });\n            }, 'test');\n            proxyZoneSpec.setDelegate(testZoneSpec);\n        });\n        return Zone.current.runGuarded(fn, context);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done. Can be used\n     * to wrap an {@link inject} call.\n     *\n     * Example:\n     *\n     * ```\n     * it('...', async(inject([AClass], (object) => {\n     *   object.doSomething.then(() => {\n     *     expect(...);\n     *   })\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    function async(fn) {\n        var _Zone = typeof Zone !== 'undefined' ? Zone : null;\n        if (!_Zone) {\n            return function () {\n                return Promise.reject('Zone is needed for the async() test helper but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/dist/zone.js');\n            };\n        }\n        var asyncTest = _Zone && _Zone[_Zone.__symbol__('asyncTest')];\n        if (typeof asyncTest === 'function') {\n            return asyncTest(fn);\n        }\n        // not using new version of zone.js\n        // TODO @JiaLiPassion, remove this after all library updated to\n        // newest version of zone.js(0.8.25)\n        return asyncFallback(fn);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fixture for debugging and testing a component.\n     *\n     * @publicApi\n     */\n    var ComponentFixture = /** @class */ (function () {\n        function ComponentFixture(componentRef, ngZone, _autoDetect) {\n            var _this = this;\n            this.componentRef = componentRef;\n            this.ngZone = ngZone;\n            this._autoDetect = _autoDetect;\n            this._isStable = true;\n            this._isDestroyed = false;\n            this._resolve = null;\n            this._promise = null;\n            this._onUnstableSubscription = null;\n            this._onStableSubscription = null;\n            this._onMicrotaskEmptySubscription = null;\n            this._onErrorSubscription = null;\n            this.changeDetectorRef = componentRef.changeDetectorRef;\n            this.elementRef = componentRef.location;\n            this.debugElement = i0.getDebugNode(this.elementRef.nativeElement);\n            this.componentInstance = componentRef.instance;\n            this.nativeElement = this.elementRef.nativeElement;\n            this.componentRef = componentRef;\n            this.ngZone = ngZone;\n            if (ngZone) {\n                // Create subscriptions outside the NgZone so that the callbacks run oustide\n                // of NgZone.\n                ngZone.runOutsideAngular(function () {\n                    _this._onUnstableSubscription =\n                        ngZone.onUnstable.subscribe({ next: function () { _this._isStable = false; } });\n                    _this._onMicrotaskEmptySubscription = ngZone.onMicrotaskEmpty.subscribe({\n                        next: function () {\n                            if (_this._autoDetect) {\n                                // Do a change detection run with checkNoChanges set to true to check\n                                // there are no changes on the second run.\n                                _this.detectChanges(true);\n                            }\n                        }\n                    });\n                    _this._onStableSubscription = ngZone.onStable.subscribe({\n                        next: function () {\n                            _this._isStable = true;\n                            // Check whether there is a pending whenStable() completer to resolve.\n                            if (_this._promise !== null) {\n                                // If so check whether there are no pending macrotasks before resolving.\n                                // Do this check in the next tick so that ngZone gets a chance to update the state of\n                                // pending macrotasks.\n                                scheduleMicroTask(function () {\n                                    if (!ngZone.hasPendingMacrotasks) {\n                                        if (_this._promise !== null) {\n                                            _this._resolve(true);\n                                            _this._resolve = null;\n                                            _this._promise = null;\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    _this._onErrorSubscription =\n                        ngZone.onError.subscribe({ next: function (error) { throw error; } });\n                });\n            }\n        }\n        ComponentFixture.prototype._tick = function (checkNoChanges) {\n            this.changeDetectorRef.detectChanges();\n            if (checkNoChanges) {\n                this.checkNoChanges();\n            }\n        };\n        /**\n         * Trigger a change detection cycle for the component.\n         */\n        ComponentFixture.prototype.detectChanges = function (checkNoChanges) {\n            var _this = this;\n            if (checkNoChanges === void 0) { checkNoChanges = true; }\n            if (this.ngZone != null) {\n                // Run the change detection inside the NgZone so that any async tasks as part of the change\n                // detection are captured by the zone and can be waited for in isStable.\n                this.ngZone.run(function () { _this._tick(checkNoChanges); });\n            }\n            else {\n                // Running without zone. Just do the change detection.\n                this._tick(checkNoChanges);\n            }\n        };\n        /**\n         * Do a change detection run to make sure there were no changes.\n         */\n        ComponentFixture.prototype.checkNoChanges = function () { this.changeDetectorRef.checkNoChanges(); };\n        /**\n         * Set whether the fixture should autodetect changes.\n         *\n         * Also runs detectChanges once so that any existing change is detected.\n         */\n        ComponentFixture.prototype.autoDetectChanges = function (autoDetect) {\n            if (autoDetect === void 0) { autoDetect = true; }\n            if (this.ngZone == null) {\n                throw new Error('Cannot call autoDetectChanges when ComponentFixtureNoNgZone is set');\n            }\n            this._autoDetect = autoDetect;\n            this.detectChanges();\n        };\n        /**\n         * Return whether the fixture is currently stable or has async tasks that have not been completed\n         * yet.\n         */\n        ComponentFixture.prototype.isStable = function () { return this._isStable && !this.ngZone.hasPendingMacrotasks; };\n        /**\n         * Get a promise that resolves when the fixture is stable.\n         *\n         * This can be used to resume testing after events have triggered asynchronous activity or\n         * asynchronous change detection.\n         */\n        ComponentFixture.prototype.whenStable = function () {\n            var _this = this;\n            if (this.isStable()) {\n                return Promise.resolve(false);\n            }\n            else if (this._promise !== null) {\n                return this._promise;\n            }\n            else {\n                this._promise = new Promise(function (res) { _this._resolve = res; });\n                return this._promise;\n            }\n        };\n        ComponentFixture.prototype._getRenderer = function () {\n            if (this._renderer === undefined) {\n                this._renderer = this.componentRef.injector.get(i0.RendererFactory2, null);\n            }\n            return this._renderer;\n        };\n        /**\n          * Get a promise that resolves when the ui state is stable following animations.\n          */\n        ComponentFixture.prototype.whenRenderingDone = function () {\n            var renderer = this._getRenderer();\n            if (renderer && renderer.whenRenderingDone) {\n                return renderer.whenRenderingDone();\n            }\n            return this.whenStable();\n        };\n        /**\n         * Trigger component destruction.\n         */\n        ComponentFixture.prototype.destroy = function () {\n            if (!this._isDestroyed) {\n                this.componentRef.destroy();\n                if (this._onUnstableSubscription != null) {\n                    this._onUnstableSubscription.unsubscribe();\n                    this._onUnstableSubscription = null;\n                }\n                if (this._onStableSubscription != null) {\n                    this._onStableSubscription.unsubscribe();\n                    this._onStableSubscription = null;\n                }\n                if (this._onMicrotaskEmptySubscription != null) {\n                    this._onMicrotaskEmptySubscription.unsubscribe();\n                    this._onMicrotaskEmptySubscription = null;\n                }\n                if (this._onErrorSubscription != null) {\n                    this._onErrorSubscription.unsubscribe();\n                    this._onErrorSubscription = null;\n                }\n                this._isDestroyed = true;\n            }\n        };\n        return ComponentFixture;\n    }());\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * fakeAsync has been moved to zone.js\n     * this file is for fallback in case old version of zone.js is used\n     */\n    var _Zone = typeof Zone !== 'undefined' ? Zone : null;\n    var FakeAsyncTestZoneSpec = _Zone && _Zone['FakeAsyncTestZoneSpec'];\n    var ProxyZoneSpec = _Zone && _Zone['ProxyZoneSpec'];\n    var _fakeAsyncTestZoneSpec = null;\n    /**\n     * Clears out the shared fake async zone for a test.\n     * To be called in a global `beforeEach`.\n     *\n     * @publicApi\n     */\n    function resetFakeAsyncZoneFallback() {\n        _fakeAsyncTestZoneSpec = null;\n        // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n        ProxyZoneSpec && ProxyZoneSpec.assertPresent().resetDelegate();\n    }\n    var _inFakeAsyncCall = false;\n    /**\n     * Wraps a function to be executed in the fakeAsync zone:\n     * - microtasks are manually executed by calling `flushMicrotasks()`,\n     * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n     *\n     * If there are any pending timers at the end of the function, an exception will be thrown.\n     *\n     * Can be used to wrap inject() calls.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @param fn\n     * @returns The function wrapped to be executed in the fakeAsync zone\n     *\n     * @publicApi\n     */\n    function fakeAsyncFallback(fn) {\n        // Not using an arrow function to preserve context passed from call site\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var proxyZoneSpec = ProxyZoneSpec.assertPresent();\n            if (_inFakeAsyncCall) {\n                throw new Error('fakeAsync() calls can not be nested');\n            }\n            _inFakeAsyncCall = true;\n            try {\n                if (!_fakeAsyncTestZoneSpec) {\n                    if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                        throw new Error('fakeAsync() calls can not be nested');\n                    }\n                    _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n                }\n                var res = void 0;\n                var lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n                proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n                try {\n                    res = fn.apply(this, args);\n                    flushMicrotasksFallback();\n                }\n                finally {\n                    proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n                }\n                if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                    throw new Error(_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length + \" \" +\n                        \"periodic timer(s) still in the queue.\");\n                }\n                if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                    throw new Error(_fakeAsyncTestZoneSpec.pendingTimers.length + \" timer(s) still in the queue.\");\n                }\n                return res;\n            }\n            finally {\n                _inFakeAsyncCall = false;\n                resetFakeAsyncZoneFallback();\n            }\n        };\n    }\n    function _getFakeAsyncZoneSpec() {\n        if (_fakeAsyncTestZoneSpec == null) {\n            throw new Error('The code should be running in the fakeAsync zone to call this function');\n        }\n        return _fakeAsyncTestZoneSpec;\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n     *\n     * The microtasks queue is drained at the very start of this function and after any timer callback\n     * has been executed.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @publicApi\n     */\n    function tickFallback(millis) {\n        if (millis === void 0) { millis = 0; }\n        _getFakeAsyncZoneSpec().tick(millis);\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n     * draining the macrotask queue until it is empty. The returned value is the milliseconds\n     * of time that would have been elapsed.\n     *\n     * @param maxTurns\n     * @returns The simulated time elapsed, in millis.\n     *\n     * @publicApi\n     */\n    function flushFallback(maxTurns) {\n        return _getFakeAsyncZoneSpec().flush(maxTurns);\n    }\n    /**\n     * Discard all remaining periodic tasks.\n     *\n     * @publicApi\n     */\n    function discardPeriodicTasksFallback() {\n        var zoneSpec = _getFakeAsyncZoneSpec();\n        zoneSpec.pendingPeriodicTimers.length = 0;\n    }\n    /**\n     * Flush any pending microtasks.\n     *\n     * @publicApi\n     */\n    function flushMicrotasksFallback() {\n        _getFakeAsyncZoneSpec().flushMicrotasks();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _Zone$1 = typeof Zone !== 'undefined' ? Zone : null;\n    var fakeAsyncTestModule = _Zone$1 && _Zone$1[_Zone$1.__symbol__('fakeAsyncTest')];\n    /**\n     * Clears out the shared fake async zone for a test.\n     * To be called in a global `beforeEach`.\n     *\n     * @publicApi\n     */\n    function resetFakeAsyncZone() {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.resetFakeAsyncZone();\n        }\n        else {\n            return resetFakeAsyncZoneFallback();\n        }\n    }\n    /**\n     * Wraps a function to be executed in the fakeAsync zone:\n     * - microtasks are manually executed by calling `flushMicrotasks()`,\n     * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n     *\n     * If there are any pending timers at the end of the function, an exception will be thrown.\n     *\n     * Can be used to wrap inject() calls.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @param fn\n     * @returns The function wrapped to be executed in the fakeAsync zone\n     *\n     * @publicApi\n     */\n    function fakeAsync(fn) {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.fakeAsync(fn);\n        }\n        else {\n            return fakeAsyncFallback(fn);\n        }\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n     *\n     * The microtasks queue is drained at the very start of this function and after any timer callback\n     * has been executed.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/testing/ts/fake_async.ts region='basic'}\n     *\n     * @publicApi\n     */\n    function tick(millis) {\n        if (millis === void 0) { millis = 0; }\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.tick(millis);\n        }\n        else {\n            return tickFallback(millis);\n        }\n    }\n    /**\n     * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n     * draining the macrotask queue until it is empty. The returned value is the milliseconds\n     * of time that would have been elapsed.\n     *\n     * @param maxTurns\n     * @returns The simulated time elapsed, in millis.\n     *\n     * @publicApi\n     */\n    function flush(maxTurns) {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.flush(maxTurns);\n        }\n        else {\n            return flushFallback(maxTurns);\n        }\n    }\n    /**\n     * Discard all remaining periodic tasks.\n     *\n     * @publicApi\n     */\n    function discardPeriodicTasks() {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.discardPeriodicTasks();\n        }\n        else {\n            discardPeriodicTasksFallback();\n        }\n    }\n    /**\n     * Flush any pending microtasks.\n     *\n     * @publicApi\n     */\n    function flushMicrotasks() {\n        if (fakeAsyncTestModule) {\n            return fakeAsyncTestModule.flushMicrotasks();\n        }\n        else {\n            return flushMicrotasksFallback();\n        }\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable completer that allows signaling completion of an asynchronous test. Used internally.\n     */\n    var AsyncTestCompleter = /** @class */ (function () {\n        function AsyncTestCompleter() {\n            var _this = this;\n            this._promise = new Promise(function (res, rej) {\n                _this._resolve = res;\n                _this._reject = rej;\n            });\n        }\n        AsyncTestCompleter.prototype.done = function (value) { this._resolve(value); };\n        AsyncTestCompleter.prototype.fail = function (error, stackTrace) { this._reject(error); };\n        Object.defineProperty(AsyncTestCompleter.prototype, \"promise\", {\n            get: function () { return this._promise; },\n            enumerable: true,\n            configurable: true\n        });\n        return AsyncTestCompleter;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An abstract class for inserting the root test component element in a platform independent way.\n     *\n     * @publicApi\n     */\n    var TestComponentRenderer = /** @class */ (function () {\n        function TestComponentRenderer() {\n        }\n        TestComponentRenderer.prototype.insertRootElement = function (rootElementId) { };\n        return TestComponentRenderer;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFixtureAutoDetect = new i0.InjectionToken('ComponentFixtureAutoDetect');\n    /**\n     * @publicApi\n     */\n    var ComponentFixtureNoNgZone = new i0.InjectionToken('ComponentFixtureNoNgZone');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _nextReferenceId = 0;\n    var MetadataOverrider = /** @class */ (function () {\n        function MetadataOverrider() {\n            this._references = new Map();\n        }\n        /**\n         * Creates a new instance for the given metadata class\n         * based on an old instance and overrides.\n         */\n        MetadataOverrider.prototype.overrideMetadata = function (metadataClass, oldMetadata, override) {\n            var props = {};\n            if (oldMetadata) {\n                _valueProps(oldMetadata).forEach(function (prop) { return props[prop] = oldMetadata[prop]; });\n            }\n            if (override.set) {\n                if (override.remove || override.add) {\n                    throw new Error(\"Cannot set and add/remove \" + i0.ɵstringify(metadataClass) + \" at the same time!\");\n                }\n                setMetadata(props, override.set);\n            }\n            if (override.remove) {\n                removeMetadata(props, override.remove, this._references);\n            }\n            if (override.add) {\n                addMetadata(props, override.add);\n            }\n            return new metadataClass(props);\n        };\n        return MetadataOverrider;\n    }());\n    function removeMetadata(metadata, remove, references) {\n        var removeObjects = new Set();\n        var _loop_1 = function (prop) {\n            var removeValue = remove[prop];\n            if (removeValue instanceof Array) {\n                removeValue.forEach(function (value) { removeObjects.add(_propHashKey(prop, value, references)); });\n            }\n            else {\n                removeObjects.add(_propHashKey(prop, removeValue, references));\n            }\n        };\n        for (var prop in remove) {\n            _loop_1(prop);\n        }\n        var _loop_2 = function (prop) {\n            var propValue = metadata[prop];\n            if (propValue instanceof Array) {\n                metadata[prop] = propValue.filter(function (value) { return !removeObjects.has(_propHashKey(prop, value, references)); });\n            }\n            else {\n                if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                    metadata[prop] = undefined;\n                }\n            }\n        };\n        for (var prop in metadata) {\n            _loop_2(prop);\n        }\n    }\n    function addMetadata(metadata, add) {\n        for (var prop in add) {\n            var addValue = add[prop];\n            var propValue = metadata[prop];\n            if (propValue != null && propValue instanceof Array) {\n                metadata[prop] = propValue.concat(addValue);\n            }\n            else {\n                metadata[prop] = addValue;\n            }\n        }\n    }\n    function setMetadata(metadata, set) {\n        for (var prop in set) {\n            metadata[prop] = set[prop];\n        }\n    }\n    function _propHashKey(propName, propValue, references) {\n        var replacer = function (key, value) {\n            if (typeof value === 'function') {\n                value = _serializeReference(value, references);\n            }\n            return value;\n        };\n        return propName + \":\" + JSON.stringify(propValue, replacer);\n    }\n    function _serializeReference(ref, references) {\n        var id = references.get(ref);\n        if (!id) {\n            id = \"\" + i0.ɵstringify(ref) + _nextReferenceId++;\n            references.set(ref, id);\n        }\n        return id;\n    }\n    function _valueProps(obj) {\n        var props = [];\n        // regular public props\n        Object.keys(obj).forEach(function (prop) {\n            if (!prop.startsWith('_')) {\n                props.push(prop);\n            }\n        });\n        // getters\n        var proto = obj;\n        while (proto = Object.getPrototypeOf(proto)) {\n            Object.keys(proto).forEach(function (protoProp) {\n                var desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n                if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                    props.push(protoProp);\n                }\n            });\n        }\n        return props;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var reflection = new i0.ɵReflectionCapabilities();\n    /**\n     * Allows to override ivy metadata for tests (via the `TestBed`).\n     */\n    var OverrideResolver = /** @class */ (function () {\n        function OverrideResolver() {\n            this.overrides = new Map();\n            this.resolved = new Map();\n        }\n        OverrideResolver.prototype.addOverride = function (type, override) {\n            var overrides = this.overrides.get(type) || [];\n            overrides.push(override);\n            this.overrides.set(type, overrides);\n            this.resolved.delete(type);\n        };\n        OverrideResolver.prototype.setOverrides = function (overrides) {\n            var _this = this;\n            this.overrides.clear();\n            overrides.forEach(function (_a) {\n                var _b = __read(_a, 2), type = _b[0], override = _b[1];\n                _this.addOverride(type, override);\n            });\n        };\n        OverrideResolver.prototype.getAnnotation = function (type) {\n            var annotations = reflection.annotations(type);\n            // Try to find the nearest known Type annotation and make sure that this annotation is an\n            // instance of the type we are looking for, so we can use it for resolution. Note: there might\n            // be multiple known annotations found due to the fact that Components can extend Directives (so\n            // both Directive and Component annotations would be present), so we always check if the known\n            // annotation has the right type.\n            for (var i = annotations.length - 1; i >= 0; i--) {\n                var annotation = annotations[i];\n                var isKnownType = annotation instanceof i0.Directive || annotation instanceof i0.Component ||\n                    annotation instanceof i0.Pipe || annotation instanceof i0.NgModule;\n                if (isKnownType) {\n                    return annotation instanceof this.type ? annotation : null;\n                }\n            }\n            return null;\n        };\n        OverrideResolver.prototype.resolve = function (type) {\n            var _this = this;\n            var resolved = this.resolved.get(type) || null;\n            if (!resolved) {\n                resolved = this.getAnnotation(type);\n                if (resolved) {\n                    var overrides = this.overrides.get(type);\n                    if (overrides) {\n                        var overrider_1 = new MetadataOverrider();\n                        overrides.forEach(function (override) {\n                            resolved = overrider_1.overrideMetadata(_this.type, resolved, override);\n                        });\n                    }\n                }\n                this.resolved.set(type, resolved);\n            }\n            return resolved;\n        };\n        return OverrideResolver;\n    }());\n    var DirectiveResolver = /** @class */ (function (_super) {\n        __extends(DirectiveResolver, _super);\n        function DirectiveResolver() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(DirectiveResolver.prototype, \"type\", {\n            get: function () { return i0.Directive; },\n            enumerable: true,\n            configurable: true\n        });\n        return DirectiveResolver;\n    }(OverrideResolver));\n    var ComponentResolver = /** @class */ (function (_super) {\n        __extends(ComponentResolver, _super);\n        function ComponentResolver() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(ComponentResolver.prototype, \"type\", {\n            get: function () { return i0.Component; },\n            enumerable: true,\n            configurable: true\n        });\n        return ComponentResolver;\n    }(OverrideResolver));\n    var PipeResolver = /** @class */ (function (_super) {\n        __extends(PipeResolver, _super);\n        function PipeResolver() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(PipeResolver.prototype, \"type\", {\n            get: function () { return i0.Pipe; },\n            enumerable: true,\n            configurable: true\n        });\n        return PipeResolver;\n    }(OverrideResolver));\n    var NgModuleResolver = /** @class */ (function (_super) {\n        __extends(NgModuleResolver, _super);\n        function NgModuleResolver() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(NgModuleResolver.prototype, \"type\", {\n            get: function () { return i0.NgModule; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgModuleResolver;\n    }(OverrideResolver));\n\n    var TESTING_MODULE = 'TestingModule';\n    var R3TestBedCompiler = /** @class */ (function () {\n        function R3TestBedCompiler(platform, additionalModuleTypes) {\n            this.platform = platform;\n            this.additionalModuleTypes = additionalModuleTypes;\n            this.originalComponentResolutionQueue = null;\n            // Testing module configuration\n            this.declarations = [];\n            this.imports = [];\n            this.providers = [];\n            this.schemas = [];\n            // Queues of components/directives/pipes that should be recompiled.\n            this.pendingComponents = new Set();\n            this.pendingDirectives = new Set();\n            this.pendingPipes = new Set();\n            // Keep track of all components and directives, so we can patch Providers onto defs later.\n            this.seenComponents = new Set();\n            this.seenDirectives = new Set();\n            // Store resolved styles for Components that have template overrides present and `styleUrls`\n            // defined at the same time.\n            this.existingComponentStyles = new Map();\n            this.resolvers = initResolvers();\n            this.componentToModuleScope = new Map();\n            // Map that keeps initial version of component/directive/pipe defs in case\n            // we compile a Type again, thus overriding respective static fields. This is\n            // required to make sure we restore defs to their initial states between test runs\n            // TODO: we should support the case with multiple defs on a type\n            this.initialNgDefs = new Map();\n            // Array that keeps cleanup operations for initial versions of component/directive/pipe/module\n            // defs in case TestBed makes changes to the originals.\n            this.defCleanupOps = [];\n            this._injector = null;\n            this.compilerProviders = null;\n            this.providerOverrides = [];\n            this.rootProviderOverrides = [];\n            this.providerOverridesByToken = new Map();\n            this.moduleProvidersOverridden = new Set();\n            this.testModuleRef = null;\n            var DynamicTestModule = /** @class */ (function () {\n                function DynamicTestModule() {\n                }\n                return DynamicTestModule;\n            }());\n            this.testModuleType = DynamicTestModule;\n        }\n        R3TestBedCompiler.prototype.setCompilerProviders = function (providers) {\n            this.compilerProviders = providers;\n            this._injector = null;\n        };\n        R3TestBedCompiler.prototype.configureTestingModule = function (moduleDef) {\n            var _a, _b, _c, _d;\n            // Enqueue any compilation tasks for the directly declared component.\n            if (moduleDef.declarations !== undefined) {\n                this.queueTypeArray(moduleDef.declarations, TESTING_MODULE);\n                (_a = this.declarations).push.apply(_a, __spread(moduleDef.declarations));\n            }\n            // Enqueue any compilation tasks for imported modules.\n            if (moduleDef.imports !== undefined) {\n                this.queueTypesFromModulesArray(moduleDef.imports);\n                (_b = this.imports).push.apply(_b, __spread(moduleDef.imports));\n            }\n            if (moduleDef.providers !== undefined) {\n                (_c = this.providers).push.apply(_c, __spread(moduleDef.providers));\n            }\n            if (moduleDef.schemas !== undefined) {\n                (_d = this.schemas).push.apply(_d, __spread(moduleDef.schemas));\n            }\n        };\n        R3TestBedCompiler.prototype.overrideModule = function (ngModule, override) {\n            // Compile the module right away.\n            this.resolvers.module.addOverride(ngModule, override);\n            var metadata = this.resolvers.module.resolve(ngModule);\n            if (metadata === null) {\n                throw new Error(ngModule.name + \" is not an @NgModule or is missing metadata\");\n            }\n            this.recompileNgModule(ngModule);\n            // At this point, the module has a valid .ngModuleDef, but the override may have introduced\n            // new declarations or imported modules. Ingest any possible new types and add them to the\n            // current queue.\n            this.queueTypesFromModulesArray([ngModule]);\n        };\n        R3TestBedCompiler.prototype.overrideComponent = function (component, override) {\n            this.resolvers.component.addOverride(component, override);\n            this.pendingComponents.add(component);\n        };\n        R3TestBedCompiler.prototype.overrideDirective = function (directive, override) {\n            this.resolvers.directive.addOverride(directive, override);\n            this.pendingDirectives.add(directive);\n        };\n        R3TestBedCompiler.prototype.overridePipe = function (pipe, override) {\n            this.resolvers.pipe.addOverride(pipe, override);\n            this.pendingPipes.add(pipe);\n        };\n        R3TestBedCompiler.prototype.overrideProvider = function (token, provider) {\n            var providerDef = provider.useFactory ?\n                { provide: token, useFactory: provider.useFactory, deps: provider.deps || [] } :\n                { provide: token, useValue: provider.useValue };\n            var injectableDef;\n            var isRoot = (typeof token !== 'string' && (injectableDef = i0.ɵgetInjectableDef(token)) &&\n                injectableDef.providedIn === 'root');\n            var overridesBucket = isRoot ? this.rootProviderOverrides : this.providerOverrides;\n            overridesBucket.push(providerDef);\n            // Keep all overrides grouped by token as well for fast lookups using token\n            var overridesForToken = this.providerOverridesByToken.get(token) || [];\n            overridesForToken.push(providerDef);\n            this.providerOverridesByToken.set(token, overridesForToken);\n        };\n        R3TestBedCompiler.prototype.overrideTemplateUsingTestingModule = function (type, template) {\n            var _this = this;\n            var def = type[i0.ɵNG_COMPONENT_DEF];\n            var hasStyleUrls = function () {\n                var metadata = _this.resolvers.component.resolve(type);\n                return !!metadata.styleUrls && metadata.styleUrls.length > 0;\n            };\n            var overrideStyleUrls = !!def && !isComponentDefPendingResolution(type) && hasStyleUrls();\n            // In Ivy, compiling a component does not require knowing the module providing the\n            // component's scope, so overrideTemplateUsingTestingModule can be implemented purely via\n            // overrideComponent. Important: overriding template requires full Component re-compilation,\n            // which may fail in case styleUrls are also present (thus Component is considered as required\n            // resolution). In order to avoid this, we preemptively set styleUrls to an empty array,\n            // preserve current styles available on Component def and restore styles back once compilation\n            // is complete.\n            var override = overrideStyleUrls ? { template: template, styles: [], styleUrls: [] } : { template: template };\n            this.overrideComponent(type, { set: override });\n            if (overrideStyleUrls && def.styles && def.styles.length > 0) {\n                this.existingComponentStyles.set(type, def.styles);\n            }\n            // Set the component's scope to be the testing module.\n            this.componentToModuleScope.set(type, TESTING_MODULE);\n        };\n        R3TestBedCompiler.prototype.compileComponents = function () {\n            return __awaiter(this, void 0, void 0, function () {\n                var needsAsyncResources, resourceLoader_1, resolver;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.clearComponentResolutionQueue();\n                            needsAsyncResources = this.compileTypesSync();\n                            if (!needsAsyncResources) return [3 /*break*/, 2];\n                            resolver = function (url) {\n                                if (!resourceLoader_1) {\n                                    resourceLoader_1 = _this.injector.get(compiler.ResourceLoader);\n                                }\n                                return Promise.resolve(resourceLoader_1.get(url));\n                            };\n                            return [4 /*yield*/, resolveComponentResources(resolver)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        R3TestBedCompiler.prototype.finalize = function () {\n            // One last compile\n            this.compileTypesSync();\n            // Create the testing module itself.\n            this.compileTestModule();\n            this.applyTransitiveScopes();\n            this.applyProviderOverrides();\n            // Patch previously stored `styles` Component values (taken from ngComponentDef), in case these\n            // Components have `styleUrls` fields defined and template override was requested.\n            this.patchComponentsWithExistingStyles();\n            // Clear the componentToModuleScope map, so that future compilations don't reset the scope of\n            // every component.\n            this.componentToModuleScope.clear();\n            var parentInjector = this.platform.injector;\n            this.testModuleRef = new i0.ɵRender3NgModuleRef(this.testModuleType, parentInjector);\n            // Set the locale ID, it can be overridden for the tests\n            var localeId = this.testModuleRef.injector.get(i0.LOCALE_ID, i0.ɵDEFAULT_LOCALE_ID);\n            i0.ɵsetLocaleId(localeId);\n            // ApplicationInitStatus.runInitializers() is marked @internal to core.\n            // Cast it to any before accessing it.\n            this.testModuleRef.injector.get(i0.ApplicationInitStatus).runInitializers();\n            return this.testModuleRef;\n        };\n        /**\n         * @internal\n         */\n        R3TestBedCompiler.prototype._compileNgModuleSync = function (moduleType) {\n            this.queueTypesFromModulesArray([moduleType]);\n            this.compileTypesSync();\n            this.applyProviderOverrides();\n            this.applyProviderOverridesToModule(moduleType);\n            this.applyTransitiveScopes();\n        };\n        /**\n         * @internal\n         */\n        R3TestBedCompiler.prototype._compileNgModuleAsync = function (moduleType) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.queueTypesFromModulesArray([moduleType]);\n                            return [4 /*yield*/, this.compileComponents()];\n                        case 1:\n                            _a.sent();\n                            this.applyProviderOverrides();\n                            this.applyProviderOverridesToModule(moduleType);\n                            this.applyTransitiveScopes();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        /**\n         * @internal\n         */\n        R3TestBedCompiler.prototype._getModuleResolver = function () { return this.resolvers.module; };\n        /**\n         * @internal\n         */\n        R3TestBedCompiler.prototype._getComponentFactories = function (moduleType) {\n            var _this = this;\n            return maybeUnwrapFn(moduleType.ngModuleDef.declarations).reduce(function (factories, declaration) {\n                var componentDef = declaration.ngComponentDef;\n                componentDef && factories.push(new i0.ɵRender3ComponentFactory(componentDef, _this.testModuleRef));\n                return factories;\n            }, []);\n        };\n        R3TestBedCompiler.prototype.compileTypesSync = function () {\n            var _this = this;\n            // Compile all queued components, directives, pipes.\n            var needsAsyncResources = false;\n            this.pendingComponents.forEach(function (declaration) {\n                needsAsyncResources = needsAsyncResources || isComponentDefPendingResolution(declaration);\n                var metadata = _this.resolvers.component.resolve(declaration);\n                _this.maybeStoreNgDef(i0.ɵNG_COMPONENT_DEF, declaration);\n                i0.ɵcompileComponent(declaration, metadata);\n            });\n            this.pendingComponents.clear();\n            this.pendingDirectives.forEach(function (declaration) {\n                var metadata = _this.resolvers.directive.resolve(declaration);\n                _this.maybeStoreNgDef(i0.ɵNG_DIRECTIVE_DEF, declaration);\n                i0.ɵcompileDirective(declaration, metadata);\n            });\n            this.pendingDirectives.clear();\n            this.pendingPipes.forEach(function (declaration) {\n                var metadata = _this.resolvers.pipe.resolve(declaration);\n                _this.maybeStoreNgDef(i0.ɵNG_PIPE_DEF, declaration);\n                i0.ɵcompilePipe(declaration, metadata);\n            });\n            this.pendingPipes.clear();\n            return needsAsyncResources;\n        };\n        R3TestBedCompiler.prototype.applyTransitiveScopes = function () {\n            var _this = this;\n            var moduleToScope = new Map();\n            var getScopeOfModule = function (moduleType) {\n                if (!moduleToScope.has(moduleType)) {\n                    var realType = moduleType === TESTING_MODULE ? _this.testModuleType : moduleType;\n                    moduleToScope.set(moduleType, i0.ɵtransitiveScopesFor(realType));\n                }\n                return moduleToScope.get(moduleType);\n            };\n            this.componentToModuleScope.forEach(function (moduleType, componentType) {\n                var moduleScope = getScopeOfModule(moduleType);\n                _this.storeFieldOfDefOnType(componentType, i0.ɵNG_COMPONENT_DEF, 'directiveDefs');\n                _this.storeFieldOfDefOnType(componentType, i0.ɵNG_COMPONENT_DEF, 'pipeDefs');\n                i0.ɵpatchComponentDefWithScope(componentType.ngComponentDef, moduleScope);\n            });\n            this.componentToModuleScope.clear();\n        };\n        R3TestBedCompiler.prototype.applyProviderOverrides = function () {\n            var _this = this;\n            var maybeApplyOverrides = function (field) { return function (type) {\n                var resolver = field === i0.ɵNG_COMPONENT_DEF ? _this.resolvers.component : _this.resolvers.directive;\n                var metadata = resolver.resolve(type);\n                if (_this.hasProviderOverrides(metadata.providers)) {\n                    _this.patchDefWithProviderOverrides(type, field);\n                }\n            }; };\n            this.seenComponents.forEach(maybeApplyOverrides(i0.ɵNG_COMPONENT_DEF));\n            this.seenDirectives.forEach(maybeApplyOverrides(i0.ɵNG_DIRECTIVE_DEF));\n            this.seenComponents.clear();\n            this.seenDirectives.clear();\n        };\n        R3TestBedCompiler.prototype.applyProviderOverridesToModule = function (moduleType) {\n            var e_1, _a;\n            if (this.moduleProvidersOverridden.has(moduleType)) {\n                return;\n            }\n            this.moduleProvidersOverridden.add(moduleType);\n            var injectorDef = moduleType[i0.ɵNG_INJECTOR_DEF];\n            if (this.providerOverridesByToken.size > 0) {\n                if (this.hasProviderOverrides(injectorDef.providers)) {\n                    this.maybeStoreNgDef(i0.ɵNG_INJECTOR_DEF, moduleType);\n                    this.storeFieldOfDefOnType(moduleType, i0.ɵNG_INJECTOR_DEF, 'providers');\n                    injectorDef.providers = __spread(injectorDef.providers, this.getProviderOverrides(injectorDef.providers));\n                }\n                // Apply provider overrides to imported modules recursively\n                var moduleDef = moduleType[i0.ɵNG_MODULE_DEF];\n                try {\n                    for (var _b = __values(moduleDef.imports), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var importType = _c.value;\n                        this.applyProviderOverridesToModule(importType);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        };\n        R3TestBedCompiler.prototype.patchComponentsWithExistingStyles = function () {\n            this.existingComponentStyles.forEach(function (styles, type) { return type[i0.ɵNG_COMPONENT_DEF].styles = styles; });\n            this.existingComponentStyles.clear();\n        };\n        R3TestBedCompiler.prototype.queueTypeArray = function (arr, moduleType) {\n            var e_2, _a;\n            try {\n                for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n                    var value = arr_1_1.value;\n                    if (Array.isArray(value)) {\n                        this.queueTypeArray(value, moduleType);\n                    }\n                    else {\n                        this.queueType(value, moduleType);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        R3TestBedCompiler.prototype.recompileNgModule = function (ngModule) {\n            var metadata = this.resolvers.module.resolve(ngModule);\n            if (metadata === null) {\n                throw new Error(\"Unable to resolve metadata for NgModule: \" + ngModule.name);\n            }\n            // Cache the initial ngModuleDef as it will be overwritten.\n            this.maybeStoreNgDef(i0.ɵNG_MODULE_DEF, ngModule);\n            this.maybeStoreNgDef(i0.ɵNG_INJECTOR_DEF, ngModule);\n            i0.ɵcompileNgModuleDefs(ngModule, metadata);\n        };\n        R3TestBedCompiler.prototype.queueType = function (type, moduleType) {\n            var component = this.resolvers.component.resolve(type);\n            if (component) {\n                // Check whether a give Type has respective NG def (ngComponentDef) and compile if def is\n                // missing. That might happen in case a class without any Angular decorators extends another\n                // class where Component/Directive/Pipe decorator is defined.\n                if (isComponentDefPendingResolution(type) || !type.hasOwnProperty(i0.ɵNG_COMPONENT_DEF)) {\n                    this.pendingComponents.add(type);\n                }\n                this.seenComponents.add(type);\n                // Keep track of the module which declares this component, so later the component's scope\n                // can be set correctly. Only record this the first time, because it might be overridden by\n                // overrideTemplateUsingTestingModule.\n                if (!this.componentToModuleScope.has(type)) {\n                    this.componentToModuleScope.set(type, moduleType);\n                }\n                return;\n            }\n            var directive = this.resolvers.directive.resolve(type);\n            if (directive) {\n                if (!type.hasOwnProperty(i0.ɵNG_DIRECTIVE_DEF)) {\n                    this.pendingDirectives.add(type);\n                }\n                this.seenDirectives.add(type);\n                return;\n            }\n            var pipe = this.resolvers.pipe.resolve(type);\n            if (pipe && !type.hasOwnProperty(i0.ɵNG_PIPE_DEF)) {\n                this.pendingPipes.add(type);\n                return;\n            }\n        };\n        R3TestBedCompiler.prototype.queueTypesFromModulesArray = function (arr) {\n            var e_3, _a;\n            try {\n                for (var arr_2 = __values(arr), arr_2_1 = arr_2.next(); !arr_2_1.done; arr_2_1 = arr_2.next()) {\n                    var value = arr_2_1.value;\n                    if (Array.isArray(value)) {\n                        this.queueTypesFromModulesArray(value);\n                    }\n                    else if (hasNgModuleDef(value)) {\n                        var def = value.ngModuleDef;\n                        // Look through declarations, imports, and exports, and queue everything found there.\n                        this.queueTypeArray(maybeUnwrapFn(def.declarations), value);\n                        this.queueTypesFromModulesArray(maybeUnwrapFn(def.imports));\n                        this.queueTypesFromModulesArray(maybeUnwrapFn(def.exports));\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (arr_2_1 && !arr_2_1.done && (_a = arr_2.return)) _a.call(arr_2);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        R3TestBedCompiler.prototype.maybeStoreNgDef = function (prop, type) {\n            if (!this.initialNgDefs.has(type)) {\n                var currentDef = Object.getOwnPropertyDescriptor(type, prop);\n                this.initialNgDefs.set(type, [prop, currentDef]);\n            }\n        };\n        R3TestBedCompiler.prototype.storeFieldOfDefOnType = function (type, defField, field) {\n            var def = type[defField];\n            var original = def[field];\n            this.defCleanupOps.push({ field: field, def: def, original: original });\n        };\n        /**\n         * Clears current components resolution queue, but stores the state of the queue, so we can\n         * restore it later. Clearing the queue is required before we try to compile components (via\n         * `TestBed.compileComponents`), so that component defs are in sync with the resolution queue.\n         */\n        R3TestBedCompiler.prototype.clearComponentResolutionQueue = function () {\n            var _this = this;\n            if (this.originalComponentResolutionQueue === null) {\n                this.originalComponentResolutionQueue = new Map();\n            }\n            clearResolutionOfComponentResourcesQueue().forEach(function (value, key) { return _this.originalComponentResolutionQueue.set(key, value); });\n        };\n        /*\n         * Restores component resolution queue to the previously saved state. This operation is performed\n         * as a part of restoring the state after completion of the current set of tests (that might\n         * potentially mutate the state).\n         */\n        R3TestBedCompiler.prototype.restoreComponentResolutionQueue = function () {\n            if (this.originalComponentResolutionQueue !== null) {\n                restoreComponentResolutionQueue(this.originalComponentResolutionQueue);\n                this.originalComponentResolutionQueue = null;\n            }\n        };\n        R3TestBedCompiler.prototype.restoreOriginalState = function () {\n            var e_4, _a;\n            try {\n                for (var _b = __values(this.defCleanupOps), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var op = _c.value;\n                    op.def[op.field] = op.original;\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n            // Restore initial component/directive/pipe defs\n            this.initialNgDefs.forEach(function (value, type) {\n                var _a = __read(value, 2), prop = _a[0], descriptor = _a[1];\n                if (!descriptor) {\n                    // Delete operations are generally undesirable since they have performance implications\n                    // on objects they were applied to. In this particular case, situations where this code is\n                    // invoked should be quite rare to cause any noticable impact, since it's applied only to\n                    // some test cases (for example when class with no annotations extends some @Component)\n                    // when we need to clear 'ngComponentDef' field on a given class to restore its original\n                    // state (before applying overrides and running tests).\n                    delete type[prop];\n                }\n                else {\n                    Object.defineProperty(type, prop, descriptor);\n                }\n            });\n            this.initialNgDefs.clear();\n            this.moduleProvidersOverridden.clear();\n            this.restoreComponentResolutionQueue();\n            // Restore the locale ID to the default value, this shouldn't be necessary but we never know\n            i0.ɵsetLocaleId(i0.ɵDEFAULT_LOCALE_ID);\n        };\n        R3TestBedCompiler.prototype.compileTestModule = function () {\n            var _this = this;\n            var rootProviderOverrides = this.rootProviderOverrides;\n            var RootScopeModule = /** @class */ (function () {\n                function RootScopeModule() {\n                }\n                RootScopeModule = __decorate([\n                    i0.NgModule({\n                        providers: __spread(rootProviderOverrides),\n                        jit: true,\n                    })\n                ], RootScopeModule);\n                return RootScopeModule;\n            }());\n            var ngZone = new i0.NgZone({ enableLongStackTrace: true });\n            var providers = __spread([\n                { provide: i0.NgZone, useValue: ngZone },\n                { provide: i0.Compiler, useFactory: function () { return new R3TestCompiler(_this); } }\n            ], this.providers, this.providerOverrides);\n            var imports = [RootScopeModule, this.additionalModuleTypes, this.imports || []];\n            // clang-format off\n            i0.ɵcompileNgModuleDefs(this.testModuleType, {\n                declarations: this.declarations,\n                imports: imports,\n                schemas: this.schemas,\n                providers: providers,\n            });\n            // clang-format on\n            this.applyProviderOverridesToModule(this.testModuleType);\n        };\n        Object.defineProperty(R3TestBedCompiler.prototype, \"injector\", {\n            get: function () {\n                if (this._injector !== null) {\n                    return this._injector;\n                }\n                var providers = [];\n                var compilerOptions = this.platform.injector.get(i0.COMPILER_OPTIONS);\n                compilerOptions.forEach(function (opts) {\n                    if (opts.providers) {\n                        providers.push(opts.providers);\n                    }\n                });\n                if (this.compilerProviders !== null) {\n                    providers.push.apply(providers, __spread(this.compilerProviders));\n                }\n                // TODO(ocombe): make this work with an Injector directly instead of creating a module for it\n                var CompilerModule = /** @class */ (function () {\n                    function CompilerModule() {\n                    }\n                    CompilerModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: CompilerModule });\n                    CompilerModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function CompilerModule_Factory(t) { return new (t || CompilerModule)(); }, providers: providers });\n                    return CompilerModule;\n                }());\n                /*@__PURE__*/ i0.ɵsetClassMetadata(CompilerModule, [{\n                        type: i0.NgModule,\n                        args: [{ providers: providers }]\n                    }], null, null);\n                var CompilerModuleFactory = new i0.ɵNgModuleFactory(CompilerModule);\n                this._injector = CompilerModuleFactory.create(this.platform.injector).injector;\n                return this._injector;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        // get overrides for a specific provider (if any)\n        R3TestBedCompiler.prototype.getSingleProviderOverrides = function (provider) {\n            var token = provider && typeof provider === 'object' && provider.hasOwnProperty('provide') ?\n                provider.provide :\n                provider;\n            return this.providerOverridesByToken.get(token) || [];\n        };\n        R3TestBedCompiler.prototype.getProviderOverrides = function (providers) {\n            var _this = this;\n            if (!providers || !providers.length || this.providerOverridesByToken.size === 0)\n                return [];\n            // There are two flattening operations here. The inner flatten() operates on the metadata's\n            // providers and applies a mapping function which retrieves overrides for each incoming\n            // provider. The outer flatten() then flattens the produced overrides array. If this is not\n            // done, the array can contain other empty arrays (e.g. `[[], []]`) which leak into the\n            // providers array and contaminate any error messages that might be generated.\n            return flatten(flatten(providers, function (provider) { return _this.getSingleProviderOverrides(provider); }));\n        };\n        R3TestBedCompiler.prototype.hasProviderOverrides = function (providers) {\n            return this.getProviderOverrides(providers).length > 0;\n        };\n        R3TestBedCompiler.prototype.patchDefWithProviderOverrides = function (declaration, field) {\n            var _this = this;\n            var def = declaration[field];\n            if (def && def.providersResolver) {\n                this.maybeStoreNgDef(field, declaration);\n                var resolver_1 = def.providersResolver;\n                var processProvidersFn_1 = function (providers) {\n                    var overrides = _this.getProviderOverrides(providers);\n                    return __spread(providers, overrides);\n                };\n                this.storeFieldOfDefOnType(declaration, field, 'providersResolver');\n                def.providersResolver = function (ngDef) { return resolver_1(ngDef, processProvidersFn_1); };\n            }\n        };\n        return R3TestBedCompiler;\n    }());\n    function initResolvers() {\n        return {\n            module: new NgModuleResolver(),\n            component: new ComponentResolver(),\n            directive: new DirectiveResolver(),\n            pipe: new PipeResolver()\n        };\n    }\n    function hasNgModuleDef(value) {\n        return value.hasOwnProperty('ngModuleDef');\n    }\n    function maybeUnwrapFn(maybeFn) {\n        return maybeFn instanceof Function ? maybeFn() : maybeFn;\n    }\n    function flatten(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    var R3TestCompiler = /** @class */ (function () {\n        function R3TestCompiler(testBed) {\n            this.testBed = testBed;\n        }\n        R3TestCompiler.prototype.compileModuleSync = function (moduleType) {\n            this.testBed._compileNgModuleSync(moduleType);\n            return new i0.ɵNgModuleFactory(moduleType);\n        };\n        R3TestCompiler.prototype.compileModuleAsync = function (moduleType) {\n            return __awaiter(this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.testBed._compileNgModuleAsync(moduleType)];\n                        case 1:\n                            _a.sent();\n                            return [2 /*return*/, new i0.ɵNgModuleFactory(moduleType)];\n                    }\n                });\n            });\n        };\n        R3TestCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            var ngModuleFactory = this.compileModuleSync(moduleType);\n            var componentFactories = this.testBed._getComponentFactories(moduleType);\n            return new i0.ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n        };\n        R3TestCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return __awaiter(this, void 0, void 0, function () {\n                var ngModuleFactory, componentFactories;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.compileModuleAsync(moduleType)];\n                        case 1:\n                            ngModuleFactory = _a.sent();\n                            componentFactories = this.testBed._getComponentFactories(moduleType);\n                            return [2 /*return*/, new i0.ModuleWithComponentFactories(ngModuleFactory, componentFactories)];\n                    }\n                });\n            });\n        };\n        R3TestCompiler.prototype.clearCache = function () { };\n        R3TestCompiler.prototype.clearCacheFor = function (type) { };\n        R3TestCompiler.prototype.getModuleId = function (moduleType) {\n            var meta = this.testBed._getModuleResolver().resolve(moduleType);\n            return meta && meta.id || undefined;\n        };\n        return R3TestCompiler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _nextRootElementId = 0;\n    var UNDEFINED = Symbol('UNDEFINED');\n    /**\n     * @description\n     * Configures and initializes environment for unit testing and provides methods for\n     * creating components and services in unit tests.\n     *\n     * TestBed is the primary api for writing unit tests for Angular applications and libraries.\n     *\n     * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n     * according to the compiler used.\n     */\n    var TestBedRender3 = /** @class */ (function () {\n        function TestBedRender3() {\n            // Properties\n            this.platform = null;\n            this.ngModule = null;\n            this._compiler = null;\n            this._testModuleRef = null;\n            this._activeFixtures = [];\n            this._globalCompilationChecked = false;\n        }\n        /**\n         * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n         * angular module. These are common to every test in the suite.\n         *\n         * This may only be called once, to set up the common providers for the current test\n         * suite on the current platform. If you absolutely need to change the providers,\n         * first use `resetTestEnvironment`.\n         *\n         * Test modules and platforms for individual platforms are available from\n         * '@angular/<platform_name>/testing'.\n         *\n         * @publicApi\n         */\n        TestBedRender3.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n            var testBed = _getTestBedRender3();\n            testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n            return testBed;\n        };\n        /**\n         * Reset the providers for the test injector.\n         *\n         * @publicApi\n         */\n        TestBedRender3.resetTestEnvironment = function () { _getTestBedRender3().resetTestEnvironment(); };\n        TestBedRender3.configureCompiler = function (config) {\n            _getTestBedRender3().configureCompiler(config);\n            return TestBedRender3;\n        };\n        /**\n         * Allows overriding default providers, directives, pipes, modules of the test injector,\n         * which are defined in test_injector.js\n         */\n        TestBedRender3.configureTestingModule = function (moduleDef) {\n            _getTestBedRender3().configureTestingModule(moduleDef);\n            return TestBedRender3;\n        };\n        /**\n         * Compile components with a `templateUrl` for the test's NgModule.\n         * It is necessary to call this function\n         * as fetching urls is asynchronous.\n         */\n        TestBedRender3.compileComponents = function () { return _getTestBedRender3().compileComponents(); };\n        TestBedRender3.overrideModule = function (ngModule, override) {\n            _getTestBedRender3().overrideModule(ngModule, override);\n            return TestBedRender3;\n        };\n        TestBedRender3.overrideComponent = function (component, override) {\n            _getTestBedRender3().overrideComponent(component, override);\n            return TestBedRender3;\n        };\n        TestBedRender3.overrideDirective = function (directive, override) {\n            _getTestBedRender3().overrideDirective(directive, override);\n            return TestBedRender3;\n        };\n        TestBedRender3.overridePipe = function (pipe, override) {\n            _getTestBedRender3().overridePipe(pipe, override);\n            return TestBedRender3;\n        };\n        TestBedRender3.overrideTemplate = function (component, template) {\n            _getTestBedRender3().overrideComponent(component, { set: { template: template, templateUrl: null } });\n            return TestBedRender3;\n        };\n        /**\n         * Overrides the template of the given component, compiling the template\n         * in the context of the TestingModule.\n         *\n         * Note: This works for JIT and AOTed components as well.\n         */\n        TestBedRender3.overrideTemplateUsingTestingModule = function (component, template) {\n            _getTestBedRender3().overrideTemplateUsingTestingModule(component, template);\n            return TestBedRender3;\n        };\n        TestBedRender3.overrideProvider = function (token, provider) {\n            _getTestBedRender3().overrideProvider(token, provider);\n            return TestBedRender3;\n        };\n        TestBedRender3.deprecatedOverrideProvider = function (token, provider) {\n            _getTestBedRender3().deprecatedOverrideProvider(token, provider);\n            return TestBedRender3;\n        };\n        TestBedRender3.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = i0.Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = i0.InjectFlags.Default; }\n            return _getTestBedRender3().get(token, notFoundValue);\n        };\n        TestBedRender3.createComponent = function (component) {\n            return _getTestBedRender3().createComponent(component);\n        };\n        TestBedRender3.resetTestingModule = function () {\n            _getTestBedRender3().resetTestingModule();\n            return TestBedRender3;\n        };\n        /**\n         * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n         * angular module. These are common to every test in the suite.\n         *\n         * This may only be called once, to set up the common providers for the current test\n         * suite on the current platform. If you absolutely need to change the providers,\n         * first use `resetTestEnvironment`.\n         *\n         * Test modules and platforms for individual platforms are available from\n         * '@angular/<platform_name>/testing'.\n         *\n         * @publicApi\n         */\n        TestBedRender3.prototype.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n            if (this.platform || this.ngModule) {\n                throw new Error('Cannot set base providers because it has already been called');\n            }\n            this.platform = platform;\n            this.ngModule = ngModule;\n            this._compiler = new R3TestBedCompiler(this.platform, this.ngModule);\n        };\n        /**\n         * Reset the providers for the test injector.\n         *\n         * @publicApi\n         */\n        TestBedRender3.prototype.resetTestEnvironment = function () {\n            this.resetTestingModule();\n            this._compiler = null;\n            this.platform = null;\n            this.ngModule = null;\n        };\n        TestBedRender3.prototype.resetTestingModule = function () {\n            this.checkGlobalCompilationFinished();\n            i0.ɵresetCompiledComponents();\n            if (this._compiler !== null) {\n                this.compiler.restoreOriginalState();\n            }\n            this._compiler = new R3TestBedCompiler(this.platform, this.ngModule);\n            this._testModuleRef = null;\n            this.destroyActiveFixtures();\n        };\n        TestBedRender3.prototype.configureCompiler = function (config) {\n            if (config.useJit != null) {\n                throw new Error('the Render3 compiler JiT mode is not configurable !');\n            }\n            if (config.providers !== undefined) {\n                this.compiler.setCompilerProviders(config.providers);\n            }\n        };\n        TestBedRender3.prototype.configureTestingModule = function (moduleDef) {\n            this.assertNotInstantiated('R3TestBed.configureTestingModule', 'configure the test module');\n            this.compiler.configureTestingModule(moduleDef);\n        };\n        TestBedRender3.prototype.compileComponents = function () { return this.compiler.compileComponents(); };\n        TestBedRender3.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = i0.Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = i0.InjectFlags.Default; }\n            if (token === TestBedRender3) {\n                return this;\n            }\n            var result = this.testModuleRef.injector.get(token, UNDEFINED, flags);\n            return result === UNDEFINED ? this.compiler.injector.get(token, notFoundValue, flags) : result;\n        };\n        TestBedRender3.prototype.execute = function (tokens, fn, context) {\n            var _this = this;\n            var params = tokens.map(function (t) { return _this.get(t); });\n            return fn.apply(context, params);\n        };\n        TestBedRender3.prototype.overrideModule = function (ngModule, override) {\n            this.assertNotInstantiated('overrideModule', 'override module metadata');\n            this.compiler.overrideModule(ngModule, override);\n        };\n        TestBedRender3.prototype.overrideComponent = function (component, override) {\n            this.assertNotInstantiated('overrideComponent', 'override component metadata');\n            this.compiler.overrideComponent(component, override);\n        };\n        TestBedRender3.prototype.overrideTemplateUsingTestingModule = function (component, template) {\n            this.assertNotInstantiated('R3TestBed.overrideTemplateUsingTestingModule', 'Cannot override template when the test module has already been instantiated');\n            this.compiler.overrideTemplateUsingTestingModule(component, template);\n        };\n        TestBedRender3.prototype.overrideDirective = function (directive, override) {\n            this.assertNotInstantiated('overrideDirective', 'override directive metadata');\n            this.compiler.overrideDirective(directive, override);\n        };\n        TestBedRender3.prototype.overridePipe = function (pipe, override) {\n            this.assertNotInstantiated('overridePipe', 'override pipe metadata');\n            this.compiler.overridePipe(pipe, override);\n        };\n        /**\n         * Overwrites all providers for the given token with the given provider definition.\n         */\n        TestBedRender3.prototype.overrideProvider = function (token, provider) {\n            this.compiler.overrideProvider(token, provider);\n        };\n        TestBedRender3.prototype.deprecatedOverrideProvider = function (token, provider) {\n            // HACK: This is NOT the correct implementation for deprecatedOverrideProvider.\n            // To implement it in a backward compatible way, we would need to record some state\n            // so we know to prevent eager instantiation of NgModules. However, we don't plan\n            // to implement this at all since the API is deprecated and scheduled for removal\n            // in V8. This hack is here temporarily for Ivy testing until we transition apps\n            // inside Google to the overrideProvider API. At that point, we will be able to\n            // remove this method entirely. In the meantime, we can use overrideProvider to\n            // test apps with Ivy that don't care about eager instantiation. This fixes 85%\n            // of cases in our blueprint.\n            this.overrideProvider(token, provider);\n        };\n        TestBedRender3.prototype.createComponent = function (type) {\n            var _this = this;\n            var testComponentRenderer = this.get(TestComponentRenderer);\n            var rootElId = \"root\" + _nextRootElementId++;\n            testComponentRenderer.insertRootElement(rootElId);\n            var componentDef = type.ngComponentDef;\n            if (!componentDef) {\n                throw new Error(\"It looks like '\" + i0.ɵstringify(type) + \"' has not been IVY compiled - it has no 'ngComponentDef' field\");\n            }\n            // TODO: Don't cast as `any`, proper type is boolean[]\n            var noNgZone = this.get(ComponentFixtureNoNgZone, false);\n            // TODO: Don't cast as `any`, proper type is boolean[]\n            var autoDetect = this.get(ComponentFixtureAutoDetect, false);\n            var ngZone = noNgZone ? null : this.get(i0.NgZone, null);\n            var componentFactory = new i0.ɵRender3ComponentFactory(componentDef);\n            var initComponent = function () {\n                var componentRef = componentFactory.create(i0.Injector.NULL, [], \"#\" + rootElId, _this.testModuleRef);\n                return new ComponentFixture(componentRef, ngZone, autoDetect);\n            };\n            var fixture = ngZone ? ngZone.run(initComponent) : initComponent();\n            this._activeFixtures.push(fixture);\n            return fixture;\n        };\n        Object.defineProperty(TestBedRender3.prototype, \"compiler\", {\n            get: function () {\n                if (this._compiler === null) {\n                    throw new Error(\"Need to call TestBed.initTestEnvironment() first\");\n                }\n                return this._compiler;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TestBedRender3.prototype, \"testModuleRef\", {\n            get: function () {\n                if (this._testModuleRef === null) {\n                    this._testModuleRef = this.compiler.finalize();\n                }\n                return this._testModuleRef;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        TestBedRender3.prototype.assertNotInstantiated = function (methodName, methodDescription) {\n            if (this._testModuleRef !== null) {\n                throw new Error(\"Cannot \" + methodDescription + \" when the test module has already been instantiated. \" +\n                    (\"Make sure you are not using `inject` before `\" + methodName + \"`.\"));\n            }\n        };\n        /**\n         * Check whether the module scoping queue should be flushed, and flush it if needed.\n         *\n         * When the TestBed is reset, it clears the JIT module compilation queue, cancelling any\n         * in-progress module compilation. This creates a potential hazard - the very first time the\n         * TestBed is initialized (or if it's reset without being initialized), there may be pending\n         * compilations of modules declared in global scope. These compilations should be finished.\n         *\n         * To ensure that globally declared modules have their components scoped properly, this function\n         * is called whenever TestBed is initialized or reset. The _first_ time that this happens, prior\n         * to any other operations, the scoping queue is flushed.\n         */\n        TestBedRender3.prototype.checkGlobalCompilationFinished = function () {\n            // Checking _testNgModuleRef is null should not be necessary, but is left in as an additional\n            // guard that compilations queued in tests (after instantiation) are never flushed accidentally.\n            if (!this._globalCompilationChecked && this._testModuleRef === null) {\n                i0.ɵflushModuleScopingQueueAsMuchAsPossible();\n            }\n            this._globalCompilationChecked = true;\n        };\n        TestBedRender3.prototype.destroyActiveFixtures = function () {\n            this._activeFixtures.forEach(function (fixture) {\n                try {\n                    fixture.destroy();\n                }\n                catch (e) {\n                    console.error('Error during cleanup of component', {\n                        component: fixture.componentInstance,\n                        stacktrace: e,\n                    });\n                }\n            });\n            this._activeFixtures = [];\n        };\n        return TestBedRender3;\n    }());\n    var testBed;\n    function _getTestBedRender3() {\n        return testBed = testBed || new TestBedRender3();\n    }\n\n    function unimplemented() {\n        throw Error('unimplemented');\n    }\n    /**\n     * Special interface to the compiler only used by testing\n     *\n     * @publicApi\n     */\n    var TestingCompiler = /** @class */ (function (_super) {\n        __extends(TestingCompiler, _super);\n        function TestingCompiler() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(TestingCompiler.prototype, \"injector\", {\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        TestingCompiler.prototype.overrideModule = function (module, overrides) {\n            throw unimplemented();\n        };\n        TestingCompiler.prototype.overrideDirective = function (directive, overrides) {\n            throw unimplemented();\n        };\n        TestingCompiler.prototype.overrideComponent = function (component, overrides) {\n            throw unimplemented();\n        };\n        TestingCompiler.prototype.overridePipe = function (directive, overrides) {\n            throw unimplemented();\n        };\n        /**\n         * Allows to pass the compile summary from AOT compilation to the JIT compiler,\n         * so that it can use the code generated by AOT.\n         */\n        TestingCompiler.prototype.loadAotSummaries = function (summaries) { throw unimplemented(); };\n        /**\n         * Gets the component factory for the given component.\n         * This assumes that the component has been compiled before calling this call using\n         * `compileModuleAndAllComponents*`.\n         */\n        TestingCompiler.prototype.getComponentFactory = function (component) { throw unimplemented(); };\n        /**\n         * Returns the component type that is stored in the given error.\n         * This can be used for errors created by compileModule...\n         */\n        TestingCompiler.prototype.getComponentFromError = function (error) { throw unimplemented(); };\n        TestingCompiler.ngInjectableDef = i0.ɵɵdefineInjectable({ token: TestingCompiler, factory: function TestingCompiler_Factory(t) { return ɵTestingCompiler_BaseFactory((t || TestingCompiler)); }, providedIn: null });\n        return TestingCompiler;\n    }(i0.Compiler));\n    var ɵTestingCompiler_BaseFactory = i0.ɵɵgetInheritedFactory(TestingCompiler);\n    /*@__PURE__*/ i0.ɵsetClassMetadata(TestingCompiler, [{\n            type: i0.Injectable\n        }], null, null);\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var TestingCompilerFactory = /** @class */ (function () {\n        function TestingCompilerFactory() {\n        }\n        return TestingCompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED$1 = new Object();\n    var _nextRootElementId$1 = 0;\n    /**\n     * @description\n     * Configures and initializes environment for unit testing and provides methods for\n     * creating components and services in unit tests.\n     *\n     * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n     *\n     * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n     * according to the compiler used.\n     */\n    var TestBedViewEngine = /** @class */ (function () {\n        function TestBedViewEngine() {\n            this._instantiated = false;\n            this._compiler = null;\n            this._moduleRef = null;\n            this._moduleFactory = null;\n            this._compilerOptions = [];\n            this._moduleOverrides = [];\n            this._componentOverrides = [];\n            this._directiveOverrides = [];\n            this._pipeOverrides = [];\n            this._providers = [];\n            this._declarations = [];\n            this._imports = [];\n            this._schemas = [];\n            this._activeFixtures = [];\n            this._testEnvAotSummaries = function () { return []; };\n            this._aotSummaries = [];\n            this._templateOverrides = [];\n            this._isRoot = true;\n            this._rootProviderOverrides = [];\n            this.platform = null;\n            this.ngModule = null;\n        }\n        /**\n         * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n         * angular module. These are common to every test in the suite.\n         *\n         * This may only be called once, to set up the common providers for the current test\n         * suite on the current platform. If you absolutely need to change the providers,\n         * first use `resetTestEnvironment`.\n         *\n         * Test modules and platforms for individual platforms are available from\n         * '@angular/<platform_name>/testing'.\n         */\n        TestBedViewEngine.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n            var testBed = _getTestBedViewEngine();\n            testBed.initTestEnvironment(ngModule, platform, aotSummaries);\n            return testBed;\n        };\n        /**\n         * Reset the providers for the test injector.\n         */\n        TestBedViewEngine.resetTestEnvironment = function () { _getTestBedViewEngine().resetTestEnvironment(); };\n        TestBedViewEngine.resetTestingModule = function () {\n            _getTestBedViewEngine().resetTestingModule();\n            return TestBedViewEngine;\n        };\n        /**\n         * Allows overriding default compiler providers and settings\n         * which are defined in test_injector.js\n         */\n        TestBedViewEngine.configureCompiler = function (config) {\n            _getTestBedViewEngine().configureCompiler(config);\n            return TestBedViewEngine;\n        };\n        /**\n         * Allows overriding default providers, directives, pipes, modules of the test injector,\n         * which are defined in test_injector.js\n         */\n        TestBedViewEngine.configureTestingModule = function (moduleDef) {\n            _getTestBedViewEngine().configureTestingModule(moduleDef);\n            return TestBedViewEngine;\n        };\n        /**\n         * Compile components with a `templateUrl` for the test's NgModule.\n         * It is necessary to call this function\n         * as fetching urls is asynchronous.\n         */\n        TestBedViewEngine.compileComponents = function () { return getTestBed().compileComponents(); };\n        TestBedViewEngine.overrideModule = function (ngModule, override) {\n            _getTestBedViewEngine().overrideModule(ngModule, override);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.overrideComponent = function (component, override) {\n            _getTestBedViewEngine().overrideComponent(component, override);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.overrideDirective = function (directive, override) {\n            _getTestBedViewEngine().overrideDirective(directive, override);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.overridePipe = function (pipe, override) {\n            _getTestBedViewEngine().overridePipe(pipe, override);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.overrideTemplate = function (component, template) {\n            _getTestBedViewEngine().overrideComponent(component, { set: { template: template, templateUrl: null } });\n            return TestBedViewEngine;\n        };\n        /**\n         * Overrides the template of the given component, compiling the template\n         * in the context of the TestingModule.\n         *\n         * Note: This works for JIT and AOTed components as well.\n         */\n        TestBedViewEngine.overrideTemplateUsingTestingModule = function (component, template) {\n            _getTestBedViewEngine().overrideTemplateUsingTestingModule(component, template);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.overrideProvider = function (token, provider) {\n            _getTestBedViewEngine().overrideProvider(token, provider);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.deprecatedOverrideProvider = function (token, provider) {\n            _getTestBedViewEngine().deprecatedOverrideProvider(token, provider);\n            return TestBedViewEngine;\n        };\n        TestBedViewEngine.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = i0.Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = i0.InjectFlags.Default; }\n            return _getTestBedViewEngine().get(token, notFoundValue, flags);\n        };\n        TestBedViewEngine.createComponent = function (component) {\n            return _getTestBedViewEngine().createComponent(component);\n        };\n        /**\n         * Initialize the environment for testing with a compiler factory, a PlatformRef, and an\n         * angular module. These are common to every test in the suite.\n         *\n         * This may only be called once, to set up the common providers for the current test\n         * suite on the current platform. If you absolutely need to change the providers,\n         * first use `resetTestEnvironment`.\n         *\n         * Test modules and platforms for individual platforms are available from\n         * '@angular/<platform_name>/testing'.\n         */\n        TestBedViewEngine.prototype.initTestEnvironment = function (ngModule, platform, aotSummaries) {\n            if (this.platform || this.ngModule) {\n                throw new Error('Cannot set base providers because it has already been called');\n            }\n            this.platform = platform;\n            this.ngModule = ngModule;\n            if (aotSummaries) {\n                this._testEnvAotSummaries = aotSummaries;\n            }\n        };\n        /**\n         * Reset the providers for the test injector.\n         */\n        TestBedViewEngine.prototype.resetTestEnvironment = function () {\n            this.resetTestingModule();\n            this.platform = null;\n            this.ngModule = null;\n            this._testEnvAotSummaries = function () { return []; };\n        };\n        TestBedViewEngine.prototype.resetTestingModule = function () {\n            i0.ɵclearOverrides();\n            this._aotSummaries = [];\n            this._templateOverrides = [];\n            this._compiler = null;\n            this._moduleOverrides = [];\n            this._componentOverrides = [];\n            this._directiveOverrides = [];\n            this._pipeOverrides = [];\n            this._isRoot = true;\n            this._rootProviderOverrides = [];\n            this._moduleRef = null;\n            this._moduleFactory = null;\n            this._compilerOptions = [];\n            this._providers = [];\n            this._declarations = [];\n            this._imports = [];\n            this._schemas = [];\n            this._instantiated = false;\n            this._activeFixtures.forEach(function (fixture) {\n                try {\n                    fixture.destroy();\n                }\n                catch (e) {\n                    console.error('Error during cleanup of component', {\n                        component: fixture.componentInstance,\n                        stacktrace: e,\n                    });\n                }\n            });\n            this._activeFixtures = [];\n        };\n        TestBedViewEngine.prototype.configureCompiler = function (config) {\n            this._assertNotInstantiated('TestBed.configureCompiler', 'configure the compiler');\n            this._compilerOptions.push(config);\n        };\n        TestBedViewEngine.prototype.configureTestingModule = function (moduleDef) {\n            var _a, _b, _c, _d;\n            this._assertNotInstantiated('TestBed.configureTestingModule', 'configure the test module');\n            if (moduleDef.providers) {\n                (_a = this._providers).push.apply(_a, __spread(moduleDef.providers));\n            }\n            if (moduleDef.declarations) {\n                (_b = this._declarations).push.apply(_b, __spread(moduleDef.declarations));\n            }\n            if (moduleDef.imports) {\n                (_c = this._imports).push.apply(_c, __spread(moduleDef.imports));\n            }\n            if (moduleDef.schemas) {\n                (_d = this._schemas).push.apply(_d, __spread(moduleDef.schemas));\n            }\n            if (moduleDef.aotSummaries) {\n                this._aotSummaries.push(moduleDef.aotSummaries);\n            }\n        };\n        TestBedViewEngine.prototype.compileComponents = function () {\n            var _this = this;\n            if (this._moduleFactory || this._instantiated) {\n                return Promise.resolve(null);\n            }\n            var moduleType = this._createCompilerAndModule();\n            return this._compiler.compileModuleAndAllComponentsAsync(moduleType)\n                .then(function (moduleAndComponentFactories) {\n                _this._moduleFactory = moduleAndComponentFactories.ngModuleFactory;\n            });\n        };\n        TestBedViewEngine.prototype._initIfNeeded = function () {\n            var e_1, _a;\n            if (this._instantiated) {\n                return;\n            }\n            if (!this._moduleFactory) {\n                try {\n                    var moduleType = this._createCompilerAndModule();\n                    this._moduleFactory =\n                        this._compiler.compileModuleAndAllComponentsSync(moduleType).ngModuleFactory;\n                }\n                catch (e) {\n                    var errorCompType = this._compiler.getComponentFromError(e);\n                    if (errorCompType) {\n                        throw new Error(\"This test module uses the component \" + i0.ɵstringify(errorCompType) + \" which is using a \\\"templateUrl\\\" or \\\"styleUrls\\\", but they were never compiled. \" +\n                            \"Please call \\\"TestBed.compileComponents\\\" before your test.\");\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            try {\n                for (var _b = __values(this._templateOverrides), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var _d = _c.value, component = _d.component, templateOf = _d.templateOf;\n                    var compFactory = this._compiler.getComponentFactory(templateOf);\n                    i0.ɵoverrideComponentView(component, compFactory);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var ngZone = new i0.NgZone({ enableLongStackTrace: true });\n            var providers = [{ provide: i0.NgZone, useValue: ngZone }];\n            var ngZoneInjector = i0.Injector.create({\n                providers: providers,\n                parent: this.platform.injector,\n                name: this._moduleFactory.moduleType.name\n            });\n            this._moduleRef = this._moduleFactory.create(ngZoneInjector);\n            // ApplicationInitStatus.runInitializers() is marked @internal to core. So casting to any\n            // before accessing it.\n            this._moduleRef.injector.get(i0.ApplicationInitStatus).runInitializers();\n            this._instantiated = true;\n        };\n        TestBedViewEngine.prototype._createCompilerAndModule = function () {\n            var _this = this;\n            var e_2, _a;\n            var providers = this._providers.concat([{ provide: TestBed, useValue: this }]);\n            var declarations = __spread(this._declarations, this._templateOverrides.map(function (entry) { return entry.templateOf; }));\n            var rootScopeImports = [];\n            var rootProviderOverrides = this._rootProviderOverrides;\n            if (this._isRoot) {\n                var RootScopeModule = /** @class */ (function () {\n                    function RootScopeModule() {\n                    }\n                    RootScopeModule = __decorate([\n                        i0.NgModule({\n                            providers: __spread(rootProviderOverrides),\n                            jit: true,\n                        })\n                    ], RootScopeModule);\n                    return RootScopeModule;\n                }());\n                rootScopeImports.push(RootScopeModule);\n            }\n            providers.push({ provide: i0.ɵAPP_ROOT, useValue: this._isRoot });\n            var imports = [rootScopeImports, this.ngModule, this._imports];\n            var schemas = this._schemas;\n            var DynamicTestModule = /** @class */ (function () {\n                function DynamicTestModule() {\n                }\n                DynamicTestModule = __decorate([\n                    i0.NgModule({ providers: providers, declarations: declarations, imports: imports, schemas: schemas, jit: true })\n                ], DynamicTestModule);\n                return DynamicTestModule;\n            }());\n            var compilerFactory = this.platform.injector.get(TestingCompilerFactory);\n            this._compiler = compilerFactory.createTestingCompiler(this._compilerOptions);\n            try {\n                for (var _b = __values(__spread([this._testEnvAotSummaries], this._aotSummaries)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var summary = _c.value;\n                    this._compiler.loadAotSummaries(summary);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._moduleOverrides.forEach(function (entry) { return _this._compiler.overrideModule(entry[0], entry[1]); });\n            this._componentOverrides.forEach(function (entry) { return _this._compiler.overrideComponent(entry[0], entry[1]); });\n            this._directiveOverrides.forEach(function (entry) { return _this._compiler.overrideDirective(entry[0], entry[1]); });\n            this._pipeOverrides.forEach(function (entry) { return _this._compiler.overridePipe(entry[0], entry[1]); });\n            return DynamicTestModule;\n        };\n        TestBedViewEngine.prototype._assertNotInstantiated = function (methodName, methodDescription) {\n            if (this._instantiated) {\n                throw new Error(\"Cannot \" + methodDescription + \" when the test module has already been instantiated. \" +\n                    (\"Make sure you are not using `inject` before `\" + methodName + \"`.\"));\n            }\n        };\n        TestBedViewEngine.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = i0.Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = i0.InjectFlags.Default; }\n            this._initIfNeeded();\n            if (token === TestBed) {\n                return this;\n            }\n            // Tests can inject things from the ng module and from the compiler,\n            // but the ng module can't inject things from the compiler and vice versa.\n            var result = this._moduleRef.injector.get(token, UNDEFINED$1, flags);\n            return result === UNDEFINED$1 ? this._compiler.injector.get(token, notFoundValue, flags) : result;\n        };\n        TestBedViewEngine.prototype.execute = function (tokens, fn, context) {\n            var _this = this;\n            this._initIfNeeded();\n            var params = tokens.map(function (t) { return _this.get(t); });\n            return fn.apply(context, params);\n        };\n        TestBedViewEngine.prototype.overrideModule = function (ngModule, override) {\n            this._assertNotInstantiated('overrideModule', 'override module metadata');\n            this._moduleOverrides.push([ngModule, override]);\n        };\n        TestBedViewEngine.prototype.overrideComponent = function (component, override) {\n            this._assertNotInstantiated('overrideComponent', 'override component metadata');\n            this._componentOverrides.push([component, override]);\n        };\n        TestBedViewEngine.prototype.overrideDirective = function (directive, override) {\n            this._assertNotInstantiated('overrideDirective', 'override directive metadata');\n            this._directiveOverrides.push([directive, override]);\n        };\n        TestBedViewEngine.prototype.overridePipe = function (pipe, override) {\n            this._assertNotInstantiated('overridePipe', 'override pipe metadata');\n            this._pipeOverrides.push([pipe, override]);\n        };\n        TestBedViewEngine.prototype.overrideProvider = function (token, provider) {\n            this.overrideProviderImpl(token, provider);\n        };\n        TestBedViewEngine.prototype.deprecatedOverrideProvider = function (token, provider) {\n            this.overrideProviderImpl(token, provider, /* deprecated */ true);\n        };\n        TestBedViewEngine.prototype.overrideProviderImpl = function (token, provider, deprecated) {\n            if (deprecated === void 0) { deprecated = false; }\n            var def = null;\n            if (typeof token !== 'string' && (def = i0.ɵgetInjectableDef(token)) && def.providedIn === 'root') {\n                if (provider.useFactory) {\n                    this._rootProviderOverrides.push({ provide: token, useFactory: provider.useFactory, deps: provider.deps || [] });\n                }\n                else {\n                    this._rootProviderOverrides.push({ provide: token, useValue: provider.useValue });\n                }\n            }\n            var flags = 0;\n            var value;\n            if (provider.useFactory) {\n                flags |= 1024 /* TypeFactoryProvider */;\n                value = provider.useFactory;\n            }\n            else {\n                flags |= 256 /* TypeValueProvider */;\n                value = provider.useValue;\n            }\n            var deps = (provider.deps || []).map(function (dep) {\n                var depFlags = 0 /* None */;\n                var depToken;\n                if (Array.isArray(dep)) {\n                    dep.forEach(function (entry) {\n                        if (entry instanceof i0.Optional) {\n                            depFlags |= 2 /* Optional */;\n                        }\n                        else if (entry instanceof i0.SkipSelf) {\n                            depFlags |= 1 /* SkipSelf */;\n                        }\n                        else {\n                            depToken = entry;\n                        }\n                    });\n                }\n                else {\n                    depToken = dep;\n                }\n                return [depFlags, depToken];\n            });\n            i0.ɵoverrideProvider({ token: token, flags: flags, deps: deps, value: value, deprecatedBehavior: deprecated });\n        };\n        TestBedViewEngine.prototype.overrideTemplateUsingTestingModule = function (component, template) {\n            this._assertNotInstantiated('overrideTemplateUsingTestingModule', 'override template');\n            var OverrideComponent = /** @class */ (function () {\n                function OverrideComponent() {\n                }\n                OverrideComponent = __decorate([\n                    i0.Component({ selector: 'empty', template: template, jit: true })\n                ], OverrideComponent);\n                return OverrideComponent;\n            }());\n            this._templateOverrides.push({ component: component, templateOf: OverrideComponent });\n        };\n        TestBedViewEngine.prototype.createComponent = function (component) {\n            var _this = this;\n            this._initIfNeeded();\n            var componentFactory = this._compiler.getComponentFactory(component);\n            if (!componentFactory) {\n                throw new Error(\"Cannot create the component \" + i0.ɵstringify(component) + \" as it was not imported into the testing module!\");\n            }\n            // TODO: Don't cast as `any`, proper type is boolean[]\n            var noNgZone = this.get(ComponentFixtureNoNgZone, false);\n            // TODO: Don't cast as `any`, proper type is boolean[]\n            var autoDetect = this.get(ComponentFixtureAutoDetect, false);\n            var ngZone = noNgZone ? null : this.get(i0.NgZone, null);\n            var testComponentRenderer = this.get(TestComponentRenderer);\n            var rootElId = \"root\" + _nextRootElementId$1++;\n            testComponentRenderer.insertRootElement(rootElId);\n            var initComponent = function () {\n                var componentRef = componentFactory.create(i0.Injector.NULL, [], \"#\" + rootElId, _this._moduleRef);\n                return new ComponentFixture(componentRef, ngZone, autoDetect);\n            };\n            var fixture = !ngZone ? initComponent() : ngZone.run(initComponent);\n            this._activeFixtures.push(fixture);\n            return fixture;\n        };\n        return TestBedViewEngine;\n    }());\n    /**\n     * @description\n     * Configures and initializes environment for unit testing and provides methods for\n     * creating components and services in unit tests.\n     *\n     * `TestBed` is the primary api for writing unit tests for Angular applications and libraries.\n     *\n     * Note: Use `TestBed` in tests. It will be set to either `TestBedViewEngine` or `TestBedRender3`\n     * according to the compiler used.\n     *\n     * @publicApi\n     */\n    var TestBed = i0.ɵivyEnabled ? TestBedRender3 : TestBedViewEngine;\n    /**\n     * Returns a singleton of the applicable `TestBed`.\n     *\n     * It will be either an instance of `TestBedViewEngine` or `TestBedRender3`.\n     *\n     * @publicApi\n     */\n    var getTestBed = i0.ɵivyEnabled ? _getTestBedRender3 : _getTestBedViewEngine;\n    var testBed$1;\n    function _getTestBedViewEngine() {\n        return testBed$1 = testBed$1 || new TestBedViewEngine();\n    }\n    /**\n     * Allows injecting dependencies in `beforeEach()` and `it()`.\n     *\n     * Example:\n     *\n     * ```\n     * beforeEach(inject([Dependency, AClass], (dep, object) => {\n     *   // some code that uses `dep` and `object`\n     *   // ...\n     * }));\n     *\n     * it('...', inject([AClass], (object) => {\n     *   object.doSomething();\n     *   expect(...);\n     * })\n     * ```\n     *\n     * Notes:\n     * - inject is currently a function because of some Traceur limitation the syntax should\n     * eventually\n     *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n     *\n     * @publicApi\n     */\n    function inject(tokens, fn) {\n        var testBed = getTestBed();\n        if (tokens.indexOf(AsyncTestCompleter) >= 0) {\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                var _this = this;\n                // Return an async test method that returns a Promise if AsyncTestCompleter is one of\n                // the injected tokens.\n                return testBed.compileComponents().then(function () {\n                    var completer = testBed.get(AsyncTestCompleter);\n                    testBed.execute(tokens, fn, _this);\n                    return completer.promise;\n                });\n            };\n        }\n        else {\n            // Not using an arrow function to preserve context passed from call site\n            return function () { return testBed.execute(tokens, fn, this); };\n        }\n    }\n    /**\n     * @publicApi\n     */\n    var InjectSetupWrapper = /** @class */ (function () {\n        function InjectSetupWrapper(_moduleDef) {\n            this._moduleDef = _moduleDef;\n        }\n        InjectSetupWrapper.prototype._addModule = function () {\n            var moduleDef = this._moduleDef();\n            if (moduleDef) {\n                getTestBed().configureTestingModule(moduleDef);\n            }\n        };\n        InjectSetupWrapper.prototype.inject = function (tokens, fn) {\n            var self = this;\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                self._addModule();\n                return inject(tokens, fn).call(this);\n            };\n        };\n        return InjectSetupWrapper;\n    }());\n    function withModule(moduleDef, fn) {\n        if (fn) {\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                var testBed = getTestBed();\n                if (moduleDef) {\n                    testBed.configureTestingModule(moduleDef);\n                }\n                return fn.apply(this);\n            };\n        }\n        return new InjectSetupWrapper(function () { return moduleDef; });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _global$1 = (typeof window === 'undefined' ? global : window);\n    // Reset the test providers and the fake async zone before each test.\n    if (_global$1.beforeEach) {\n        _global$1.beforeEach(function () {\n            TestBed.resetTestingModule();\n            resetFakeAsyncZone();\n        });\n    }\n    // TODO(juliemr): remove this, only used because we need to export something to have compilation\n    // work.\n    var __core_private_testing_placeholder__ = '';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.TestBed = TestBed;\n    exports.getTestBed = getTestBed;\n    exports.inject = inject;\n    exports.InjectSetupWrapper = InjectSetupWrapper;\n    exports.withModule = withModule;\n    exports.ɵMetadataOverrider = MetadataOverrider;\n    exports.async = async;\n    exports.ComponentFixture = ComponentFixture;\n    exports.resetFakeAsyncZone = resetFakeAsyncZone;\n    exports.fakeAsync = fakeAsync;\n    exports.tick = tick;\n    exports.flush = flush;\n    exports.discardPeriodicTasks = discardPeriodicTasks;\n    exports.flushMicrotasks = flushMicrotasks;\n    exports.TestComponentRenderer = TestComponentRenderer;\n    exports.ComponentFixtureAutoDetect = ComponentFixtureAutoDetect;\n    exports.ComponentFixtureNoNgZone = ComponentFixtureNoNgZone;\n    exports.__core_private_testing_placeholder__ = __core_private_testing_placeholder__;\n    exports.ɵTestingCompiler = TestingCompiler;\n    exports.ɵTestingCompilerFactory = TestingCompilerFactory;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core-testing.umd.js.map\n"]}