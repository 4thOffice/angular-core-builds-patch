{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","tNode","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","NodeInjector","_tNode","_lView","_injectorIndex","previousTNode","previousLView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","tCleanup","cleanup","lCleanup","listener","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","directive","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","useCapture","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hostStylingHackMap","squashedClassDeclarations","hackSquashDeclaration","hackSetStaticClasses","staticClassStartIndex","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","hackImplementationOfElementStyleProp","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","_hostView","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","Node","isBrowserEvents","getListeners","listeners","firstParam","secondParam","useCaptureOrIndx","sort","sortListeners","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","styleName","eStyles","style","name_1","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0-beta.1+6.sha-dcb44e6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        for (var i = startingIndex; i < directiveEnd; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            var previousTNode = getPreviousOrParentTNode();\n            var previousLView = getLView();\n            setTNodeAndViewData(this._tNode, this._lView);\n            try {\n                return getOrCreateInjectable(this._tNode, this._lView, token);\n            }\n            finally {\n                setTNodeAndViewData(previousTNode, previousLView);\n            }\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[FLAGS] !== 'number' &&\n            typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        if (directive != undefined) {\n            hackImplementationOfElementStyleProp(index, styleIndex, valueToAdd, suffix, directive);\n        }\n        else {\n            updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd);\n        }\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        var squashedClassDeclarations = hackSquashDeclaration(classDeclarations);\n        hostStylingHackMap.set(directive, {\n            classDeclarations: squashedClassDeclarations,\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n        hackSetStaticClasses(node, squashedClassDeclarations);\n    }\n    function hackSetStaticClasses(node, classDeclarations) {\n        // Static classes need to be set here because static classes don't generate\n        // elementClassProp instructions.\n        var lView = getLView();\n        var staticClassStartIndex = classDeclarations.indexOf(1 /* VALUES_MODE */) + 1;\n        var renderer = lView[RENDERER];\n        for (var i = staticClassStartIndex; i < classDeclarations.length; i += 2) {\n            var className = classDeclarations[i];\n            var value = classDeclarations[i + 1];\n            // if value is true, then this is a static class and we should set it now.\n            // class bindings are set separately in elementClassProp.\n            if (value === true) {\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(node, className);\n                }\n                else {\n                    var classList = node.classList;\n                    classList.add(className);\n                }\n            }\n        }\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var styleName = hostStylingHack.styleDeclarations[styleIndex];\n        var renderer = lView[RENDERER];\n        setStyle(node, styleName, value, renderer, null);\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef && viewAttached(this._lView)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = lView[secondParam];\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null && !isDuplicate) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0-beta.1+6.sha-dcb44e6');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                    // dequeue\n                    moduleQueue.splice(i, 1);\n                    setScopeOnDeclaredComponents(moduleType, ngModule);\n                }\n            }\n            flushingModuleQueue = false;\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }], null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], [], null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], [{\n            type: Injector\n        }], null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }], null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }], null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBased(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBased(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], [{\n            type: ApplicationRef\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}