{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/core/bundles/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","TypeDecorator","cls","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","undefined","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","annotations","Optional","SkipSelf","Self","Inject","formatError","text","obj","source","charAt","substr","context","parts","JSON","replace","NEW_LINE","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","slice","reverse","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","destroyPlatform","destroy","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","optionsReducer","dst","objs","reduce","__assign","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","state","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","SOURCE","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","template","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","moduleDef","providersByKey","initNgModule","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","UNDEFINED_VALUE","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","depDefs","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","__proto__","assign","s","n","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","major","split","minor","patch","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_console","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","enumerable","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","DashCase","Renderer2","NgModuleFactoryLoader","_results","filter","find","toArray","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","listeners","providerTokens","attributes","classes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","begin","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","_ngModuleDefFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearProviderOverrides","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","keyframes","transition","ɵw","ɵx","ɵbb","ɵy","ɵba","ɵz","ɵbc","ɵv","ɵj","ɵk","ɵl","ɵe","ɵf","ɵg","ɵh","ɵi","ɵb","ɵc","ɵd","ɵm","ɵo","ɵn","ɵr","ɵp","ɵq","ɵa","ɵs","ɵt"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/core/bundles/core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.0-beta.0-faa6212\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.0-beta.0-faa6212\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.1.0-beta.0-faa6212');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ desc = \"Platform: \" + name;\n    var /** @type {?} */ marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var /** @type {?} */ injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        var /** @type {?} */ providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, token.name);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs.end) {\n            fs.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, token.name);\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return /** @type {?} */ ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n    initServicesIfNeeded();\n    return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Injectable = Injectable;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearProviderOverrides = clearProviderOverrides;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵw = animate$1;\nexports.ɵx = group$1;\nexports.ɵbb = keyframes$1;\nexports.ɵy = sequence$1;\nexports.ɵba = state$1;\nexports.ɵz = style$1;\nexports.ɵbc = transition$1;\nexports.ɵv = trigger$1;\nexports.ɵj = _iterableDiffersFactory;\nexports.ɵk = _keyValueDiffersFactory;\nexports.ɵl = _localeFactory;\nexports.ɵe = _appIdRandomProviderFactory;\nexports.ɵf = defaultIterableDiffers;\nexports.ɵg = defaultKeyValueDiffers;\nexports.ɵh = DefaultIterableDifferFactory;\nexports.ɵi = DefaultKeyValueDifferFactory;\nexports.ɵb = ReflectiveInjector_;\nexports.ɵc = ReflectiveDependency;\nexports.ɵd = resolveReflectiveProviders;\nexports.ɵm = wtfEnabled;\nexports.ɵo = createScope;\nexports.ɵn = detectWTF;\nexports.ɵr = endTimeRange;\nexports.ɵp = leave;\nexports.ɵq = startTimeRange;\nexports.ɵa = makeParamDecorator;\nexports.ɵs = _def;\nexports.ɵt = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}