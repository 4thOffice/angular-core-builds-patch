{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","apply","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","Directive","dir","type","Component","c","changeDetection","Default","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","preR3InjectableCompile","injectableType","NgModule","ngModule","preR3NgModuleCompile","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","componentResourceResolutionQueue","unwrapResponse","response","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","merge$1","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","None","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tNode","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","stringify$1","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","dynamicLContainerNode","getNextLNodeWithProjection","pNextOrParent","walkLNodeTree","startingNode","rootNode","renderParentNode","beforeNode","native","executeNodeAction","lContainerNode","childContainerData","head","currentNode","createTextNode","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeNode","grandParentContainer","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","lViewData","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","elementStart","localRefs","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","directiveDefs","pipeDefs","onPush","storeCleanupWithContext","storeCleanupFn","elementEnd","addNode","queueLifecycleHooks","tViews","initialInputs","generatePropertyAliases","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","baseDirectiveCreate","addComponentLogic","directiveIndex","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","parentLNode","isForViewContainerRef","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","addToProjectionList","projectionNode","appendedFirst","appendedLast","projectionNodeData","tail","findComponentHost","viewRootLNode","adjustedHostIndex","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","hostTView","createViewQuery","updateViewQuery","NO_CHANGE","initBindings","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","store","loadInternal","consumeBinding","bindingUpdated","isDifferent","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","PRIVATE_PREFIX","onChangesWrapper","delegateHook","simpleChanges","ViewRef$1","EmbeddedViewRef$1","_lViewNode","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","startInjector","ReadFromInjectorFn","read","ElementRef$1","getOrCreateContainerRef","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","notImplemented","newIndex","shift","getOrCreateTemplateRef","TemplateRef$1","getOrCreateElementRef","_tView","_renderer","_queries","containerNode","createEmbeddedViewNode","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","i18nTagRegex","appendI18nNode","previousNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","ngModuleDef","componentFactoryResolver","pureFunction1","slotOffset","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","NgModuleFactory$$1","LQueries_","deep","shallow","track","descend","createQuery$1","clone","containerValues","clonedQuery","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","bypassSanitizationTrustString","trustedString","trusted","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_v","Éµangular_packages_core_core_x","Éµangular_packages_core_core_w","Éµangular_packages_core_core_u","Éµangular_packages_core_core_y","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleUrls","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","ÉµdefineNgModule","defineNgModule","declarations","transitiveCompileScopes","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","attrNameToInject","ÉµPublicFeature","PublicFeature","definition","ÉµNgOnChangesFeature","NgOnChangesFeature","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","writable","currentChange","ÉµmarkDirty","markDirty","ÉµNC","ÉµC","ÉµE","ÉµNH","ÉµNM","namespaceMathML","ÉµNS","namespaceSVG","ÉµEe","ÉµL","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","cleanupInstances","outputData","createOutput","ÉµT","textNode","ÉµV","embeddedViewStart","viewBlockId","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","ÉµQ","memoryIndex","getCurrentQueries","QueryType","Éµd","loadDirective","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","canInsert","nodeToProject","previouslyProjected","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","getCreationMode","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","nextIndex","ÉµqR","queryRefresh","Éµe","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","Éµa","elementAttribute","element_1","strValue","Éµs","elementStyle","lElement","removeProperty","Éµsn","elementStyleNamed","suffixOrSanitizer","DashCase","Éµk","elementClass","Éµkn","elementClassNamed","classList","Éµt","textBinding","existingNode","textContent","Éµv","embeddedViewEnd","Éµst","Éµld","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+46.sha-f62876b\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakeable Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\n\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ivyEnabled = false;\nvar R3_COMPILE_COMPONENT = null;\nvar R3_COMPILE_DIRECTIVE = null;\nvar R3_COMPILE_INJECTABLE = null;\nvar R3_COMPILE_NGMODULE = null;\nvar R3_COMPILE_PIPE = null;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Component metadata.\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n/**\n * Component decorator and metadata.\n *\n * @usageNotes\n *\n * ### Using animations\n *\n * The following snippet shows an animation trigger in a component's\n * metadata. The trigger is attached to an element in the component's\n * template, using \"@_trigger_name_\", and a state expression that is evaluated\n * at run time to determine whether the animation should start.\n *\n * ```typescript\n * @Component({\n *   selector: 'animation-cmp',\n *   templateUrl: 'animation-cmp.html',\n *   animations: [\n *     trigger('myTriggerName', [\n *       state('on', style({ opacity: 1 }),\n *       state('off', style({ opacity: 0 }),\n *       transition('on => off', [\n *         animate(\"1s\")\n *       ])\n *     ])\n *   ]\n * })\n * ```\n *\n * ```html\n * <!-- animation-cmp.html -->\n * <div @myTriggerName=\"expression\">...</div>\n * ```\n *\n * ### Preserving whitespace\n *\n * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n * To change the default setting for all components in your application, set\n * the `preserveWhitespaces` option of the AOT compiler.\n *\n * Current implementation removes whitespace characters as follows:\n * - Trims all whitespaces at the beginning and the end of a template.\n * - Removes whitespace-only text nodes. For example,\n * `<button>Action 1</button>  <button>Action 2</button>` becomes\n * `<button>Action 1</button><button>Action 2</button>`.\n * - Replaces a series of whitespace characters in text nodes with a single space.\n * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n * where whitespace characters are significant.\n *\n * Note that these transformations can influence DOM nodes layout, although impact\n * should be minimal.\n *\n * You can override the default behavior to preserve whitespace characters\n * in certain fragments of a template. For example, you can exclude an entire\n * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n *\n * ```html\n * <div ngPreserveWhitespaces>\n *     whitespaces are preserved here\n *     <span>    and here </span>\n * </div>\n * ```\n *\n * You can force a single space to be preserved in a text node by using `&ngsp;`,\n * which is replaced with a space character by Angular's template\n * compiler:\n *\n * ```html\n * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n * the `preserveWhitespaces` option is set to `false`.\n *\n * ```html\n * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * To preserve sequences of whitespace characters, use the\n * `ngPreserveWhitespaces` attribute.\n *\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n/**\n *\n *\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n/**\n *\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n *\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n *\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var _a;\n    var value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME$1) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        var injectableDef = token.ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = 0;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME = {};\nvar Éµ0 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: Éµ0 }, GET_PROPERTY_NAME);\nvar EMPTY_ARRAY = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            var _a;\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n    return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n *\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/**\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n */\nfunction (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\n\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using the deprecated [Shadow DOM\n     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    /**\n     * Use Shadow DOM to encapsulate styles.\n     *\n     * For the DOM this means using modern [Shadow\n     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     *\n     * ### Example\n     * {@example core/ts/metadata/encapsulation.ts region='longform'}\n     */\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n *\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\nvar VERSION = new Version('6.1.0-beta.3+46.sha-f62876b');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$1 = {};\nvar EMPTY_ARRAY$1 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$1 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$1 === undefined) {\n        NULL_INJECTOR$1 = new NullInjector();\n    }\n    return NULL_INJECTOR$1;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        additionalProviders &&\n            deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE$1 in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable }\n    ];\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler.decorators = [\n        { type: Injectable }\n    ];\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * @usageNotes\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector }\n    ]; };\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Console },\n        { type: Injector },\n        { type: ErrorHandler },\n        { type: ComponentFactoryResolver },\n        { type: ApplicationInitStatus }\n    ]; };\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * @usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var _a;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef }\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    var urlFetches = [];\n    // Cache so that we don't fetch the same resource more than once.\n    var urlMap = new Map();\n    function cachedResourceResolve(url) {\n        var promise = urlMap.get(url);\n        if (!promise) {\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component) {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        var styleUrls = component.styleUrls;\n        var styles = component.styles || (component.styles = []);\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(function () { return null; });\n}\nvar componentResourceResolutionQueue = new Set();\n\n\n\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var e_1, _a;\n    var res = {};\n    try {\n        for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var t = _c.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\n\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var _a;\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$2 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    var _a;\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance$1(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey$1:\n            case INJECTORRefTokenKey$1:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance$1(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            var injectableDef = depDef.token.ngInjectableDef;\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery() {\n    return new QueryList();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            var _a;\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 15;\n// Below are constants for LViewData indices to help us look up LViewData members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar TVIEW = 0;\nvar PARENT = 1;\nvar NEXT = 2;\nvar QUERIES = 3;\nvar FLAGS = 4;\nvar HOST_NODE = 5;\nvar BINDING_INDEX = 6;\nvar DIRECTIVES = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR$1 = 10;\nvar RENDERER = 11;\nvar SANITIZER = 12;\nvar TAIL = 13;\nvar CONTAINER_INDEX = 14;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LViewData[DIRECTIVES]\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        var start = flags >> 13;\n        var count = flags & 4095;\n        var end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n    function ngDevModeResetPerfCounters() {\n        global['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n        };\n    }\n    ngDevModeResetPerfCounters();\n    return ngDevModeResetPerfCounters;\n})(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n    typeof global != 'undefined' && global));\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 0;\n// PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n// As we already have these constants in LViewData, we don't need to re-create them.\nvar VIEWS = 4;\nvar RENDER_PARENT = 5;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten$1(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Retrieves the sibling node for the given node. */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        var viewData = node.data;\n        return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/** Retrieves the first child of a given node */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n        return viewData[node.tNode.child.index];\n    }\n    return null;\n}\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n        // This is a dynamically created view inside a dynamic container.\n        // If the host index is -1, the view has not yet been inserted, so it has no parent.\n        var containerHostIndex = node.data[CONTAINER_INDEX];\n        return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n    }\n    var parent = node.tNode.parent;\n    return parent ? node.view[parent.index] : node.view[HOST_NODE];\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.tNode.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return getNextLNode(node);\n}\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param startingNode the node from which the walk is started.\n * @param rootNode the root node considered.\n * @param action identifies the action to be performed on the LElement nodes.\n * @param renderer the current renderer.\n * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    var node = startingNode;\n    while (node) {\n        var nextNode = null;\n        var parent_1 = renderParentNode ? renderParentNode.native : null;\n        if (node.tNode.type === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n            }\n            nextNode = getNextLNode(node);\n        }\n        else if (node.tNode.type === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n            var lContainerNode = node;\n            var childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (node.tNode.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(node);\n        }\n        if (nextNode == null) {\n            /**\n             * Find the next node in the LNode tree, taking into account the place where a node is\n             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n             *\n             * If there is no sibling node, then it goes to the next sibling of the parent node...\n             * until it reaches rootNode (at which point null is returned).\n             */\n            var currentNode = node;\n            node = getNextLNodeWithProjection(currentNode);\n            while (currentNode && !node) {\n                // if node.pNextOrParent is not null here, it is not the next node\n                // (because, at this point, nextNode is null, so it is the parent)\n                currentNode = currentNode.pNextOrParent || getParentLNode(currentNode);\n                if (currentNode === rootNode) {\n                    return null;\n                }\n                // When the walker exits a container, the beforeNode has to be restored to the previous\n                // value.\n                if (currentNode && !currentNode.pNextOrParent &&\n                    currentNode.tNode.type === 0 /* Container */) {\n                    beforeNode = currentNode.native;\n                }\n                node = currentNode && getNextLNodeWithProjection(currentNode);\n            }\n        }\n        else {\n            node = nextNode;\n        }\n    }\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(parent, node, beforeNode) :\n            parent.insertBefore(node, beforeNode, true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(renderer) ?\n            renderer.removeChild(parent, node) :\n            parent.removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++;\n        renderer.destroyNode(node);\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data[RENDER_PARENT];\n    var parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        var node = getChildLNode(rootNode);\n        var renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            // If LViewData, traverse down to child.\n            var view = viewOrContainer;\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            // If container, traverse down to its first LViewData.\n            var container = viewOrContainer;\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param viewNode The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    var state = container.data;\n    var views = state[VIEWS];\n    var lView = viewNode.data;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container'S host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (viewNode.tNode.index === -1) {\n        lView[CONTAINER_INDEX] = container.tNode.parent.index;\n        viewNode.view = container.view;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        lView[QUERIES].insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param container The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns The detached view\n */\nfunction detachView(container, removeIndex) {\n    var views = container.data[VIEWS];\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n    }\n    views.splice(removeIndex, 1);\n    if (!container.tNode.detached) {\n        addRemoveViewFromContainer(container, viewNode, false);\n    }\n    // Notify query that view has been removed\n    var removedLView = viewNode.data;\n    if (removedLView[QUERIES]) {\n        removedLView[QUERIES].removeView();\n    }\n    removedLView[CONTAINER_INDEX] = -1;\n    viewNode.view = null;\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/** Gets the child of the given LViewData */\nfunction getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    var hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getParentLNode(node).data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LViewData to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer[TVIEW]) {\n        var view = viewOrContainer;\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(viewData) {\n    var cleanup = viewData[TVIEW].cleanup;\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var native = viewData[cleanup[i + 1]].native;\n                var listener = viewData[CLEANUP][cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = viewData[CLEANUP][cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view[DIRECTIVES], destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(viewData) {\n    var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(viewData, pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param parent The parent where the child will be inserted into.\n * @param currentView Current LView being processed.\n * @return boolean Whether the child should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(parent, currentView) {\n    // We can only insert into a Component or View. Any other type should be an Error.\n    ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n    if (parent.tNode.type === 3 /* Element */) {\n        // Parent is an element.\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        else {\n            // Parent is a Component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would than move it to its final destination.\n            return false;\n        }\n    }\n    else {\n        // Parent is a View.\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        else {\n            // The parent `Container` is in inserted state, so we can eagerly insert into\n            // this location.\n            return true;\n        }\n    }\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        var renderer = currentView[RENDERER];\n        if (parent.tNode.type === 2 /* View */) {\n            var container = getParentLNode(parent);\n            var renderParent = container.data[RENDER_PARENT];\n            var views = container.data[VIEWS];\n            var index = views.indexOf(parent);\n            var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(renderParent.native, child, beforeNode) :\n                renderParent.native.insertBefore(child, beforeNode, true);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Removes the `child` element of the `parent` from the DOM.\n *\n * @param parent The parent from which to remove the child\n * @param child The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nfunction removeChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only remove the element if not in View or not projected.\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n            parent.native.removeChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView, renderParent) {\n    appendChild(currentParent, node.native, currentView);\n    if (node.tNode.type === 0 /* Container */) {\n        // The node we are adding is a container and we are adding it to an element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assign the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer[RENDER_PARENT] = renderParent;\n        var views = lContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, node.native);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    var selectOnlyMode = false;\n    var i = 0;\n    while (i < attrs.length) {\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n *\n * Note: Element is not actually stored at index 0 because of the LViewData\n * header, but the host bindings function expects an index that is NOT adjusted\n * because it will ultimately be fed to instructions like elementProperty.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n */\nvar HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nvar CIRCULAR$2 = '__CIRCULAR__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\nfunction getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\nfunction getViewData() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return viewData;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\nvar tView;\nvar currentQueries;\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (inb this previousOrParentNode points to a node on which we\n * create content queries).\n */\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries ||\n        (currentQueries =\n            (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                new QueryType()));\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar viewData;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = newView;\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshView() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicEmbeddedViews(viewData);\n    if (!checkNoChangesMode) {\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = tView.directives;\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLViewData(renderer, tView, context, flags, sanitizer) {\n    return [\n        tView,\n        viewData,\n        null,\n        null,\n        flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        null,\n        -1,\n        null,\n        null,\n        context,\n        viewData && viewData[INJECTOR$1],\n        renderer,\n        sanitizer || null,\n        null,\n        -1 // containerIndex\n    ];\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: native,\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null,\n        dynamicLContainerNode: null\n    };\n}\nfunction createLNode(index, type, native, name, attrs, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && getParentLNode(previousOrParentNode);\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var tParent = parent && parent.view === viewData ? parent.tNode : null;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = (state ? state[TVIEW].node : null) ||\n            createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        var adjustedIndex = index + HEADER_OFFSET;\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(adjustedIndex);\n        var tData = tView.data;\n        viewData[adjustedIndex] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (adjustedIndex >= tData.length) {\n            var tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                var previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = tData[adjustedIndex];\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        var lViewData = state;\n        ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = null;\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\n\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nfunction createEmbeddedViewNode(tView, context, renderer, queries) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    isParent = true;\n    previousOrParentNode = null;\n    var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n    return viewNode;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, rf) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    var oldView;\n    try {\n        isParent = true;\n        previousOrParentNode = null;\n        oldView = enterView(viewNode.data, viewNode);\n        namespaceHTML();\n        tView.template(rf, context);\n        if (rf & 2 /* Update */) {\n            refreshView();\n        }\n        else {\n            viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n        }\n    }\n    finally {\n        // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n        // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n        var isCreationOnly = (rf & 1 /* Create */) === 1;\n        leaveView(oldView, isCreationOnly);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            namespaceHTML();\n            template(getRenderFlags(hostView), componentOrContext);\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n//////////////////////////\n//// Namespace\n//////////////////////////\nvar _currentNamespace = null;\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LViewData array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native;\n    if (isProceduralRenderer(renderer)) {\n        native = renderer.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = renderer.createElement(name);\n        }\n        else {\n            native = renderer.createElementNS(_currentNamespace, name);\n        }\n    }\n    ngDevMode && assertDataInRange(index - 1);\n    var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the current node\n */\nfunction createDirectivesAndLocals(localRefs) {\n    var node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    var exportsMap = localRefs ? { '': -1 } : null;\n    var matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            var valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(matches[valueIndex], def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode) {\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                if (def.template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return matches;\n}\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$2;\n        var instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$2) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n    var tNode = previousOrParentNode.tNode;\n    var count = tNode.flags & 4095;\n    if (count > 0) {\n        var start = tNode.flags >> 13;\n        var end = start + count;\n        var tDirectives = tView.directives;\n        for (var i = start; i < end; i++) {\n            var def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            viewData.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, template, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        viewQuery: viewQuery,\n        node: null,\n        data: HEADER_FILLER.slice(),\n        childIndex: -1,\n        bindingStartIndex: -1,\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                // Namespaced attributes\n                var namespaceURI = attrs[i + 1];\n                var attrName_1 = attrs[i + 2];\n                var attrVal = attrs[i + 3];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                i += 4;\n            }\n            else {\n                // Standard attributes\n                var attrVal = attrs[i + 1];\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n                i += 2;\n            }\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(viewData, cleanupFn);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        var cleanupInstances = getCleanup(viewData);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n        }\n    }\n    var tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], directives);\n        var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element_1 = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                element_1.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                element_1.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = load(index);\n    var tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param parent The parent of this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null,\n        detached: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], directives);\n        directives[inputs[i]][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var count = tNodeFlags & 4095;\n    var propStore = null;\n    if (count > 0) {\n        var start = tNodeFlags >> 13;\n        var end = start + count;\n        var isInput = direction === 0;\n        var defs = tView.directives;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        ngDevMode && ngDevMode.rendererSetClassName++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = load(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the LViewData array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = load(index);\n        if (isProceduralRenderer(renderer)) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                if (styleValue == null) {\n                    ngDevMode && ngDevMode.rendererRemoveStyle++;\n                    style.removeProperty(styleName);\n                }\n                else {\n                    ngDevMode && ngDevMode.rendererSetStyle++;\n                    style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n}\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNode = createTextNode(value, renderer);\n    var node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        var existingNode = load(index);\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nfunction directiveCreate(index, directive, directiveDef) {\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = previousOrParentNode.tNode;\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(directiveIndex, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    previousOrParentNode.data = componentView;\n    componentView[HOST_NODE] = previousOrParentNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(directiveIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        var flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        var diPublic = directiveDef.diPublic;\n        if (diPublic)\n            diPublic(directiveDef);\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param parentLNode the LNode in which the container's content will be rendered\n * @param currentView The parent view of the LContainer\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n        parentLNode :\n        null;\n    if (renderParent && renderParent.tNode.type === 2 /* View */) {\n        renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n    }\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        [],\n        renderParent\n    ];\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n    var lContainer = createLContainer(currentParent, viewData);\n    var comment = renderer.createComment(ngDevMode ? 'container' : '');\n    var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    if (firstTemplatePass) {\n        node.tNode.tViews = template ?\n            createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n            [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    var queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    previousOrParentNode = load(index);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = getParentLNode(previousOrParentNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lViewData) {\n    for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            var container_1 = current;\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                var lViewNode = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                var dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = lContainer[QUERIES].createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    if (container) {\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tNode.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    previousOrParentNode = viewData[HOST_NODE];\n    leaveView(viewData[PARENT]);\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(directiveIndex, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    var element = viewData[adjustedElementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n    var hostView = element.data;\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, directives);\n        detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(viewData);\n    var componentChild = getChildLNode(componentNode);\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = getNextLNode(componentChild);\n    }\n    ngDevMode && assertDataNext(index + HEADER_OFFSET);\n    store(index, distributedNodes);\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction addToProjectionList(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n    // `<ng-content>` has no content\n    isParent = false;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(viewData);\n    var componentLView = componentNode.data;\n    var distributedNodes = loadInternal(localIndex, componentLView);\n    var nodesForSelector = distributedNodes[selectorIndex];\n    var currentParent = getParentLNode(node);\n    var canInsert = canInsertNativeNode(currentParent, viewData);\n    var renderParent = currentParent.tNode.type === 2 /* View */ ?\n        getParentLNode(currentParent).data[RENDER_PARENT] :\n        currentParent;\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        var head = nodeToProject;\n        var tail = nodeToProject;\n        if (nodeToProject.tNode.type === 1 /* Projection */) {\n            var previouslyProjected = nodeToProject.data;\n            head = previouslyProjected.head;\n            tail = previouslyProjected.tail;\n        }\n        addToProjectionList(node, head, tail);\n        if (canInsert) {\n            var currentNode = head;\n            while (currentNode) {\n                appendProjectedNode(currentNode, currentParent, viewData, renderParent);\n                currentNode = currentNode === tail ? null : currentNode.pNextOrParent;\n            }\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lViewData LViewData for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lViewData) {\n    var viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = lViewData[PARENT];\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LViewData or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param state The LViewData or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        currentView[TAIL][NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LViewData dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = currentView[PARENT];\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(currentView[CONTEXT]);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tickRootContext(rootContext);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\n\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = lViewData[PARENT];\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(hostNode.data, hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    var oldView = enterView(hostView, hostNode);\n    var hostTView = hostView[TVIEW];\n    var template = hostTView.template;\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView[FLAGS], component);\n        template(getRenderFlags(hostView), component);\n        refreshView();\n        updateViewQuery(viewQuery, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\nfunction createViewQuery(viewQuery, flags, component) {\n    if (viewQuery && (flags & 1 /* CreationMode */)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\nfunction updateViewQuery(viewQuery, component) {\n    if (viewQuery) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n    if (tView.bindingStartIndex === -1) {\n        tView.bindingStartIndex = viewData.length;\n    }\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    viewData.length += numSlots;\n    viewData.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {@link reserveSlots}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    var currentSlot = viewData[BINDING_INDEX];\n    viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n */\nfunction restoreBindingIndex(index) {\n    viewData[BINDING_INDEX] = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/** Retrieves a value from current `viewData`. */\nfunction load(index) {\n    return loadInternal(index, viewData);\n}\n/** Retrieves a value from any `LViewData`. */\nfunction loadInternal(index, arr) {\n    ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, directives);\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n    ngDevMode &&\n        assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[viewData[BINDING_INDEX]++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (viewData[BINDING_INDEX] === -1)\n        initBindings();\n    var bindingIndex = viewData[BINDING_INDEX];\n    if (bindingIndex >= viewData.length) {\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else {\n        viewData[BINDING_INDEX]++;\n        return false;\n    }\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding$1(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        var startIndex = tView.bindingStartIndex - slotOffset;\n        for (var i = 0; i < numSlots; i++) {\n            assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR$1] = opts.injector || null;\n    var oldView = enterView(rootView, null);\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component) {\n    var rootContext = getRootView(component)[CONTEXT];\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var pipeTypes = componentDefinition.pipes;\n    var directiveTypes = componentDefinition.directives;\n    var declaredInputs = {};\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null,\n        pipeDefs: pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\nvar EMPTY$1 = {};\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName')\n *   propName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   a0: 'propName1',\n *   b1: ['publicName', 'propName2'],\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'publicName': 'b1'\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in:\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'propName2': 'b1'\n * }\n * ```\n *\n\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY$1;\n    var newLookup = {};\n    for (var minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            var publicName = obj[minifiedKey];\n            var declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[declaredName] = minifiedKey);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nfunction NgOnChangesFeature(definition) {\n    var declaredToMinifiedInputs = definition.declaredInputs;\n    var proto = definition.type.prototype;\n    var _loop_1 = function (declaredName) {\n        if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n            var minifiedKey = declaredToMinifiedInputs[declaredName];\n            var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n            // Walk the prototype chain to see if we find a property descriptor\n            // That way we can honor setters and getters that were inherited.\n            var originalProperty = undefined;\n            var checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            var getter = originalProperty && originalProperty.get;\n            var setter_1 = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                    var currentChange = simpleChanges[declaredName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredName] =\n                            new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey_1] = value;\n                    }\n                    if (setter_1)\n                        setter_1.call(this, value);\n                }\n            });\n        }\n    };\n    for (var declaredName in declaredToMinifiedInputs) {\n        _loop_1(declaredName);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        var simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = context;\n    }\n    /** @internal */\n    ViewRef.prototype._setComponentContext = function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n    return ViewRef;\n}());\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._viewContainerRef = null;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    EmbeddedViewRef.prototype.destroy = function () {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parent = getParentLNode(node);\n    var parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef$1(hostNode.data, hostNode\n            .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            var nodeFlags = node.tNode.flags;\n            var count = nodeFlags & 4095;\n            if (count !== 0) {\n                var start = nodeFlags >> 13;\n                var end = start + count;\n                var defs = node.view[TVIEW].directives;\n                for (var i = start; i < end; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token and we are searching the current node's\n            // injector, it's possible the directive is on this node and hasn't been created yet.\n            var instance = void 0;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n}\nfunction searchMatchesQueuedForCreation(node, token) {\n    var matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (var i = 0; i < matches.length; i += 2) {\n            var def = matches[i];\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        var vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        var hostParent = getParentLNode(vcRefHost);\n        var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n        appendChild(hostParent, comment, vcRefHost.view);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        var hostTNode = vcRefHost.tNode;\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n        di.viewContainerRef = new ViewContainerRef$1(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    ViewContainerRef.prototype.clear = function () {\n        var lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    };\n    ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n    Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n        get: function () {\n            var lContainer = this._lContainerNode.data;\n            return lContainer[VIEWS].length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var adjustedIdx = this._adjustIndex(index);\n        var viewRef = templateRef\n            .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n        viewRef.attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var lViewNode = viewRef._lViewNode;\n        var adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        var views = this._lContainerNode.data[VIEWS];\n        var beforeNode = adjustedIdx + 1 < views.length ?\n            (getChildLNode(views[adjustedIdx + 1])).native :\n            this._lContainerNode.native;\n        addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n        viewRef.attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n        var index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n    ViewContainerRef.prototype.remove = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    };\n    ViewContainerRef.prototype.detach = function (index) {\n        var adjustedIdx = this._adjustIndex(index, -1);\n        var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    };\n    ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n        if (shift === void 0) { shift = 0; }\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var hostNode = di.node;\n        var hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n        var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n        if (containerNode) {\n            insertView(containerNode, viewNode, index);\n        }\n        renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n        return new EmbeddedViewRef$1(viewNode, this._tView.template, context);\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This feature publishes the directive (or component) into the DI system, making it visible to\n * others for injection.\n *\n * @param definition\n */\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    function ComponentFactoryResolver$$1() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = component.ngComponentDef;\n        return new ComponentFactory$1(componentDef);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    function ComponentFactory$$1(componentDef) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n        var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n        var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n        // The first index of the first selector is the tag name.\n        var componentTag = this.componentDef.selectors[0][0];\n        var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n        // rootView is the parent when bootstrapping\n        var oldView = enterView(rootView, null);\n        var component;\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        // TODO(misko): this is the wrong injector here.\n        return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory));\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n        var _this = _super.call(this) || this;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n         * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n         * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n         * given component won't work (as these are always called at the level above a component).\n         *\n         * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n         * component instance. So passing in the root view (1 level above the component) is sufficient.\n         * We might  want to think about creating a fake component for the top level? Or overwrite\n         * detectChanges with a function that calls tickRootContext? */\n        _this.hostView = _this.changeDetectorRef = new ViewRef$1(rootView, instance);\n        _this.injector = injector;\n        _this.location = new ElementRef(hostNode);\n        _this.componentType = componentType;\n        return _this;\n    }\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n/**\n * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n * indexes of their corresponding expression nodes to return a list of instructions for each\n * template function.\n *\n * Because embedded templates have different indexes for each placeholder, each parameter (except\n * the translation) is an array, where each value corresponds to a different template, by order of\n * appearance.\n *\n * @param translation A translation string where placeholders are represented by `{$name}`\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param tmplContainers An array of template container placeholders whose content should be ignored\n * when generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @returns A list of instructions used to translate each template.\n */\nfunction i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n    var translationParts = translation.split(i18nTagRegex);\n    var instructions = [];\n    generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n    return instructions;\n}\n/**\n * Internal function that reads the translation parts and generates a set of instructions for each\n * template.\n *\n * See `i18nMapping()` for more details.\n *\n * @param index The current index in `translationParts`.\n * @param translationParts The translation string split into an array of placeholders and text\n * elements.\n * @param instructions The current list of instructions to update.\n * @param elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param tmplContainers An array of template container placeholders whose content should be ignored\n * when generating the instructions for their parent template.\n * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n * @returns the current index in `translationParts`\n */\nfunction generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n    var tmplIndex = instructions.length;\n    var tmplInstructions = [];\n    var phVisited = [];\n    var openedTagCount = 0;\n    var maxIndex = 0;\n    instructions.push(tmplInstructions);\n    for (; index < translationParts.length; index++) {\n        var value = translationParts[index];\n        // Odd indexes are placeholders\n        if (index & 1) {\n            var phIndex = void 0;\n            if (elements && elements[tmplIndex] &&\n                typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                // The placeholder represents a DOM element\n                // Add an instruction to move the element\n                tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                phVisited.push(value);\n                openedTagCount++;\n            }\n            else if (expressions && expressions[tmplIndex] &&\n                typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                // The placeholder represents an expression\n                // Add an instruction to move the expression\n                tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                phVisited.push(value);\n            }\n            else { // It is a closing tag\n                tmplInstructions.push(-2147483648 /* CloseNode */);\n                if (tmplIndex > 0) {\n                    openedTagCount--;\n                    // If we have reached the closing tag for this template, exit the loop\n                    if (openedTagCount === 0) {\n                        break;\n                    }\n                }\n            }\n            if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                maxIndex = phIndex;\n            }\n            if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                tmplContainers.indexOf(value) >= tmplIndex) {\n                index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n            }\n        }\n        else if (value) {\n            // It's a non-empty string, create a text node\n            tmplInstructions.push(536870912 /* Text */, value);\n        }\n    }\n    // Check if some elements from the template are missing from the translation\n    if (elements) {\n        var tmplElements = elements[tmplIndex];\n        if (tmplElements) {\n            var phKeys = Object.keys(tmplElements);\n            for (var i = 0; i < phKeys.length; i++) {\n                var ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    var index_1 = tmplElements[ph];\n                    // Add an instruction to remove the element\n                    tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                    if (index_1 > maxIndex) {\n                        maxIndex = index_1;\n                    }\n                }\n            }\n        }\n    }\n    // Check if some expressions from the template are missing from the translation\n    if (expressions) {\n        var tmplExpressions = expressions[tmplIndex];\n        if (tmplExpressions) {\n            var phKeys = Object.keys(tmplExpressions);\n            for (var i = 0; i < phKeys.length; i++) {\n                var ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    var index_2 = tmplExpressions[ph];\n                    if (ngDevMode) {\n                        assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                    }\n                    // Add an instruction to remove the expression\n                    tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                    if (index_2 > maxIndex) {\n                        maxIndex = index_2;\n                    }\n                }\n            }\n        }\n    }\n    if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n        // The current parent is an ng-container and it has more children after the translation that we\n        // need to append to keep the order of the DOM nodes correct\n        for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n            if (ngDevMode) {\n                assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n            }\n            // We consider those additional placeholders as expressions because we don't care about\n            // their children, all we need to do is to append them\n            tmplInstructions.push(i | 1610612736 /* Expression */);\n        }\n    }\n    return index;\n}\nfunction appendI18nNode(node, parentNode, previousNode) {\n    if (ngDevMode) {\n        ngDevMode.rendererMoveNode++;\n    }\n    var viewData = getViewData();\n    appendChild(parentNode, node.native || null, viewData);\n    // On first pass, re-organize node tree to put this node in the correct position.\n    var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n    if (firstTemplatePass) {\n        node.tNode.next = null;\n        if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n            node.tNode.next = parentNode.tNode.child;\n            parentNode.tNode.child = node.tNode;\n        }\n        else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n            node.tNode.next = previousNode.tNode.next;\n            previousNode.tNode.next = node.tNode;\n        }\n    }\n    // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n    if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n        // (node.native as RComment).textContent = 'test';\n        // console.log(node.native);\n        appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n        if (firstTemplatePass) {\n            node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n            node.dynamicLContainerNode.tNode.parent = node.tNode;\n        }\n        return node.dynamicLContainerNode;\n    }\n    return node;\n}\n/**\n * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n *\n * @param startIndex Index of the first element to translate (for instance the first child of the\n * element with the i18n attribute).\n * @param instructions The list of instructions to apply on the current view.\n */\nfunction i18nApply(startIndex, instructions) {\n    var viewData = getViewData();\n    if (ngDevMode) {\n        assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n    }\n    if (!instructions) {\n        return;\n    }\n    var renderer = getRenderer();\n    var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n    var localPreviousNode = localParentNode;\n    resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n    for (var i = 0; i < instructions.length; i++) {\n        var instruction = instructions[i];\n        switch (instruction & -536870912 /* InstructionMask */) {\n            case 1073741824 /* Element */:\n                var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                localParentNode = element$$1;\n                break;\n            case 1610612736 /* Expression */:\n                var expr = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                break;\n            case 536870912 /* Text */:\n                if (ngDevMode) {\n                    ngDevMode.rendererCreateTextNode++;\n                }\n                var value = instructions[++i];\n                var textRNode = createTextNode(value, renderer);\n                // If we were to only create a `RNode` then projections won't move the text.\n                // Create text node at the current end of viewData. Must subtract header offset because\n                // createLNode takes a raw index (not adjusted by header offset).\n                var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                resetApplicationState();\n                break;\n            case -2147483648 /* CloseNode */:\n                localPreviousNode = localParentNode;\n                localParentNode = getParentLNode(localParentNode);\n                break;\n            case -1610612736 /* RemoveNode */:\n                if (ngDevMode) {\n                    ngDevMode.rendererRemoveNode++;\n                }\n                var index = instruction & 536870911;\n                var removedNode = load(index);\n                var parentNode = getParentLNode(removedNode);\n                removeChild(parentNode, removedNode.native || null, viewData);\n                // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                    removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                    removedNode.dynamicLContainerNode.tNode.detached = true;\n                    removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                }\n                break;\n        }\n    }\n}\n/**\n * Takes a translation string and the initial list of expressions and returns a list of instructions\n * that will be used to translate an attribute.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n */\nfunction i18nExpMapping(translation, placeholders) {\n    var staticText = translation.split(i18nTagRegex);\n    // odd indexes are placeholders\n    for (var i = 1; i < staticText.length; i += 2) {\n        staticText[i] = placeholders[staticText[i]];\n    }\n    return staticText;\n}\n/**\n * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n    var different = bindingUpdated(v0);\n    if (numberOfExp > 1) {\n        different = bindingUpdated(v1) || different;\n        if (numberOfExp > 2) {\n            different = bindingUpdated(v2) || different;\n            if (numberOfExp > 3) {\n                different = bindingUpdated(v3) || different;\n                if (numberOfExp > 4) {\n                    different = bindingUpdated(v4) || different;\n                    if (numberOfExp > 5) {\n                        different = bindingUpdated(v5) || different;\n                        if (numberOfExp > 6) {\n                            different = bindingUpdated(v6) || different;\n                            if (numberOfExp > 7) {\n                                different = bindingUpdated(v7) || different;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    var res = '';\n    for (var i = 0; i < instructions.length; i++) {\n        var value = void 0;\n        // Odd indexes are placeholders\n        if (i & 1) {\n            switch (instructions[i]) {\n                case 0:\n                    value = v0;\n                    break;\n                case 1:\n                    value = v1;\n                    break;\n                case 2:\n                    value = v2;\n                    break;\n                case 3:\n                    value = v3;\n                    break;\n                case 4:\n                    value = v4;\n                    break;\n                case 5:\n                    value = v5;\n                    break;\n                case 6:\n                    value = v6;\n                    break;\n                case 7:\n                    value = v7;\n                    break;\n            }\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Create a translated interpolation binding with a variable number of expressions.\n *\n * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n * because there is no need to create an array of expressions and iterate over it.\n *\n * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolationV(instructions, values) {\n    var different = false;\n    for (var i = 0; i < values.length; i++) {\n        // Check if bindings have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    var res = '';\n    for (var i = 0; i < instructions.length; i++) {\n        // Odd indexes are placeholders\n        if (i & 1) {\n            res += stringify$1(values[instructions[i]]);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useFactory: function () { return new ComponentFactoryResolver$1(); },\n    deps: [],\n};\nvar NgModuleRef$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, parentInjector) {\n        var _this = _super.call(this) || this;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.destroyCbs = [];\n        var ngModuleDef = ngModuleType.ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef,\n                useValue: _this,\n            }\n        ];\n        _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        _this.instance = _this.injector.get(ngModuleType);\n        _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n        return _this;\n    }\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef));\nvar NgModuleFactory$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = getCreationMode() ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated(exp) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated2(exp1, exp2);\n    var value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    var value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    var index = moveBindingIndexToReservedSlot(slotOffset);\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    var value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getTView();\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index + HEADER_OFFSET].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function () {\n        var query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    var defs = node.view[TVIEW].directives;\n    var flags = node.tNode.flags;\n    var count = flags & 4095;\n    var start = flags >> 13;\n    var end = start + count;\n    for (var i = start; i < end; i++) {\n        var def = defs[i];\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = getIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view[DIRECTIVES][matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten$1(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList$1 = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList$1();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\nexports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\nexports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\nexports.Éµangular_packages_core_core_k = _localeFactory;\nexports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\nexports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\nexports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\nexports.Éµangular_packages_core_core_c = ReflectiveInjector_;\nexports.Éµangular_packages_core_core_d = ReflectiveDependency;\nexports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\nexports.Éµangular_packages_core_core_m = wtfEnabled;\nexports.Éµangular_packages_core_core_o = createScope;\nexports.Éµangular_packages_core_core_n = detectWTF;\nexports.Éµangular_packages_core_core_r = endTimeRange;\nexports.Éµangular_packages_core_core_p = leave;\nexports.Éµangular_packages_core_core_q = startTimeRange;\nexports.Éµangular_packages_core_core_v = getOrCreateChangeDetectorRef;\nexports.Éµangular_packages_core_core_x = getOrCreateContainerRef;\nexports.Éµangular_packages_core_core_w = getOrCreateInjectable;\nexports.Éµangular_packages_core_core_u = getOrCreateNodeInjector;\nexports.Éµangular_packages_core_core_y = getOrCreateTemplateRef;\nexports.Éµangular_packages_core_core_ba = bindingUpdated;\nexports.Éµangular_packages_core_core_z = loadInternal;\nexports.Éµangular_packages_core_core_a = makeParamDecorator;\nexports.Éµangular_packages_core_core_b = makePropDecorator;\nexports.Éµangular_packages_core_core_s = _def;\nexports.Éµangular_packages_core_core_t = DebugContext;\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\nexports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.Éµinject = inject;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµivyEnabled = ivyEnabled;\nexports.ÉµComponentFactory = ComponentFactory;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµresolveComponentResources = resolveComponentResources;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdefineNgModule = defineNgModule;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµmarkDirty = markDirty;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµNH = namespaceHTML;\nexports.ÉµNM = namespaceMathML;\nexports.ÉµNS = namespaceSVG;\nexports.ÉµEe = element;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.ÉµrS = reserveSlots;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµwhenRendered = whenRendered;\nexports.ÉµiA = i18nApply;\nexports.ÉµiEM = i18nExpMapping;\nexports.ÉµiI = i18nInterpolation;\nexports.ÉµIV = i18nInterpolationV;\nexports.ÉµiM = i18nMapping;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}