{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","apply","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","setStyle","prop","styleStore","removeStyle","DashCase","removeProperty","setProperty","setDirty","isDirtyYes","adjustedIndex","isDirty","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiOrSingleIndex","getMultiStartIndex","setProp","setValue","setFlag","getPointers","getValue","getProp","setContextDirty","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","doShift","updateSinglePointerValues","indexStartPosition","singleIndex","initialIndexForSingle","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyling","styles","createStylingContextTemplate","initialStyleDeclarations","initialStyles","indexLookup","hasPassedDeclarations","allProps","totalProps","maxLength","multiStart","indexForInitial","indexForMulti","indexForSingle","elementStylingApply","getStylingContext","stylingContext","allocStylingContext","templateStyleContext","renderStyles","isContextDirty","multiStartIndex","styleToApply","elementStyleProp","styleIndex","suffixOrSanitizer","valueToAdd","updateStyleProp","currValue","currFlag","valueForMulti","multiDirty","singleDirty","elementStyle","updateStyleMap","propsToApply","dirty","ctxIndex","propIndex","newProp","newValue","indexOfEntry","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","loadInternal","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","fillProperties","PRIVATE_PREFIX","NgOnChangesFeature","definition","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","superDef","e_1","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµk","Éµkn","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","split","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+80.sha-a527c69\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 15;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n                rendererMoveNode: 0,\n                rendererRemoveNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return viewData[node.tNode.child.index];\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return parent ? node.view[parent.index] : node.view[HOST_NODE];\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = viewData[cleanup[i + 1]].native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is an element.\n            if (parent.view !== currentView) {\n                // If the Parent view is not the same as current view than we are inserting across\n                // Views. This happens when we insert a root element of the component view into\n                // the component host element and it should always be eager.\n                return true;\n            }\n            // Parent elements can be a component which may have projection.\n            if (parent.data === null) {\n                // Parent is a regular non-component element. We should eagerly insert into it\n                // since we know that this relationship will never be broken.\n                return true;\n            }\n            else {\n                // Parent is a Component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would than move it to its final destination.\n                return false;\n            }\n        }\n        else {\n            // Parent is a View.\n            ngDevMode && assertNodeType(parent, 2 /* View */);\n            // Because we are inserting into a `View` the `View` may be disconnected.\n            var grandParentContainer = getParentLNode(parent);\n            if (grandParentContainer == null) {\n                // The `View` is not inserted into a `Container` we have to delay insertion.\n                return false;\n            }\n            ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n            if (grandParentContainer.data[RENDER_PARENT] == null) {\n                // The parent `Container` itself is disconnected. So we have to delay.\n                return false;\n            }\n            else {\n                // The parent `Container` is in inserted state, so we can eagerly insert into\n                // this location.\n                return true;\n            }\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.insertBefore(renderParent.native, child, beforeNode) :\n                    renderParent.native.insertBefore(child, beforeNode, true);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(templateStyleContext) {\n        // each instance gets a copy\n        return templateStyleContext.slice();\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     */\n    function createStylingContextTemplate(initialStyleDeclarations) {\n        var initialStyles = [null];\n        var context = [initialStyles, 0];\n        var indexLookup = {};\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 0 /* INITIAL_STYLES */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStyles.push(value);\n                        indexLookup[prop] = initialStyles.length - 1;\n                    }\n                    else {\n                        // it's safe to use `0` since the default initial value for\n                        // each property will always be null (which is at position 0)\n                        indexLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        var allProps = Object.keys(indexLookup);\n        var totalProps = allProps.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 2 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 2 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 2 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 2 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < allProps.length; i++) {\n            var prop = allProps[i];\n            var indexForInitial = indexLookup[prop];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            setFlag(context, indexForSingle, pointers(0 /* None */, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setFlag(context, indexForMulti, pointers(1 /* Dirty */, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't reference an initial style\n        // value\n        setFlag(context, 1 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStyles.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    /**\n     * Sets and resolves all `multi` styles on an `StylingContext` so that they can be\n     * applied to the element once `renderStyles` is called.\n     *\n     * All missing styles (any values that are not provided in the new `styles` param)\n     * will resolve to `null` within their respective positions in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, styles) {\n        var propsToApply = styles ? Object.keys(styles) : EMPTY_ARR;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles are\n        // off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propsToApply.length) {\n            var flag = getPointers(context, ctxIndex);\n            var prop = getProp(context, ctxIndex);\n            var value = getValue(context, ctxIndex);\n            var newProp = propsToApply[propIndex];\n            var newValue = styles[newProp];\n            if (prop === newProp) {\n                if (value !== newValue) {\n                    setValue(context, ctxIndex, newValue);\n                    var initialValue = getInitialValue(context, flag);\n                    // there is no point in setting this to dirty if the previously\n                    // rendered value was being referenced by the initial style (or null)\n                    if (initialValue !== newValue) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    // it was found at a later point ... just swap the values\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (value !== newValue) {\n                        setValue(context, ctxIndex, newValue);\n                        dirty = true;\n                    }\n                }\n                else {\n                    // we only care to do this if the insertion is in the middle\n                    var doShift = ctxIndex < context.length;\n                    insertNewMultiProperty(context, ctxIndex, newProp, newValue);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles and in this case the\n        // goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var value = context[ctxIndex + 2 /* ValueOffset */];\n            if (value !== null) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over property in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        while (propIndex < propsToApply.length) {\n            var prop = propsToApply[propIndex];\n            var value = styles[prop];\n            context.push(1 /* Dirty */, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single CSS style on a property on an `StylingContext` so that they\n     * can be applied to the element once `renderElementStyles` is called.\n     *\n     * Note that prop-level styles are considered higher priority than styles that are applied\n     * using `updateStyleMap`, therefore, when styles are rendered then any styles that\n     * have been applied using this function will be considered first (then multi values second\n     * and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 2 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (currValue !== value) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (value == null && valueForMulti) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styles using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStyleMap` and `updateStyleProp`) onto the\n     * provided element using the provided renderer. Just before the styles\n     * are rendered a final key/value style map will be assembled.\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns an object literal. `{ color: 'red', height: 'auto'}`.\n     */\n    function renderStyles(lElement, context, renderer, styleStore) {\n        if (isContextDirty(context)) {\n            var native = lElement.native;\n            var multiStartIndex = getMultiStartIndex(context);\n            for (var i = 2 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isInSingleRegion = i < multiStartIndex;\n                    var styleToApply = value;\n                    // STYLE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && styleToApply == null) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        styleToApply = getValue(context, multiIndex);\n                    }\n                    // STYLE DEFER CASE 2: Use the initial value if all else fails (is null)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    if (styleToApply == null) {\n                        styleToApply = getInitialValue(context, flag);\n                    }\n                    setStyle(native, prop, styleToApply, renderer, styleStore);\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `styleStore` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param styleStore an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, styleStore) {\n        if (styleStore) {\n            styleStore[prop] = value;\n        }\n        else if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 2 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 2 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 1 /* Dirty */) | (staticIndex << 1 /* BitCountSize */) |\n            (dynamicIndex << (15 /* BitCountSize */ + 1 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[0 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 1 /* BitCountSize */) & 32767 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (15 /* BitCountSize */ + 1 /* BitCountSize */)) & 32767 /* BitMask */;\n        return index >= 2 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[1 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var updatedFlag = pointers(isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, name, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, 1 /* Dirty */, name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null,\n            -1 // containerIndex\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = load(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            ngDevMode && ngDevMode.rendererSetClassName++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styles A key/value map of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     */\n    function elementStyling(index, styles) {\n        var tNode = load(index - 1).tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(styles);\n        }\n        // Allocate space but leave null for lazy creation.\n        viewData[index + HEADER_OFFSET] = null;\n        if (styles && styles.length) {\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!stylingContext) {\n            var lElement = load(index - 1);\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] = allocStylingContext(tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyles(load(index - 1), getStylingContext(index), renderer);\n    }\n    function elementStyleProp(index, styleIndex, value, suffixOrSanitizer) {\n        var valueToAdd = null;\n        if (value) {\n            valueToAdd =\n                typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string') {\n                valueToAdd = valueToAdd + suffixOrSanitizer;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is null, then the style is removed.\n     */\n    function elementStyle(index, value) {\n        updateStyleMap(getStylingContext(index), value);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = load(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(index, directive, directiveDef) {\n        var instance = baseDirectiveCreate(index, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(index, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = load(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshView();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    function getDirectiveInstance(instanceOrArray) {\n        // Directives with content queries store an array in directives[directiveIndex]\n        // with the instance as the first index\n        return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        var _loop_1 = function () {\n            var e_1, _a;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            if (superDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType && !superDef) {\n            _loop_1();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var instructions = [];\n        generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param index The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n        var tmplIndex = instructions.length;\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        instructions.push(tmplInstructions);\n        for (; index < translationParts.length; index++) {\n            var value = translationParts[index];\n            // Odd indexes are placeholders\n            if (index & 1) {\n                var phIndex = void 0;\n                if (elements && elements[tmplIndex] &&\n                    typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents a DOM element\n                    // Add an instruction to move the element\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    phVisited.push(value);\n                    openedTagCount++;\n                }\n                else if (expressions && expressions[tmplIndex] &&\n                    typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents an expression\n                    // Add an instruction to move the expression\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else { // It is a closing tag\n                    tmplInstructions.push(-2147483648 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                    tmplContainers.indexOf(value) >= tmplIndex) {\n                    index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Check if some elements from the template are missing from the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_1 = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                        if (index_1 > maxIndex) {\n                            maxIndex = index_1;\n                        }\n                    }\n                }\n            }\n        }\n        // Check if some expressions from the template are missing from the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_2 = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                        if (index_2 > maxIndex) {\n                            maxIndex = index_2;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                // We consider those additional placeholders as expressions because we don't care about\n                // their children, all we need to do is to append them\n                tmplInstructions.push(i | 1610612736 /* Expression */);\n            }\n        }\n        return index;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            // (node.native as RComment).textContent = 'test';\n            // console.log(node.native);\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                    var expr = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -2147483648 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -1610612736 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated(v0);\n        if (numberOfExp > 1) {\n            different = bindingUpdated(v1) || different;\n            if (numberOfExp > 2) {\n                different = bindingUpdated(v2) || different;\n                if (numberOfExp > 3) {\n                    different = bindingUpdated(v3) || different;\n                    if (numberOfExp > 4) {\n                        different = bindingUpdated(v4) || different;\n                        if (numberOfExp > 5) {\n                            different = bindingUpdated(v5) || different;\n                            if (numberOfExp > 6) {\n                                different = bindingUpdated(v6) || different;\n                                if (numberOfExp > 7) {\n                                    different = bindingUpdated(v7) || different;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            var value = void 0;\n            // Odd indexes are placeholders\n            if (i & 1) {\n                switch (instructions[i]) {\n                    case 0:\n                        value = v0;\n                        break;\n                    case 1:\n                        value = v1;\n                        break;\n                    case 2:\n                        value = v2;\n                        break;\n                    case 3:\n                        value = v3;\n                        break;\n                    case 4:\n                        value = v4;\n                        break;\n                    case 5:\n                        value = v5;\n                        break;\n                    case 6:\n                        value = v6;\n                        break;\n                    case 7:\n                        value = v7;\n                        break;\n                }\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµk': elementClass,\n        'Éµkn': elementClassNamed,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµrS': reserveSlots,\n        'Éµs': elementStyling,\n        'Éµsm': elementStyle,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Component metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.3+80.sha-a527c69');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStyle;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI = i18nInterpolation;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}