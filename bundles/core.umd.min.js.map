{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","apply","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","loadInternal","readElementValue","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","currentElementNode","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","styleDeclarations","classDeclarations","createStylingContextTemplate","initialStyleDeclarations","initialClassDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffixOrSanitizer","valueToAdd","elementStylingMap","styles","classes","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","loadDirective","loadElementInternal","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","fillProperties","PRIVATE_PREFIX","NgOnChangesFeature","definition","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","superDef","e_1","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµcp","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","c","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","ApplicationRef_Factory","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµQr","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","Éµql","loadQueryList","queryListIdx","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+119.sha-06a3398\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 16;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n                rendererMoveNode: 0,\n                rendererRemoveNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is an element.\n            if (parent.view !== currentView) {\n                // If the Parent view is not the same as current view than we are inserting across\n                // Views. This happens when we insert a root element of the component view into\n                // the component host element and it should always be eager.\n                return true;\n            }\n            // Parent elements can be a component which may have projection.\n            if (parent.data === null) {\n                // Parent is a regular non-component element. We should eagerly insert into it\n                // since we know that this relationship will never be broken.\n                return true;\n            }\n            else {\n                // Parent is a Component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would than move it to its final destination.\n                return false;\n            }\n        }\n        else {\n            // Parent is a View.\n            ngDevMode && assertNodeType(parent, 2 /* View */);\n            // Because we are inserting into a `View` the `View` may be disconnected.\n            var grandParentContainer = getParentLNode(parent);\n            if (grandParentContainer == null) {\n                // The `View` is not inserted into a `Container` we have to delay insertion.\n                return false;\n            }\n            ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n            if (grandParentContainer.data[RENDER_PARENT] == null) {\n                // The parent `Container` itself is disconnected. So we have to delay.\n                return false;\n            }\n            else {\n                // The parent `Container` is in inserted state, so we can eagerly insert into\n                // this location.\n                return true;\n            }\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.insertBefore(renderParent.native, child, beforeNode) :\n                    renderParent.native.insertBefore(child, beforeNode, true);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialStyleDeclarations, initialClassDeclarations) {\n        var initialStylingValues = [null];\n        var context = [null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[3 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 5 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 5 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 5 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 5 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = isClassBased_1 ? 2 /* Class */ : 0 /* None */;\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 2 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     */\n    function updateStylingMap(context, styles, classes) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[4 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[4 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[4 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    if (value !== newValue) {\n                        setValue(context, ctxIndex, newValue);\n                        var flag = getPointers(context, ctxIndex);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = 1 /* Dirty */ | (isClassBased_4 ? 2 /* Class */ : 0 /* None */);\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 5 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (currValue !== value) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[3 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            for (var i = 5 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        setStyle(native, prop, valueToApply, renderer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, store) {\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 5 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 5 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 5 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 3 /* BitMask */) | (staticIndex << 2 /* BitCountSize */) |\n            (dynamicIndex << (15 /* BitCountSize */ + 2 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[1 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 2 /* BitCountSize */) & 32767 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (15 /* BitCountSize */ + 2 /* BitCountSize */)) & 32767 /* BitMask */;\n        return index >= 5 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[2 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 2 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 2 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 2 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 2 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    var currentElementNode = null;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshContentQueries(tView);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     */\n    function elementStyling(styleDeclarations, classDeclarations) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(styleDeclarations, classDeclarations);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    function elementStyleProp(index, styleIndex, value, suffixOrSanitizer) {\n        var valueToAdd = null;\n        if (value) {\n            valueToAdd =\n                typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string') {\n                valueToAdd = valueToAdd + suffixOrSanitizer;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     */\n    function elementStylingMap(index, styles, classes) {\n        updateStylingMap(getStylingContext(index), styles, classes);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, directives[directiveIndex]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshView();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        var _loop_1 = function () {\n            var e_1, _a;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            if (superDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType && !superDef) {\n            _loop_1();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var instructions = [];\n        generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param index The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n        var tmplIndex = instructions.length;\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        instructions.push(tmplInstructions);\n        for (; index < translationParts.length; index++) {\n            var value = translationParts[index];\n            // Odd indexes are placeholders\n            if (index & 1) {\n                var phIndex = void 0;\n                if (elements && elements[tmplIndex] &&\n                    typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents a DOM element\n                    // Add an instruction to move the element\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    phVisited.push(value);\n                    openedTagCount++;\n                }\n                else if (expressions && expressions[tmplIndex] &&\n                    typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents an expression\n                    // Add an instruction to move the expression\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else { // It is a closing tag\n                    tmplInstructions.push(-2147483648 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                    tmplContainers.indexOf(value) >= tmplIndex) {\n                    index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Check if some elements from the template are missing from the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_1 = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                        if (index_1 > maxIndex) {\n                            maxIndex = index_1;\n                        }\n                    }\n                }\n            }\n        }\n        // Check if some expressions from the template are missing from the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_2 = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                        if (index_2 > maxIndex) {\n                            maxIndex = index_2;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                // We consider those additional placeholders as expressions because we don't care about\n                // their children, all we need to do is to append them\n                tmplInstructions.push(i | 1610612736 /* Expression */);\n            }\n        }\n        return index;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            // (node.native as RComment).textContent = 'test';\n            // console.log(node.native);\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                    var expr = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -2147483648 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -1610612736 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated(v0);\n        if (numberOfExp > 1) {\n            different = bindingUpdated(v1) || different;\n            if (numberOfExp > 2) {\n                different = bindingUpdated(v2) || different;\n                if (numberOfExp > 3) {\n                    different = bindingUpdated(v3) || different;\n                    if (numberOfExp > 4) {\n                        different = bindingUpdated(v4) || different;\n                        if (numberOfExp > 5) {\n                            different = bindingUpdated(v5) || different;\n                            if (numberOfExp > 6) {\n                                different = bindingUpdated(v6) || different;\n                                if (numberOfExp > 7) {\n                                    different = bindingUpdated(v7) || different;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            var value = void 0;\n            // Odd indexes are placeholders\n            if (i & 1) {\n                switch (instructions[i]) {\n                    case 0:\n                        value = v0;\n                        break;\n                    case 1:\n                        value = v1;\n                        break;\n                    case 2:\n                        value = v2;\n                        break;\n                    case 3:\n                        value = v3;\n                        break;\n                    case 4:\n                        value = v4;\n                        break;\n                    case 5:\n                        value = v5;\n                        break;\n                    case 6:\n                        value = v6;\n                        break;\n                    case 7:\n                        value = v7;\n                        break;\n                }\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµcp': elementClassProp,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµrS': reserveSlots,\n        'Éµs': elementStyling,\n        'Éµsm': elementStylingMap,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Component metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.3+119.sha-06a3398');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory() { return new ApplicationInitStatus(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory() { return new Console(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory() { return new Compiler(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory() { return new Testability(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory() { return new TestabilityRegistry(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory() { return new PlatformRef(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory() { return new ApplicationRef(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory() { return new SystemJsNgModuleLoader(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory() { return new ApplicationModule(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI = i18nInterpolation;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}