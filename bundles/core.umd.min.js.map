{"version":3,"sources":["core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","rxjs_Subscription","__extends","d","b","__","constructor","extendStatics","Object","create","isType","v","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","length","key","scheduleMicroTask","fn","Zone","promise","then","apply","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","name","res","toString","newLineIndex","indexOf","substring","makeDecorator","props","parentClass","chainFn","typeFn","DecoratorFactory","args","_i","arguments","metaCtor","call","concat","annotationInstance","_a","bind","TypeDecorator","cls","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","type","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","flags","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","undefined","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","annotations","Optional","SkipSelf","Self","Inject","formatError","text","obj","source","charAt","substr","context","parts","JSON","replace","NEW_LINE","setCurrentInjector","injector","former","_currentInjector","inject","injectArgs","types","arg","isArray","defaultValue","__proto__","convertInjectableProviderToFactory","reflectionCapabilities","ReflectionCapabilities","deps_1","USE_VALUE","valueProvider_1","existingProvider_1","factoryProvider_1","EMPTY_ARRAY","classProvider_1","deps_2","deps_3","defineInjectable","opts","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","slice","reverse","k","injectionError","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","destroyPlatform","destroy","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","optionsReducer","dst","objs","reduce","__assign","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","shiftInitState","view","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","isWrapped","unwrap","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","Services","createDebugContext","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","SOURCE","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","template","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","moduleDef","providersByKey","modules","initNgModule","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","UNDEFINED_VALUE","ngInjectableDef","targetsModule","injectableDef_1","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","depDefs","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","searchView","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","overrideComponentView","clearOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","viewDefOverrides","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","comp","compFactory","hostViewDef","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","stringifyValueForError","native","outerHTML","assertEqual","actual","expected","serializer","assertThrow","assertLessThan","assertNotNull","assertNotEqual","operator","assertNodeType","typeSerializer","assertNodeOfPossibleTypes","nodeType","queueInitHooks","onInit","doCheck","tView","firstTemplatePass","initHooks","checkHooks","queueLifecycleHooks","currentView","start","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","creationMode","lifecycleStage","executeHooks","executeContentHooks","allHooks","hooksToCall","callHooks","isProceduralRenderer","findNextRNodeSibling","stopNode","currentNode","pNextOrParent","pNextOrParentType","findFirstRNode","currentSibling","parentType","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","nextNode","childContainerData","views","child","head","addRemoveViewFromContainer","container","insertMode","beforeNode","ngDevMode","destroyViewTree","rootView","viewOrContainer","cleanUpView","getParentState","insertView","newView","setViewNext","nextIndex","containerNextNativeNode","removeView","removeIndex","viewNode","queries","removeListeners","executeOnDestroys","cleanup","removeEventListener","canInsertNativeNode","insertChild","nativeSibling","appendProjectedNode","lContainer","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","isNodeMatchingSimpleSelector","tNode","noOfSelectorParts","tagNameInSelector","tagName","attrsInNode","attrNameInSelector","attrIdxInNode","attrValInSelector","attrValInNode","isNodeMatchingSelectorWithNegations","positiveSelector","negativeSelectors","isNodeMatchingSelector","matchingSelectorIndex","selectors","isDifferent","stringify$1","notImplemented","flatten$1","enterView","host","bindingStartIndex","tData","previousOrParentNode","isParent","currentQueries","leaveView","createLView","viewId","tail","dynamicViewCount","createLNode","isState","nodeInjector","assertDataNext","resetApplicationState","renderEmbeddedTemplate","_isParent","_previousOrParentNode","cm","createTView","refreshDynamicChildren","renderComponentOrTemplate","componentOrContext","begin","componentRefresh","elementStart","nameOrComponentType","directiveTypes","localRefs","node_1","isHostElement","hostComponentDef","ngComponentDef","tag","getOrCreateTView","addToViewTree","queryName","hack_findQueryName","assertDataInRange","createTNode","setUpAttributes","directiveCreate","n","hack_declareDirectives","directiveType","ngDirectiveDef","defaultExport","exportAs","local","toExportAs","ngPrivateData","isProc","createError","locateHostElement","elementOrSelector","defaultRenderer","rNode","querySelector","listener","useCapture","assertPreviousIsParent","cleanupFn","addEventListener","generatePropertyAliases","outputData","createOutput","elementEnd","assertHasParent","addNode","elementProperty","NO_CHANGE","dataValue","inputData","setInputsForProperty","localName","localNames","initialInputs","lNodeFlags","direction","propStore","isInput","propertyAliasMap","publicName","internalName","hasProperty","elementStyle","styleName","lElement","RendererStyleFlags3","DashCase","style","removeProperty","strValue","textNode","createTextNode","textBinding","existingNode","textContent","NG_HOST_SYMBOL","enumerable","tNode_1","diPublic","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","attrName","minifiedInputName","containerRefreshStart","containerRefreshEnd","container_1","embeddedViewStart","viewBlockId","existingView","viewUpdateMode","getOrCreateEmbeddedTView","tContainer","embeddedViewEnd","containerState","previousView","elementIndex","getDirectiveInstance","projectionDef","noOfNodeBuckets","distributedNodes","componentNode","findComponentHost","componentChild","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","projection","localIndex","selectorIndex","nodesForSelector","valueInData","nodeToProject","previouslyProjected","lastNodeToProject","lView","viewRootLNode","bindV","initBindings","bindings_1","content","bIdx","vIdx","bind1","bind2","i0","different","part0","part1","bind3","i1","part2","bind4","i2","part3","bind5","i3","part4","bind6","i4","part5","bind7","i5","part6","bind8","i6","part7","memory","peekBinding","getCurrentQueries","QueryType","getPreviousOrParentNode","getRenderer","instanceOrArray","renderComponent","domRendererFactory3","componentDef","hostNode","features","feature","isDirty","bloomAdd","NG_ELEMENT_ID","nextNgElementId","bloomBit","BLOOM_SIZE","mask","bf0","bf1","bf2","bf3","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","cbf0","cbf1","cbf2","cbf3","templateRef","viewContainerRef","elementRef","createInjectionError","text$$1","diPublicInInjector","di","inject$1","getOrCreateInjectable","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","bloomHash","bloomHashBit","moduleInjector","bloomFindPossibleInjector","flags_1","startInjector","getOrCreateElementRef","ElementRef$1","ViewContainerRef$1","TemplateRef$1","defineComponent","componentDefinition","h","hostBindings","noop$1","invertObject","methods","NgOnChangesFeature","definition","onChangesWrapper","delegateHook","simpleChanges","PRIVATE_PREFIX","proto","writable","pubKey","minKey","privateMinKey","existingDesc","getOwnPropertyDescriptor","isFirstChange","PublicFeature","EMPTY$1","newObj","minifiedKey","definePipe","pure","pipeBind1","pipeBind2","pipeBind3","pipeBind4","pipeBindV","getIdxOfMatchingSelector","geIdxOfMatchingDirective","readFromNodeInjector","read","directiveIdx","ReadFromInjectorFn","matchingIdx","add","addMatch","matchingValue","createPredicate","createQuery$1","previous","_valuesTree","memoryIndex","descend","QueryList$1","LQueries_","track","queryRefresh","queryListImpl","objectLiteral1","exp","latestValue","objectLiteral2","exp1","exp2","latestVal1","latestVal2","objectLiteral3","exp3","latestVal3","objectLiteral4","exp4","latestVal4","objectLiteral5","exp5","latestVal5","objectLiteral6","exp6","latestVal6","objectLiteral7","exp7","latestVal7","objectLiteral8","exp8","latestVal8","objectLiteralV","exps","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","assign","s","Function","__window","window","__self","WorkerGlobalScope","__global","Promise","resolve","DELEGATE_CTOR","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Host","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME$1","ɵ2","objWithPropertyToExtract","_records","tokenPath","GET_PROPERTY_NAME","ɵ0","Injectable","injectableType","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","major","split","minor","patch","VERSION","_console","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","Reflector","updateCapabilities","caps","identifier","resolvedFactory","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","moduleRef","exceptionHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","Renderer2","NgModuleFactoryLoader","_results","filter","find","toArray","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","listeners","providerTokens","attributes","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrapped","wrap","previousValue","currentValue","firstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY$1","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","ref","attachToViewContainerRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","injectFlags","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","_ngModuleDefFactory","document","_node","_lViewNode","_renderer","_template","EmbeddedViewRef$2","defineDirective","deep","shallow","containerValues","clonedQuery","viewValues","removed","QueryList_","_values","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdefineComponent","ɵdefineDirective","ɵdefinePipe","ɵdetectChanges","ɵrenderComponent","ɵinject","ɵinjectTemplateRef","ɵinjectViewContainerRef","ɵPublicFeature","ɵNgOnChangesFeature","ɵC","ɵE","ɵL","ɵT","ɵV","ɵQ","ɵP","ɵb","ɵb1","ɵb2","ɵb3","ɵb4","ɵb5","ɵb6","ɵb7","ɵb8","ɵbV","ɵpb1","ɵpb2","ɵpb3","ɵpb4","ɵpbV","ɵo1","ɵo2","ɵo3","ɵo4","ɵo5","ɵo6","ɵo7","ɵo8","ɵoV","ɵcR","ɵcr","ɵqR","ɵe","ɵp","ɵpD","ɵs","ɵt","ɵv","ɵr","ɵm","ɵPp","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","keyframes","transition","ɵbk","ɵbl","ɵbp","ɵbm","ɵbo","ɵbn","ɵbq","ɵbj","ɵn","ɵo","ɵq","ɵh","ɵi","ɵj","ɵk","ɵl","ɵd","ɵf","ɵg","ɵu","ɵx","ɵw","ɵba","ɵy","ɵz","ɵbf","ɵbe","ɵbd","ɵbg","ɵbh","ɵa","ɵc","ɵbb","ɵbc"],"mappings":"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","file":"core.umd.min.js","sourcesContent":["/**\n * @license Angular v6.0.0-beta.4-0aa9b46\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject'), require('rxjs/Subscription')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject', 'rxjs/Subscription'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject,rxjs_Subscription) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v6.0.0-beta.4-0aa9b46\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @param {?=} typeFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, [this].concat(args));\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (DecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, [cls].concat(args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return {}; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @param {?} target\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = /** @class */ (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME$1 = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME$1;\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var /** @type {?} */ value;\n    if (record && !(flags & 1 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME$1) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\nvar _currentInjector = null;\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction setCurrentInjector(injector) {\n    var /** @type {?} */ former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @param {?=} flags\n * @return {?}\n */\nfunction inject(token, notFoundValue, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === null) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    return _currentInjector.get(token, notFoundValue, flags);\n}\n/**\n * @param {?} types\n * @return {?}\n */\nfunction injectArgs(types) {\n    var /** @type {?} */ args = [];\n    for (var /** @type {?} */ i = 0; i < types.length; i++) {\n        var /** @type {?} */ arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var /** @type {?} */ type = undefined;\n            var /** @type {?} */ defaultValue = undefined;\n            var /** @type {?} */ flags = 0;\n            for (var /** @type {?} */ j = 0; j < arg.length; j++) {\n                var /** @type {?} */ meta = arg[j];\n                if (meta instanceof Optional || meta.__proto__.ngMetadataName === 'Optional') {\n                    defaultValue = null;\n                }\n                else if (meta instanceof SkipSelf || meta.__proto__.ngMetadataName === 'SkipSelf') {\n                    flags |= 1 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.__proto__.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(/** @type {?} */ ((type)), defaultValue, 0 /* Default */));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ0 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 }, GET_PROPERTY_NAME);\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\nvar EMPTY_ARRAY = [];\n/**\n * @param {?} type\n * @param {?=} provider\n * @return {?}\n */\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var /** @type {?} */ reflectionCapabilities = new ReflectionCapabilities();\n        var /** @type {?} */ deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ (deps_1)))))(); };\n    }\n    if (USE_VALUE in provider) {\n        var /** @type {?} */ valueProvider_1 = (/** @type {?} */ (provider));\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ existingProvider_1 = (/** @type {?} */ (provider));\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        var /** @type {?} */ factoryProvider_1 = (/** @type {?} */ (provider));\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, injectArgs(factoryProvider_1.deps || EMPTY_ARRAY)); };\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        var /** @type {?} */ classProvider_1 = (/** @type {?} */ (provider));\n        var /** @type {?} */ deps_2 = (/** @type {?} */ (provider)).deps;\n        if (!deps_2) {\n            var /** @type {?} */ reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, [void 0].concat(injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var /** @type {?} */ deps_3 = (/** @type {?} */ (provider)).deps;\n        if (!deps_3) {\n            var /** @type {?} */ reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, [void 0].concat(injectArgs(/** @type {?} */ ((deps_3))))))(); };\n    }\n}\n/**\n * Define injectable\n *\n * \\@experimental\n * @param {?} opts\n * @return {?}\n */\nfunction defineInjectable(opts) {\n    return opts;\n}\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (injectableType, options) {\n    if (options && options.scope) {\n        (/** @type {?} */ (injectableType)).ngInjectableDef = defineInjectable({\n            scope: options.scope,\n            factory: convertInjectableProviderToFactory(injectableType, options)\n        });\n    }\n});\n/**\n * Type representing injectable service.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                scope: options.scope,\n                factory: convertInjectableProviderToFactory(/** @type {?} */ (this), options),\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * Use the `\\@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement {\\@link PipeTransform} interface.\n *\n * To use the pipe include a reference to the pipe class in\n * {\\@link NgModule#declarations}.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('6.0.0-beta.4-0aa9b46');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var /** @type {?} */ sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs_Subscription.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ desc = \"Platform: \" + name;\n    var /** @type {?} */ marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var /** @type {?} */ injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        var /** @type {?} */ providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.unwrap = /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.isWrapped = /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {\\@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var /** @type {?} */ state = view.state;\n    var /** @type {?} */ initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var /** @type {?} */ bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$1 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} scope\n * @param {?} factory\n * @return {?}\n */\n\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    var /** @type {?} */ modules = [];\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n        var /** @type {?} */ injectableDef_1 = /** @type {?} */ (depDef.token.ngInjectableDef);\n        var /** @type {?} */ key = tokenKey$$1;\n        var /** @type {?} */ index = data._providers.length;\n        data._def.providersByKey[depDef.tokenKey] = {\n            flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n            value: injectableDef_1.factory,\n            deps: [], index: index,\n            token: depDef.token,\n        };\n        var /** @type {?} */ former = setCurrentInjector(data);\n        try {\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} def\n * @return {?}\n */\nfunction targetsModule(ngModule, def) {\n    return def.scope != null && ngModule._def.modules.indexOf(def.scope) > -1;\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var /** @type {?} */ flags = 0;\n        if (injectFlags & 1 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    var /** @type {?} */ searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(searchView, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = /** @type {?} */ ((viewParentEl(searchView)));\n        searchView = /** @type {?} */ ((searchView.parent));\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    var /** @type {?} */ initIndex = 0;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var /** @type {?} */ callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    var /** @type {?} */ hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n/**\n * Stringifies values such that strings are wrapped in explicit quotation marks and\n * other types are stringified normally. Used in error messages (e.g. assertThrow)\n * to make it clear that certain values are of the string type when comparing.\n *\n * e.g. `expected \"3\" to be 3` is easier to understand than `expected 3 to be 3`.\n *\n * @param {?} value The value to be stringified\n * @return {?} The stringified value\n */\nfunction stringifyValueForError(value) {\n    if (value && value.native && value.native.outerHTML) {\n        return value.native.outerHTML;\n    }\n    return typeof value === 'string' ? \"\\\"\" + value + \"\\\"\" : value;\n}\n/**\n * @param {?} actual\n * @param {?} name\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @param {?=} serializer\n * @return {?}\n */\nfunction assertEqual(actual, expected, name, serializer) {\n    (actual != expected) && assertThrow(actual, expected, name, '==', serializer);\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @return {?}\n */\nfunction assertLessThan(actual, expected, name) {\n    (actual >= expected) && assertThrow(actual, expected, name, '<');\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} name\n * @return {?}\n */\nfunction assertNotNull(actual, name) {\n    assertNotEqual(actual, null, name);\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @return {?}\n */\nfunction assertNotEqual(actual, expected, name) {\n    (actual == expected) && assertThrow(actual, expected, name, '!=');\n}\n/**\n * Throws an error with a message constructed from the arguments.\n *\n * @template T\n * @param {?} actual The actual value (e.g. 3)\n * @param {?} expected The expected value (e.g. 5)\n * @param {?} name The name of the value being checked (e.g. attrs.length)\n * @param {?} operator The comparison operator (e.g. <, >, ==)\n * @param {?=} serializer Function that maps a value to its display value\n * @return {?}\n */\nfunction assertThrow(actual, expected, name, operator, serializer) {\n    if (serializer === void 0) { serializer = stringifyValueForError; }\n    var /** @type {?} */ error = \"ASSERT: expected \" + name + \" \" + operator + \" \" + serializer(expected) + \" but was \" + serializer(actual) + \"!\";\n    debugger; // leave `debugger` here to aid in debugging.\n    throw new Error(error);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nif (typeof ngDevMode == 'undefined') {\n    if (typeof window != 'undefined')\n        (/** @type {?} */ (window)).ngDevMode = true;\n    if (typeof self != 'undefined')\n        (/** @type {?} */ (self)).ngDevMode = true;\n    if (typeof global != 'undefined')\n        (/** @type {?} */ (global)).ngDevMode = true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} node\n * @param {?} type\n * @return {?}\n */\nfunction assertNodeType(node, type) {\n    assertNotEqual(node, null, 'node');\n    assertEqual(node.flags & 3 /* TYPE_MASK */, type, 'Node.type', typeSerializer);\n}\n/**\n * @param {?} node\n * @param {...?} types\n * @return {?}\n */\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertNotEqual(node, null, 'node');\n    var /** @type {?} */ nodeType = (node.flags & 3 /* TYPE_MASK */);\n    for (var /** @type {?} */ i = 0; i < types.length; i++) {\n        if (nodeType === types[i]) {\n            return;\n        }\n    }\n    throw new Error(\"Expected node of possible types: \" + types.map(typeSerializer).join(', ') + \" but got \" + typeSerializer(nodeType));\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeSerializer(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '??? ' + type + ' ???';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param {?} index The index of the directive in LView.data\n * @param {?} onInit\n * @param {?} doCheck\n * @param {?} tView The current TView\n * @return {?}\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    if (tView.firstTemplatePass === true) {\n        if (onInit != null) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck != null) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n * @param {?} flags\n * @param {?} currentView\n * @return {?}\n */\nfunction queueLifecycleHooks(flags, currentView) {\n    var /** @type {?} */ tView = currentView.tView;\n    if (tView.firstTemplatePass === true) {\n        var /** @type {?} */ size = (flags & 4092 /* SIZE_MASK */) >> 2;\n        var /** @type {?} */ start = flags >> 12;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var /** @type {?} */ i = start, /** @type {?} */ end = start + size; i < end; i++) {\n            var /** @type {?} */ def = (/** @type {?} */ (tView.data[i]));\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/**\n * Queues afterContentInit and afterContentChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit != null) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked != null) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/**\n * Queues afterViewInit and afterViewChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit != null) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked != null) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/**\n * Queues onDestroy hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView.lifecycleStage === 1 /* INIT */) {\n        executeHooks(currentView.data, tView.initHooks, tView.checkHooks, creationMode);\n        currentView.lifecycleStage = 2 /* CONTENT_INIT */;\n    }\n}\n/**\n * Calls all afterContentInit and afterContentChecked hooks for the view, then splices\n * out afterContentInit hooks to prep for the next run in update mode.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeContentHooks(currentView, tView, creationMode) {\n    if (currentView.lifecycleStage < 3 /* VIEW_INIT */) {\n        executeHooks(currentView.data, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        currentView.lifecycleStage = 3 /* VIEW_INIT */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param {?} data\n * @param {?} allHooks\n * @param {?} checkHooks\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var /** @type {?} */ hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall != null) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param {?} data\n * @param {?} arr The array in which the hooks are found\n * @return {?}\n */\nfunction callHooks(data, arr) {\n    for (var /** @type {?} */ i = 0; i < arr.length; i += 2) {\n        (/** @type {?} */ (arr[i | 1])).call(data[/** @type {?} */ (arr[i])]);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The state associated with an LContainer\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\n/**\n * LNode is an internal data structure which is used for the incremental DOM algorithm.\n * The \"L\" stands for \"Logical\" to differentiate between `RNodes` (actual rendered DOM\n * node) and our logical representation of DOM nodes, `LNodes`.\n *\n * The data structure is optimized for speed and size.\n *\n * In order to be fast, all subtypes of `LNode` should have the same shape.\n * Because size of the `LNode` matters, many fields have multiple roles depending\n * on the `LNode` subtype.\n *\n * See: https://en.wikipedia.org/wiki/Inline_caching#Monomorphic_inline_caching\n *\n * NOTE: This is a private data structure and should not be exported by any of the\n * instructions.\n * @record\n */\n\n/**\n * LNode representing an element.\n * @record\n */\n\n/**\n * LNode representing a #text node.\n * @record\n */\n\n/**\n * Abstract node which contains root nodes of a view.\n * @record\n */\n\n/**\n * Abstract node container which contains other views.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * LNode binding data (flyweight) for a particular node that is shared between all templates\n * of a specific type.\n *\n * If a property is:\n *    - PropertyAliases: that property's data was generated and this is it\n *    - Null: that property's data was already generated and nothing was found.\n *    - Undefined: that property's data has not yet been generated\n *\n * see: https://en.wikipedia.org/wiki/Flyweight_pattern for more on the Flyweight pattern\n * @record\n */\n\n/**\n * Static data for an LElementNode\n * @record\n */\n\n/**\n * Static data for an LContainerNode\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Linked list of projected nodes (using the pNextOrParent property).\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags3[RendererStyleFlags3.Important] = \"Important\";\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = \"DashCase\";\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n *\n * @record\n */\n\n/**\n * Returns wether the `renderer` is a `ProceduralRenderer3`\n * @param {?} renderer\n * @return {?}\n */\nfunction isProceduralRenderer(renderer) {\n    return !!((/** @type {?} */ (renderer)).listen);\n}\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n * @record\n */\n\n/**\n * @record\n */\n\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n/**\n * Subset of API needed for appending elements and text nodes.\n * @record\n */\n\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `LView` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LView`. When processing a particular view, we set the `currentView` to that\n * `LView`. When that view is done processing, the `currentView` is set back to\n * whatever the original `currentView` was before (the parent `LView`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n * @record\n */\n\n/**\n * Interface necessary to work with view tree traversal\n * @record\n */\n\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the template function as ngPrivateData.\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param {?} node The node whose following DOM node must be found.\n * @param {?} stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @return {?} RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node, stopNode) {\n    var /** @type {?} */ currentNode = node;\n    while (currentNode && currentNode !== stopNode) {\n        var /** @type {?} */ pNextOrParent = currentNode.pNextOrParent;\n        if (pNextOrParent) {\n            var /** @type {?} */ pNextOrParentType = pNextOrParent.flags & 3;\n            while (pNextOrParentType !== 1 /* Projection */) {\n                var /** @type {?} */ nativeNode = findFirstRNode(pNextOrParent);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                pNextOrParent = /** @type {?} */ ((pNextOrParent.pNextOrParent));\n            }\n            currentNode = pNextOrParent;\n        }\n        else {\n            var /** @type {?} */ currentSibling = currentNode.next;\n            while (currentSibling) {\n                var /** @type {?} */ nativeNode = findFirstRNode(currentSibling);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                currentSibling = currentSibling.next;\n            }\n            var /** @type {?} */ parentNode = currentNode.parent;\n            currentNode = null;\n            if (parentNode) {\n                var /** @type {?} */ parentType = parentNode.flags & 3;\n                if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                    currentNode = parentNode;\n                }\n            }\n        }\n    }\n    return null;\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param {?} node The node whose next node in the LNode tree must be found.\n * @return {?} LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var /** @type {?} */ pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var /** @type {?} */ isLastProjectedNode = (pNextOrParent.flags & 3 /* TYPE_MASK */) === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return node.next;\n}\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param {?} initialNode The node whose following node in the LNode tree must be found.\n * @param {?} rootNode The root node at which the lookup should stop.\n * @return {?} LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode, rootNode) {\n    var /** @type {?} */ node = initialNode;\n    var /** @type {?} */ nextNode = getNextLNodeWithProjection(node);\n    while (node && !nextNode) {\n        // if node.pNextOrParent is not null here, it is not the next node\n        // (because, at this point, nextNode is null, so it is the parent)\n        node = node.pNextOrParent || node.parent;\n        if (node === rootNode) {\n            return null;\n        }\n        nextNode = node && getNextLNodeWithProjection(node);\n    }\n    return nextNode;\n}\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param {?} rootNode\n * @return {?} RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode) {\n    var /** @type {?} */ node = rootNode;\n    while (node) {\n        var /** @type {?} */ type = node.flags & 3;\n        var /** @type {?} */ nextNode = null;\n        if (type === 3 /* Element */) {\n            // A LElementNode has a matching RNode in LElementNode.native\n            return (/** @type {?} */ (node)).native;\n        }\n        else if (type === 0 /* Container */) {\n            // For container look at the first node of the view next\n            var /** @type {?} */ childContainerData = (/** @type {?} */ (node)).data;\n            nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n        }\n        else if (type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = (/** @type {?} */ (node)).data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = (/** @type {?} */ (node)).child;\n        }\n        node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n    }\n    return null;\n}\n/**\n * @param {?} container\n * @param {?} rootNode\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var /** @type {?} */ parentNode = container.data.renderParent;\n    var /** @type {?} */ parent = parentNode ? parentNode.native : null;\n    var /** @type {?} */ node = rootNode.child;\n    if (parent) {\n        while (node) {\n            var /** @type {?} */ type = node.flags & 3;\n            var /** @type {?} */ nextNode = null;\n            var /** @type {?} */ renderer = container.view.renderer;\n            if (type === 3 /* Element */) {\n                if (insertMode) {\n                    isProceduralRenderer(renderer) ?\n                        renderer.insertBefore(parent, /** @type {?} */ ((node.native)), /** @type {?} */ (beforeNode)) :\n                        parent.insertBefore(/** @type {?} */ ((node.native)), /** @type {?} */ (beforeNode), true);\n                }\n                else {\n                    isProceduralRenderer(renderer) ? renderer.removeChild(/** @type {?} */ (parent), /** @type {?} */ ((node.native))) :\n                        parent.removeChild(/** @type {?} */ ((node.native)));\n                }\n                nextNode = node.next;\n            }\n            else if (type === 0 /* Container */) {\n                // if we get to a container, it must be a root node of a view because we are only\n                // propagating down into child views / containers and not child elements\n                var /** @type {?} */ childContainerData = (/** @type {?} */ (node)).data;\n                childContainerData.renderParent = parentNode;\n                nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n            }\n            else if (type === 1 /* Projection */) {\n                nextNode = (/** @type {?} */ (node)).data.head;\n            }\n            else {\n                nextNode = (/** @type {?} */ (node)).child;\n            }\n            if (nextNode === null) {\n                node = getNextOrParentSiblingNode(node, rootNode);\n            }\n            else {\n                node = nextNode;\n            }\n        }\n    }\n}\n/**\n * Traverses the tree of component views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  \\@param rootView The view to destroy\n * @param {?} rootView\n * @return {?}\n */\nfunction destroyViewTree(rootView) {\n    var /** @type {?} */ viewOrContainer = rootView;\n    while (viewOrContainer) {\n        var /** @type {?} */ next = null;\n        if (viewOrContainer.views && viewOrContainer.views.length) {\n            next = viewOrContainer.views[0].data;\n        }\n        else if (viewOrContainer.child) {\n            next = viewOrContainer.child;\n        }\n        else if (viewOrContainer.next) {\n            cleanUpView(/** @type {?} */ (viewOrContainer));\n            next = viewOrContainer.next;\n        }\n        if (next == null) {\n            while (viewOrContainer && !/** @type {?} */ ((viewOrContainer)).next) {\n                cleanUpView(/** @type {?} */ (viewOrContainer));\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(/** @type {?} */ (viewOrContainer) || rootView);\n            next = viewOrContainer && viewOrContainer.next;\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} container The container into which the view should be inserted\n * @param {?} newView The view to insert\n * @param {?} index The index at which to insert the view\n * @return {?} The inserted view\n */\nfunction insertView(container, newView, index) {\n    var /** @type {?} */ state = container.data;\n    var /** @type {?} */ views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        setViewNext(views[index - 1], newView);\n    }\n    if (index < views.length && views[index].data.id !== newView.data.id) {\n        // View ID change replace the view.\n        setViewNext(newView, views[index]);\n        views.splice(index, 0, newView);\n    }\n    else if (index >= views.length) {\n        views.push(newView);\n    }\n    if (state.nextIndex <= index) {\n        state.nextIndex++;\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        var /** @type {?} */ beforeNode = findNextRNodeSibling(newView, container);\n        if (!beforeNode) {\n            var /** @type {?} */ containerNextNativeNode = container.native;\n            if (containerNextNativeNode === undefined) {\n                containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n            }\n            beforeNode = containerNextNativeNode;\n        }\n        addRemoveViewFromContainer(container, newView, true, beforeNode);\n    }\n    return newView;\n}\n/**\n * Removes a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n * listeners, calling onDestroys).\n *\n * @param {?} container The container from which to remove a view\n * @param {?} removeIndex The index of the view to remove\n * @return {?} The removed view\n */\nfunction removeView(container, removeIndex) {\n    var /** @type {?} */ views = container.data.views;\n    var /** @type {?} */ viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        setViewNext(views[removeIndex - 1], viewNode.next);\n    }\n    views.splice(removeIndex, 1);\n    destroyViewTree(viewNode.data);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    container.data.queries && container.data.queries.removeView(removeIndex);\n    return viewNode;\n}\n/**\n * Sets a next on the view node, so views in for loops can easily jump from\n * one view to the next to add/remove elements. Also adds the LView (view.data)\n * to the view tree for easy traversal when cleaning up the view.\n *\n * @param {?} view The view to set up\n * @param {?} next The view's new next\n * @return {?}\n */\nfunction setViewNext(view, next) {\n    view.next = next;\n    view.data.next = next ? next.data : null;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The LViewOrLContainer for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var /** @type {?} */ node;\n    if ((node = /** @type {?} */ (((/** @type {?} */ (state)))).node) && (node.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (((node.parent)).data);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} view The LView to clean up\n * @return {?}\n */\nfunction cleanUpView(view) {\n    removeListeners(view);\n    executeOnDestroys(view);\n}\n/**\n * Removes listeners and unsubscribes from output subscriptions\n * @param {?} view\n * @return {?}\n */\nfunction removeListeners(view) {\n    var /** @type {?} */ cleanup = /** @type {?} */ ((view.cleanup));\n    if (cleanup != null) {\n        for (var /** @type {?} */ i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                /** @type {?} */ ((cleanup))[i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n                i += 2;\n            }\n            else {\n                cleanup[i].call(cleanup[i + 1]);\n            }\n        }\n        view.cleanup = null;\n    }\n}\n/**\n * Calls onDestroy hooks for this view\n * @param {?} view\n * @return {?}\n */\nfunction executeOnDestroys(view) {\n    var /** @type {?} */ tView = view.tView;\n    var /** @type {?} */ destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view.data, destroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param {?} parent The parent in which to insert the child\n * @param {?} currentView The LView being processed\n * @return {?} boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var /** @type {?} */ parentIsElement = (parent.flags & 3 /* TYPE_MASK */) === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}\n *\n * @param {?} parent The parent to which to append the child\n * @param {?} child The child that should be appended\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var /** @type {?} */ renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ? renderer.appendChild(/** @type {?} */ (((parent.native))), child) : /** @type {?} */ ((parent.native)).appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Inserts the provided node before the correct element in the DOM.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}\n *\n * @param {?} node Node to insert\n * @param {?} currentView Current LView\n * @return {?}\n */\nfunction insertChild(node, currentView) {\n    var /** @type {?} */ parent = /** @type {?} */ ((node.parent));\n    if (canInsertNativeNode(parent, currentView)) {\n        var /** @type {?} */ nativeSibling = findNextRNodeSibling(node, null);\n        var /** @type {?} */ renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(/** @type {?} */ ((parent.native)), /** @type {?} */ ((node.native)), nativeSibling) : /** @type {?} */ ((parent.native)).insertBefore(/** @type {?} */ ((node.native)), nativeSibling, false);\n    }\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param {?} node The node to process\n * @param {?} currentParent The last parent element to be processed\n * @param {?} currentView Current LView\n * @return {?}\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    if ((node.flags & 3 /* TYPE_MASK */) !== 0 /* Container */) {\n        appendChild(currentParent, (/** @type {?} */ (node)).native, currentView);\n    }\n    else if (canInsertNativeNode(currentParent, currentView)) {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var /** @type {?} */ lContainer = (/** @type {?} */ (node)).data;\n        lContainer.renderParent = /** @type {?} */ (currentParent);\n        var /** @type {?} */ views = lContainer.views;\n        for (var /** @type {?} */ i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(/** @type {?} */ (node), views[i], true, null);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} nodeClassAttrVal\n * @param {?} cssClassToMatch\n * @return {?}\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var /** @type {?} */ nodeClassesLen = nodeClassAttrVal.length;\n    var /** @type {?} */ matchIndex = /** @type {?} */ ((nodeClassAttrVal)).indexOf(cssClassToMatch);\n    var /** @type {?} */ matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && /** @type {?} */ ((nodeClassAttrVal))[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && /** @type {?} */ ((nodeClassAttrVal))[matchEndIdx] !== ' ')) {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param {?} tNode\n * @param {?} selector\n * @return {?} true if node matches the selector.\n */\nfunction isNodeMatchingSimpleSelector(tNode, selector) {\n    var /** @type {?} */ noOfSelectorParts = selector.length;\n    ngDevMode && assertNotNull(selector[0], 'selector[0]');\n    var /** @type {?} */ tagNameInSelector = selector[0];\n    // check tag tame\n    if (tagNameInSelector !== '' && tagNameInSelector !== tNode.tagName) {\n        return false;\n    }\n    // short-circuit case where we are only matching on element's tag name\n    if (noOfSelectorParts === 1) {\n        return true;\n    }\n    // short-circuit case where an element has no attrs but a selector tries to match some\n    if (noOfSelectorParts > 1 && !tNode.attrs) {\n        return false;\n    }\n    var /** @type {?} */ attrsInNode = /** @type {?} */ ((tNode.attrs));\n    for (var /** @type {?} */ i = 1; i < noOfSelectorParts; i += 2) {\n        var /** @type {?} */ attrNameInSelector = selector[i];\n        var /** @type {?} */ attrIdxInNode = attrsInNode.indexOf(attrNameInSelector);\n        if (attrIdxInNode % 2 !== 0) {\n            // attribute names are stored at even indexes\n            return false;\n        }\n        else {\n            var /** @type {?} */ attrValInSelector = selector[i + 1];\n            if (attrValInSelector !== '') {\n                // selector should also match on an attribute value\n                var /** @type {?} */ attrValInNode = attrsInNode[attrIdxInNode + 1];\n                if (attrNameInSelector === 'class') {\n                    // iterate over all the remaining items in the selector selector array = class names\n                    for (i++; i < noOfSelectorParts; i++) {\n                        if (!isCssClassMatching(attrValInNode, selector[i])) {\n                            return false;\n                        }\n                    }\n                }\n                else if (attrValInSelector !== attrValInNode) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nfunction isNodeMatchingSelectorWithNegations(tNode, selector) {\n    var /** @type {?} */ positiveSelector = selector[0];\n    if (positiveSelector != null && !isNodeMatchingSimpleSelector(tNode, positiveSelector)) {\n        return false;\n    }\n    // do we have any negation parts in this selector?\n    var /** @type {?} */ negativeSelectors = selector[1];\n    if (negativeSelectors) {\n        for (var /** @type {?} */ i = 0; i < negativeSelectors.length; i++) {\n            // if one of negative selectors matched than the whole selector doesn't match\n            if (isNodeMatchingSimpleSelector(tNode, negativeSelectors[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    for (var /** @type {?} */ i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelectorWithNegations(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched);\n * @param {?} tNode\n * @param {?} selectors\n * @return {?}\n */\nfunction matchingSelectorIndex(tNode, selectors) {\n    for (var /** @type {?} */ i = 0; i < selectors.length; i++) {\n        if (isNodeMatchingSelector(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Must use this method for CD (instead of === ) since NaN !== NaN\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @return {?} Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ i = 0;\n    while (i < list.length) {\n        var /** @type {?} */ item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\n/**\n * Used to set the parent property when nodes are created.\n */\nvar previousOrParentNode;\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Each directive's definition is stored here at the same index\n * as its directive instance in the data array. Any nodes that do not have static\n * data store a null value in tData to avoid a sparse array.\n */\nvar tData;\n/**\n * State of the current view being processed.\n */\nvar currentView;\n// The initialization has to be after the `let`, otherwise `createLView` can't see `let`.\ncurrentView = createLView(/** @type {?} */ ((null)), /** @type {?} */ ((null)), createTView());\nvar currentQueries;\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\n/**\n * An array of nodes (text, element, container, etc), their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * Points to the next binding index to read or write to.\n */\nvar bindingIndex;\n/**\n * When a view is destroyed, listeners need to be released and outputs need to be\n * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n * and output data (in chunks of 2) for a particular view. Combining the arrays\n * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n * separate for loops).\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an output subscription:\n * 1st index is: unsubscribe function\n * 2nd index is: context for function\n */\nvar cleanup;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newView New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nfunction enterView(newView, host) {\n    var /** @type {?} */ oldView = currentView;\n    data = newView.data;\n    bindingIndex = newView.bindingStartIndex || 0;\n    tData = newView.tView.data;\n    creationMode = newView.creationMode;\n    cleanup = newView.cleanup;\n    renderer = newView.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newView;\n    currentQueries = newView.queries;\n    return /** @type {?} */ ((oldView));\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n * @param {?} newView\n * @return {?}\n */\nfunction leaveView(newView) {\n    executeHooks(currentView.data, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n    currentView.creationMode = false;\n    currentView.lifecycleStage = 1 /* INIT */;\n    currentView.tView.firstTemplatePass = false;\n    enterView(newView, null);\n}\n/**\n * @param {?} viewId\n * @param {?} renderer\n * @param {?} tView\n * @param {?=} template\n * @param {?=} context\n * @return {?}\n */\nfunction createLView(viewId, renderer, tView, template, context) {\n    if (template === void 0) { template = null; }\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ newView = {\n        parent: currentView,\n        id: viewId,\n        // -1 for component views\n        node: /** @type {?} */ ((null)),\n        // until we initialize it in createNode.\n        data: [],\n        tView: tView,\n        cleanup: null,\n        renderer: renderer,\n        child: null,\n        tail: null,\n        next: null,\n        bindingStartIndex: null,\n        creationMode: true,\n        template: template,\n        context: context,\n        dynamicViewCount: 0,\n        lifecycleStage: 1 /* INIT */,\n        queries: null,\n    };\n    return newView;\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?=} state\n * @return {?}\n */\nfunction createLNode(index, type, native, state) {\n    var /** @type {?} */ parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (previousOrParentNode.parent);\n    var /** @type {?} */ queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var /** @type {?} */ isState = state != null;\n    var /** @type {?} */ node = {\n        flags: type,\n        native: /** @type {?} */ (native),\n        view: currentView,\n        parent: /** @type {?} */ (parent),\n        child: null,\n        next: null,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: isState ? /** @type {?} */ (state) : null,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null\n    };\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // LView and LNode.\n        ngDevMode && assertEqual((/** @type {?} */ (state)).node, null, 'lView.node');\n        (/** @type {?} */ ((state))).node = node;\n    }\n    if (index != null) {\n        // We are Element or Container\n        ngDevMode && assertDataNext(index);\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= tData.length) {\n            tData[index] = null;\n        }\n        else {\n            node.tNode = /** @type {?} */ (tData[index]);\n        }\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.view === currentView ||\n                (previousOrParentNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                ngDevMode && assertEqual(previousOrParentNode.child, null, 'previousNode.child');\n                previousOrParentNode.child = node;\n            }\n            else {\n                // We are adding component view, so we don't link parent node child to this node.\n            }\n        }\n        else if (previousOrParentNode) {\n            ngDevMode && assertEqual(previousOrParentNode.next, null, 'previousNode.next');\n            previousOrParentNode.next = node;\n        }\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n}\n/**\n *\n * @template T\n * @param {?} hostNode\n * @param {?} template Template function with the instructions.\n * @param {?} context to pass into the template.\n * @param {?} providedRendererFactory\n * @param {?} host Existing node to render into.\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} viewNode\n * @param {?} template\n * @param {?} context\n * @param {?} renderer\n * @return {?}\n */\nfunction renderEmbeddedTemplate(viewNode, template, context, renderer) {\n    var /** @type {?} */ _isParent = isParent;\n    var /** @type {?} */ _previousOrParentNode = previousOrParentNode;\n    try {\n        isParent = true;\n        previousOrParentNode = /** @type {?} */ ((null));\n        var /** @type {?} */ cm = false;\n        if (viewNode == null) {\n            var /** @type {?} */ view = createLView(-1, renderer, createTView(), template, context);\n            viewNode = createLNode(null, 2 /* View */, null, view);\n            cm = true;\n        }\n        enterView(viewNode.data, viewNode);\n        template(context, cm);\n    }\n    finally {\n        refreshDynamicChildren();\n        leaveView(/** @type {?} */ ((/** @type {?} */ ((currentView)).parent)));\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} hostView\n * @param {?} componentOrContext\n * @param {?=} template\n * @return {?}\n */\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var /** @type {?} */ oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            template(/** @type {?} */ ((componentOrContext)), creationMode);\n        }\n        else {\n            // Element was stored at 0 and directive was stored at 1 in renderComponent\n            // so to refresh the component, refresh() needs to be called with (1, 0)\n            componentRefresh(1, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the data array\n * @param {?=} nameOrComponentType Name of the DOM Node or `ComponentType` to create.\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} directiveTypes A set of directives declared on this element.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nfunction elementStart(index, nameOrComponentType, attrs, directiveTypes, localRefs) {\n    var /** @type {?} */ node;\n    var /** @type {?} */ native;\n    if (nameOrComponentType == null) {\n        // native node retrieval - used for exporting elements as tpl local variables (<div #foo>)\n        var /** @type {?} */ node_1 = /** @type {?} */ ((data[index]));\n        native = node_1 && (/** @type {?} */ (node_1)).native;\n    }\n    else {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n        var /** @type {?} */ isHostElement = typeof nameOrComponentType !== 'string';\n        // MEGAMORPHIC: `ngComponentDef` is a megamorphic property access here.\n        // This is OK, since we will refactor this code and store the result in `TView.data`\n        // which means that we will be reading this value only once. We are trading clean/simple\n        // template\n        // code for slight startup(first run) performance. (No impact on subsequent runs)\n        // TODO(misko): refactor this to store the `ComponentDef` in `TView.data`.\n        var /** @type {?} */ hostComponentDef = isHostElement ? (/** @type {?} */ (nameOrComponentType)).ngComponentDef : null;\n        var /** @type {?} */ name_1 = isHostElement ? /** @type {?} */ ((hostComponentDef)).tag : /** @type {?} */ (nameOrComponentType);\n        if (name_1 === null) {\n            // TODO: future support for nameless components.\n            throw 'for now name is required';\n        }\n        else {\n            native = renderer.createElement(name_1);\n            var /** @type {?} */ componentView = null;\n            if (isHostElement) {\n                var /** @type {?} */ tView = getOrCreateTView(/** @type {?} */ ((hostComponentDef)).template);\n                componentView = addToViewTree(createLView(-1, rendererFactory.createRenderer(native, /** @type {?} */ ((hostComponentDef)).rendererType), tView));\n            }\n            // Only component views should be added to the view tree directly. Embedded views are\n            // accessed through their containers because they may be removed / re-added later.\n            node = createLNode(index, 3 /* Element */, native, componentView);\n            // TODO(misko): implement code which caches the local reference resolution\n            var /** @type {?} */ queryName = hack_findQueryName(hostComponentDef, localRefs, '');\n            if (node.tNode == null) {\n                ngDevMode && assertDataInRange(index - 1);\n                node.tNode = tData[index] =\n                    createTNode(name_1, attrs || null, null, hostComponentDef ? null : queryName);\n            }\n            if (attrs)\n                setUpAttributes(native, attrs);\n            appendChild(/** @type {?} */ ((node.parent)), native, currentView);\n            if (hostComponentDef) {\n                // TODO(mhevery): This assumes that the directives come in correct order, which\n                // is not guaranteed. Must be refactored to take it into account.\n                directiveCreate(++index, hostComponentDef.n(), hostComponentDef, queryName);\n            }\n            hack_declareDirectives(index, directiveTypes, localRefs);\n        }\n    }\n    return native;\n}\n/**\n * This function instantiates a directive with a correct queryName. It is a hack since we should\n * compute the query value only once and store it with the template (rather than on each invocation)\n * @param {?} index\n * @param {?} directiveTypes\n * @param {?} localRefs\n * @return {?}\n */\nfunction hack_declareDirectives(index, directiveTypes, localRefs) {\n    if (directiveTypes) {\n        // TODO(mhevery): This assumes that the directives come in correct order, which\n        // is not guaranteed. Must be refactored to take it into account.\n        for (var /** @type {?} */ i = 0; i < directiveTypes.length; i++) {\n            // MEGAMORPHIC: `ngDirectiveDef` is a megamorphic property access here.\n            // This is OK, since we will refactor this code and store the result in `TView.data`\n            // which means that we will be reading this value only once. We are trading clean/simple\n            // template\n            // code for slight startup(first run) performance. (No impact on subsequent runs)\n            // TODO(misko): refactor this to store the `DirectiveDef` in `TView.data`.\n            var /** @type {?} */ directiveType = directiveTypes[i];\n            var /** @type {?} */ directiveDef = directiveType.ngDirectiveDef;\n            directiveCreate(++index, directiveDef.n(), directiveDef, hack_findQueryName(directiveDef, localRefs));\n        }\n    }\n}\n/**\n * This function returns the queryName for a directive. It is a hack since we should\n * compute the query value only once and store it with the template (rather than on each invocation)\n * @param {?} directiveDef\n * @param {?} localRefs\n * @param {?=} defaultExport\n * @return {?}\n */\nfunction hack_findQueryName(directiveDef, localRefs, defaultExport) {\n    var /** @type {?} */ exportAs = directiveDef && directiveDef.exportAs || defaultExport;\n    if (exportAs != null && localRefs) {\n        for (var /** @type {?} */ i = 0; i < localRefs.length; i = i + 2) {\n            var /** @type {?} */ local = localRefs[i];\n            var /** @type {?} */ toExportAs = localRefs[i | 1];\n            if (toExportAs === exportAs || toExportAs === defaultExport) {\n                return local;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param {?} template The template from which to get static data\n * @return {?} TView\n */\nfunction getOrCreateTView(template) {\n    return template.ngPrivateData || (template.ngPrivateData = /** @type {?} */ (createTView()));\n}\n/**\n * Creates a TView instance\n * @return {?}\n */\nfunction createTView() {\n    return {\n        data: [],\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null\n    };\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    ngDevMode && assertEqual(attrs.length % 2, 0, 'attrs.length % 2');\n    var /** @type {?} */ isProc = isProceduralRenderer(renderer);\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        isProc ? (/** @type {?} */ (renderer)).setAttribute(native, attrs[i], attrs[i | 1]) :\n            native.setAttribute(attrs[i], attrs[i | 1]);\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var /** @type {?} */ defaultRenderer = factory.createRenderer(null, null);\n    var /** @type {?} */ rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param {?} rNode Render host element.\n * @param {?} def ComponentDef\n * @return {?}\n */\nfunction hostElement(rNode, def) {\n    resetApplicationState();\n    createLNode(0, 3 /* Element */, rNode, createLView(-1, renderer, getOrCreateTView(def.template)));\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listener The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nfunction listener(eventName, listener, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ node = previousOrParentNode;\n    var /** @type {?} */ native = /** @type {?} */ (node.native);\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        var /** @type {?} */ cleanupFn = renderer.listen(native, eventName, listener);\n        (cleanup || (cleanup = currentView.cleanup = [])).push(cleanupFn, null);\n    }\n    else {\n        native.addEventListener(eventName, listener, useCapture);\n        (cleanup || (cleanup = currentView.cleanup = [])).push(eventName, native, listener, useCapture);\n    }\n    var /** @type {?} */ tNode = /** @type {?} */ ((node.tNode));\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.flags, 1 /* Output */);\n    }\n    var /** @type {?} */ outputs = tNode.outputs;\n    var /** @type {?} */ outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listener);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(outputs, listener) {\n    for (var /** @type {?} */ i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (outputs[i]));\n        var /** @type {?} */ subscription = data[/** @type {?} */ (outputs[i])][outputs[i | 1]].subscribe(listener); /** @type {?} */\n        ((cleanup)).push(subscription.unsubscribe, subscription);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var /** @type {?} */ queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.flags, currentView);\n}\n/**\n * Update an attribute on an Element. This is used with a `bind` instruction.\n *\n * @param {?} index The index of the element to update in the data array\n * @param {?} attrName Name of attribute. Because it is going to DOM, this is not subject to\n *        renaming as port of minification.\n * @param {?} value Value to write. This value will go through stringification.\n * @return {?}\n */\n\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @return {?}\n */\nfunction elementProperty(index, propName, value) {\n    if (value === NO_CHANGE)\n        return;\n    var /** @type {?} */ node = /** @type {?} */ (data[index]);\n    var /** @type {?} */ tNode = /** @type {?} */ ((node.tNode));\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.flags, 0 /* Input */);\n    }\n    var /** @type {?} */ inputData = tNode.inputs;\n    var /** @type {?} */ dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n    }\n    else {\n        var /** @type {?} */ native = node.native;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param {?} tagName\n * @param {?} attrs\n * @param {?} data\n * @param {?} localName\n * @return {?} the TNode object\n */\nfunction createTNode(tagName, attrs, data, localName) {\n    return {\n        tagName: tagName,\n        attrs: attrs,\n        localNames: localName ? [localName, -1] : null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        data: data\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var /** @type {?} */ i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]));\n        data[/** @type {?} */ (inputs[i])][inputs[i | 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param {?} lNodeFlags\n * @param {?} direction\n * @return {?} PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(lNodeFlags, direction) {\n    var /** @type {?} */ size = (lNodeFlags & 4092 /* SIZE_MASK */) >> 2;\n    var /** @type {?} */ propStore = null;\n    if (size > 0) {\n        var /** @type {?} */ start = lNodeFlags >> 12;\n        var /** @type {?} */ isInput = direction === 0;\n        for (var /** @type {?} */ i = start, /** @type {?} */ ii = start + size; i < ii; i++) {\n            var /** @type {?} */ directiveDef = /** @type {?} */ (((tData))[i]);\n            var /** @type {?} */ propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var /** @type {?} */ publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var /** @type {?} */ internalName = propertyAliasMap[publicName];\n                    var /** @type {?} */ hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a classList.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\n\n/**\n * Update a given style on an Element.\n *\n * @template T\n * @param {?} index Index of the element to change in the data array\n * @param {?} styleName Name of property. Because it is going to DOM this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Suffix to add to style's value (optional).\n * @return {?}\n */\nfunction elementStyle(index, styleName, value, suffix) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ lElement = /** @type {?} */ (data[index]);\n        if (value == null) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native.style.removeProperty(styleName);\n        }\n        else {\n            var /** @type {?} */ strValue = suffix ? stringify$1(value) + suffix : stringify$1(value);\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native.style.setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array.\n * @param {?=} value Value to write. This value will be stringified.\n *   If value is not provided than the actual creation of the text node is delayed.\n * @return {?}\n */\nfunction text(index, value) {\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    var /** @type {?} */ textNode = value != null ?\n        (isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value))) :\n        null;\n    var /** @type {?} */ node = createLNode(index, 3 /* Element */, textNode);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(/** @type {?} */ ((node.parent)), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper bind(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nfunction textBinding(index, value) {\n    ngDevMode && assertDataInRange(index);\n    var /** @type {?} */ existingNode = /** @type {?} */ (data[index]);\n    ngDevMode && assertNotNull(existingNode, 'existing node');\n    if (existingNode.native) {\n        // If DOM node exists and value changed, update textContent\n        value !== NO_CHANGE &&\n            (isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value));\n    }\n    else {\n        // Node was created but DOM node creation was delayed. Create and append now.\n        existingNode.native = isProceduralRenderer(renderer) ?\n            renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n        insertChild(existingNode, currentView);\n    }\n}\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @template T\n * @param {?} index Each directive in a `View` will have a unique index. Directives can\n *        be created or retrieved out of order.\n * @param {?} directive The directive instance.\n * @param {?} directiveDef DirectiveDef object which contains information about the template.\n * @param {?=} queryName Name under which the query can retrieve the directive instance.\n * @return {?}\n */\nfunction directiveCreate(index, directive, directiveDef, queryName) {\n    var /** @type {?} */ instance;\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ flags = /** @type {?} */ ((previousOrParentNode)).flags;\n    var /** @type {?} */ size = flags & 4092;\n    if (size === 0) {\n        flags = (index << 12 /* INDX_SHIFT */) | 4 /* SIZE_SKIP */ | flags & 3 /* TYPE_MASK */;\n    }\n    else {\n        flags += 4 /* SIZE_SKIP */;\n    } /** @type {?} */\n    ((previousOrParentNode)).flags = flags;\n    ngDevMode && assertDataInRange(index - 1);\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    data[index] = instance = directive;\n    if (index >= tData.length) {\n        tData[index] = /** @type {?} */ ((directiveDef));\n        if (queryName) {\n            ngDevMode && assertNotNull(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n            var /** @type {?} */ tNode_1 = /** @type {?} */ ((/** @type {?} */ ((previousOrParentNode)).tNode));\n            (tNode_1.localNames || (tNode_1.localNames = [])).push(queryName, index);\n        }\n    }\n    var /** @type {?} */ diPublic = /** @type {?} */ ((directiveDef)).diPublic;\n    if (diPublic) {\n        diPublic(/** @type {?} */ ((directiveDef)));\n    }\n    var /** @type {?} */ tNode = /** @type {?} */ ((previousOrParentNode.tNode));\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(instance, /** @type {?} */ ((directiveDef)).inputs, tNode);\n    }\n    // Init hooks are queued now so ngOnInit is called in host components before\n    // any projected components.\n    queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n    return instance;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(instance, inputs, tNode) {\n    var /** @type {?} */ directiveIndex = ((previousOrParentNode.flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */) - 1;\n    var /** @type {?} */ initialInputData = /** @type {?} */ (tNode.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var /** @type {?} */ initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var /** @type {?} */ i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i | 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var /** @type {?} */ initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var /** @type {?} */ attrs = /** @type {?} */ ((tNode.attrs));\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        var /** @type {?} */ attrName = attrs[i];\n        var /** @type {?} */ minifiedInputName = inputs[attrName];\n        if (minifiedInputName !== undefined) {\n            var /** @type {?} */ inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrs[i | 1]);\n        }\n    }\n    return initialInputData;\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param {?} index The index of the container in the data array\n * @param {?=} directiveTypes\n * @param {?=} template Optional inline template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nfunction container(index, directiveTypes, template, tagName, attrs, localRefs) {\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    var /** @type {?} */ currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent));\n    ngDevMode && assertNotEqual(currentParent, null, 'currentParent');\n    var /** @type {?} */ lContainer = /** @type {?} */ ({\n        views: [],\n        nextIndex: 0,\n        // If the direct parent of the container is a view, its views will need to be added\n        // through insertView() when its parent view is being inserted:\n        renderParent: canInsertNativeNode(currentParent, currentView) ? currentParent : null,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView,\n        dynamicViewCount: 0,\n        queries: null\n    });\n    var /** @type {?} */ node = createLNode(index, 0 /* Container */, undefined, lContainer);\n    if (node.tNode == null) {\n        // TODO(misko): implement queryName caching\n        var /** @type {?} */ queryName = hack_findQueryName(null, localRefs, '');\n        node.tNode = tData[index] = createTNode(tagName || null, attrs || null, [], queryName || null);\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(node.data);\n    hack_declareDirectives(index, directiveTypes, localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ queries = node.queries;\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer.queries = queries.container();\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = /** @type {?} */ (data[index]);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data.nextIndex = 0;\n    ngDevMode && assertEqual((/** @type {?} */ (previousOrParentNode)).native === undefined, true, 'previousOrParentNode.native === undefined');\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executeInitHooks(currentView, currentView.tView, creationMode);\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n * @return {?}\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode);\n    container.native = undefined;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ nextIndex = container.data.nextIndex;\n    while (nextIndex < container.data.views.length) {\n        // remove extra view.\n        removeView(container, nextIndex);\n    }\n}\n/**\n * @return {?}\n */\nfunction refreshDynamicChildren() {\n    for (var /** @type {?} */ current = currentView.child; current !== null; current = current.next) {\n        if (current.dynamicViewCount !== 0 && (/** @type {?} */ (current)).views) {\n            var /** @type {?} */ container_1 = /** @type {?} */ (current);\n            for (var /** @type {?} */ i = 0; i < container_1.views.length; i++) {\n                var /** @type {?} */ view = container_1.views[i];\n                renderEmbeddedTemplate(view, /** @type {?} */ ((view.data.template)), /** @type {?} */ ((view.data.context)), renderer);\n            }\n        }\n    }\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param {?} viewBlockId The ID of this view\n * @return {?} boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var /** @type {?} */ container = /** @type {?} */ ((isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent))));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ lContainer = container.data;\n    var /** @type {?} */ views = lContainer.views;\n    var /** @type {?} */ existingView = !creationMode && lContainer.nextIndex < views.length && views[lContainer.nextIndex];\n    var /** @type {?} */ viewUpdateMode = existingView && viewBlockId === (/** @type {?} */ (existingView)).data.id;\n    if (viewUpdateMode) {\n        previousOrParentNode = views[lContainer.nextIndex++];\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView((/** @type {?} */ (existingView)).data, /** @type {?} */ (previousOrParentNode));\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var /** @type {?} */ newView = createLView(viewBlockId, renderer, getOrCreateEmbeddedTView(viewBlockId, container));\n        if (lContainer.queries) {\n            newView.queries = lContainer.queries.enterView(lContainer.nextIndex);\n        }\n        enterView(newView, createLNode(null, 2 /* View */, null, newView));\n        lContainer.nextIndex++;\n    }\n    return !viewUpdateMode;\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view needs to set the global tData variable to the static data for\n * that view. Otherwise, the view's static data for a particular node would overwrite\n * the static data for a node in the view above it with the same index (since it's in the\n * same template).\n *\n * @param {?} viewIndex The index of the TView in TContainer\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var /** @type {?} */ tContainer = (/** @type {?} */ (((parent)).tNode)).data;\n    if (viewIndex >= tContainer.length || tContainer[viewIndex] == null) {\n        tContainer[viewIndex] = createTView();\n    }\n    return tContainer[viewIndex];\n}\n/**\n * Marks the end of an embedded view.\n * @return {?}\n */\nfunction embeddedViewEnd() {\n    isParent = false;\n    var /** @type {?} */ viewNode = previousOrParentNode = /** @type {?} */ (currentView.node);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode.parent);\n    if (container) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var /** @type {?} */ containerState = container.data;\n        var /** @type {?} */ previousView = containerState.nextIndex <= containerState.views.length ? /** @type {?} */ (containerState.views[containerState.nextIndex - 1]) :\n            null;\n        var /** @type {?} */ viewIdChanged = previousView == null ? true : previousView.data.id !== viewNode.data.id;\n        if (viewIdChanged) {\n            insertView(container, viewNode, containerState.nextIndex - 1);\n        }\n    }\n    leaveView(/** @type {?} */ ((/** @type {?} */ ((currentView)).parent)));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes the component view.\n *\n * In other words, enters the component's view and processes it to update bindings, queries, etc.\n *\n * @template T\n * @param {?} directiveIndex\n * @param {?} elementIndex\n * @return {?}\n */\nfunction componentRefresh(directiveIndex, elementIndex) {\n    executeInitHooks(currentView, currentView.tView, creationMode);\n    executeContentHooks(currentView, currentView.tView, creationMode);\n    var /** @type {?} */ template = (/** @type {?} */ (tData[directiveIndex])).template;\n    if (template != null) {\n        ngDevMode && assertDataInRange(elementIndex);\n        var /** @type {?} */ element = /** @type {?} */ (((data))[elementIndex]);\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode && assertNotEqual(element.data, null, 'isComponent');\n        ngDevMode && assertDataInRange(directiveIndex);\n        var /** @type {?} */ directive = getDirectiveInstance(data[directiveIndex]);\n        var /** @type {?} */ hostView = /** @type {?} */ ((element.data));\n        ngDevMode && assertNotEqual(hostView, null, 'hostView');\n        var /** @type {?} */ oldView = enterView(hostView, element);\n        try {\n            template(directive, creationMode);\n        }\n        finally {\n            refreshDynamicChildren();\n            leaveView(oldView);\n        }\n    }\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * @param {?} index\n * @param {?=} selectors\n * @return {?}\n */\nfunction projectionDef(index, selectors) {\n    var /** @type {?} */ noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var /** @type {?} */ distributedNodes = new Array(noOfNodeBuckets);\n    for (var /** @type {?} */ i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var /** @type {?} */ componentNode = findComponentHost(currentView);\n    var /** @type {?} */ componentChild = componentNode.child;\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var /** @type {?} */ matchedIdx = matchingSelectorIndex(componentChild.tNode, /** @type {?} */ ((selectors)));\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = componentChild.next;\n    }\n    ngDevMode && assertDataNext(index);\n    data[index] = distributedNodes;\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param {?} projectionNode Projection node whose projected nodes linked list has to be updated\n * @param {?} appendedFirst First node of the linked list to append.\n * @param {?} appendedLast Last node of the linked list to append.\n * @return {?}\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    // appendedFirst can be null if and only if appendedLast is also null\n    ngDevMode &&\n        assertEqual(!appendedFirst === !appendedLast, true, '!appendedFirst === !appendedLast');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var /** @type {?} */ projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?} localIndex - index under which distribution of projected nodes was memorized\n * @param {?=} selectorIndex - 0 means <ng-content> without any selector\n * @param {?=} attrs - attributes attached to the ng-content node, if present\n * @return {?}\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var /** @type {?} */ node = createLNode(nodeIndex, 1 /* Projection */, null, { head: null, tail: null });\n    if (node.tNode == null) {\n        node.tNode = createTNode(null, attrs || null, null, null);\n    }\n    isParent = false; // self closing\n    var /** @type {?} */ currentParent = node.parent;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var /** @type {?} */ componentNode = findComponentHost(currentView);\n    // make sure that nodes to project were memorized\n    var /** @type {?} */ nodesForSelector = valueInData(/** @type {?} */ ((/** @type {?} */ ((componentNode.data)).data)), localIndex)[selectorIndex];\n    // build the linked list of projected nodes:\n    for (var /** @type {?} */ i = 0; i < nodesForSelector.length; i++) {\n        var /** @type {?} */ nodeToProject = nodesForSelector[i];\n        if ((nodeToProject.flags & 3 /* TYPE_MASK */) === 1 /* Projection */) {\n            var /** @type {?} */ previouslyProjected = (/** @type {?} */ (nodeToProject)).data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            appendToProjectionNode(node, /** @type {?} */ (nodeToProject), /** @type {?} */ (nodeToProject));\n        }\n    }\n    if (canInsertNativeNode(currentParent, currentView)) {\n        // process each node in the list of projected nodes:\n        var /** @type {?} */ nodeToProject = node.data.head;\n        var /** @type {?} */ lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(/** @type {?} */ (nodeToProject), currentParent, currentView);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} lView LView for which we want a host element node\n * @return {?} The host node\n */\nfunction findComponentHost(lView) {\n    var /** @type {?} */ viewRootLNode = lView.node;\n    while ((viewRootLNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        ngDevMode && assertNotNull(lView.parent, 'lView.parent');\n        lView = /** @type {?} */ ((lView.parent));\n        viewRootLNode = lView.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n    return /** @type {?} */ (viewRootLNode);\n}\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} state The LView or LContainer to add to the view tree\n * @return {?} The state passed in\n */\nfunction addToViewTree(state) {\n    currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n    currentView.tail = state;\n    return state;\n}\n/**\n * A special value which designates that a value has not changed.\n */\nvar NO_CHANGE = /** @type {?} */ ({});\n/**\n * Create interpolation bindings with variable number of arguments.\n *\n * If any of the arguments change, then the interpolation is concatenated\n * and causes an update.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes (could be NO_CHANGE).\n * @param {?} values\n * @return {?}\n */\nfunction bindV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    // TODO(vicb): Add proper unit tests when there is a place to add them\n    if (creationMode) {\n        initBindings();\n        // Only the bindings (odd indexes) are stored as texts are constant.\n        var /** @type {?} */ bindings_1 = [];\n        data[bindingIndex++] = bindings_1;\n        var /** @type {?} */ content = values[0];\n        for (var /** @type {?} */ i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n            bindings_1.push(values[i]);\n        }\n        return content;\n    }\n    var /** @type {?} */ bindings = data[bindingIndex++];\n    // `bIdx` is the index in the `bindings` array, `vIdx` in the `values` array\n    for (var /** @type {?} */ bIdx = 0, /** @type {?} */ vIdx = 1; bIdx < bindings.length; bIdx++, vIdx += 2) {\n        if (values[vIdx] !== NO_CHANGE && isDifferent(values[vIdx], bindings[bIdx])) {\n            var /** @type {?} */ content = values[0];\n            for (bIdx = 0, vIdx = 1; bIdx < bindings.length; vIdx += 2, bIdx++) {\n                if (values[vIdx] !== NO_CHANGE) {\n                    bindings[bIdx] = values[vIdx];\n                }\n                content += stringify$1(bindings[bIdx]) + values[vIdx + 1];\n            }\n            return content;\n        }\n    }\n    return NO_CHANGE;\n}\n/**\n * @return {?}\n */\nfunction initBindings() {\n    if (currentView.bindingStartIndex == null) {\n        bindingIndex = currentView.bindingStartIndex = data.length;\n    }\n}\n/**\n * Creates a single value binding without interpolation.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nfunction bind(value) {\n    if (creationMode) {\n        initBindings();\n        return data[bindingIndex++] = value;\n    }\n    var /** @type {?} */ changed = value !== NO_CHANGE && isDifferent(data[bindingIndex], value);\n    if (changed) {\n        data[bindingIndex] = value;\n    }\n    bindingIndex++;\n    return changed ? value : NO_CHANGE;\n}\n/**\n * Creates an interpolation bindings with 1 argument.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} value value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nfunction bind1(prefix, value, suffix) {\n    return bind(value) === NO_CHANGE ? NO_CHANGE : prefix + stringify$1(value) + suffix;\n}\n/**\n * Creates an interpolation bindings with 2 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} suffix\n * @return {?}\n */\nfunction bind2(prefix, v0, i0, v1, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (different = (isDifferent(part0, v0) || isDifferent(part1, v1))) {\n            data[bindingIndex - 2] = v0;\n            data[bindingIndex - 1] = v1;\n        }\n    }\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation bindings with 3 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nfunction bind3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (different = (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2))) {\n            data[bindingIndex - 3] = v0;\n            data[bindingIndex - 2] = v1;\n            data[bindingIndex - 1] = v2;\n        }\n    }\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nfunction bind4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3))) {\n            data[bindingIndex - 4] = v0;\n            data[bindingIndex - 3] = v1;\n            data[bindingIndex - 2] = v2;\n            data[bindingIndex - 1] = v3;\n        }\n    }\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nfunction bind5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4))) {\n            data[bindingIndex - 5] = v0;\n            data[bindingIndex - 4] = v1;\n            data[bindingIndex - 3] = v2;\n            data[bindingIndex - 2] = v3;\n            data[bindingIndex - 1] = v4;\n        }\n    }\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nfunction bind6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n        data[bindingIndex++] = v5;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        var /** @type {?} */ part5 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (v5 === NO_CHANGE)\n            v5 = part5;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4) || isDifferent(part5, v5))) {\n            data[bindingIndex - 6] = v0;\n            data[bindingIndex - 5] = v1;\n            data[bindingIndex - 4] = v2;\n            data[bindingIndex - 3] = v3;\n            data[bindingIndex - 2] = v4;\n            data[bindingIndex - 1] = v5;\n        }\n    }\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nfunction bind7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n        data[bindingIndex++] = v5;\n        data[bindingIndex++] = v6;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        var /** @type {?} */ part5 = data[bindingIndex++];\n        var /** @type {?} */ part6 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (v5 === NO_CHANGE)\n            v5 = part5;\n        if (v6 === NO_CHANGE)\n            v6 = part6;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4) || isDifferent(part5, v5) ||\n                isDifferent(part6, v6))) {\n            data[bindingIndex - 7] = v0;\n            data[bindingIndex - 6] = v1;\n            data[bindingIndex - 5] = v2;\n            data[bindingIndex - 4] = v3;\n            data[bindingIndex - 3] = v4;\n            data[bindingIndex - 2] = v5;\n            data[bindingIndex - 1] = v6;\n        }\n    }\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 arguments.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nfunction bind8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        initBindings();\n        data[bindingIndex++] = v0;\n        data[bindingIndex++] = v1;\n        data[bindingIndex++] = v2;\n        data[bindingIndex++] = v3;\n        data[bindingIndex++] = v4;\n        data[bindingIndex++] = v5;\n        data[bindingIndex++] = v6;\n        data[bindingIndex++] = v7;\n    }\n    else {\n        var /** @type {?} */ part0 = data[bindingIndex++];\n        var /** @type {?} */ part1 = data[bindingIndex++];\n        var /** @type {?} */ part2 = data[bindingIndex++];\n        var /** @type {?} */ part3 = data[bindingIndex++];\n        var /** @type {?} */ part4 = data[bindingIndex++];\n        var /** @type {?} */ part5 = data[bindingIndex++];\n        var /** @type {?} */ part6 = data[bindingIndex++];\n        var /** @type {?} */ part7 = data[bindingIndex++];\n        if (v0 === NO_CHANGE)\n            v0 = part0;\n        if (v1 === NO_CHANGE)\n            v1 = part1;\n        if (v2 === NO_CHANGE)\n            v2 = part2;\n        if (v3 === NO_CHANGE)\n            v3 = part3;\n        if (v4 === NO_CHANGE)\n            v4 = part4;\n        if (v5 === NO_CHANGE)\n            v5 = part5;\n        if (v6 === NO_CHANGE)\n            v6 = part6;\n        if (v7 === NO_CHANGE)\n            v7 = part7;\n        if (different =\n            (isDifferent(part0, v0) || isDifferent(part1, v1) || isDifferent(part2, v2) ||\n                isDifferent(part3, v3) || isDifferent(part4, v4) || isDifferent(part5, v5) ||\n                isDifferent(part6, v6) || isDifferent(part7, v7))) {\n            data[bindingIndex - 8] = v0;\n            data[bindingIndex - 7] = v1;\n            data[bindingIndex - 6] = v2;\n            data[bindingIndex - 5] = v3;\n            data[bindingIndex - 4] = v4;\n            data[bindingIndex - 3] = v5;\n            data[bindingIndex - 2] = v6;\n            data[bindingIndex - 1] = v7;\n        }\n    }\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * @template T\n * @param {?} index\n * @param {?=} value\n * @return {?}\n */\nfunction memory(index, value) {\n    return valueInData(data, index, value);\n}\n/**\n * @template T\n * @param {?} data\n * @param {?} index\n * @param {?=} value\n * @return {?}\n */\nfunction valueInData(data, index, value) {\n    if (value === undefined) {\n        ngDevMode && assertDataInRange(index, data);\n        value = data[index];\n    }\n    else {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        if (index >= tData.length) {\n            tData[index] = null;\n        }\n        data[index] = value;\n    }\n    return /** @type {?} */ ((value));\n}\n/**\n * Gets the binding at the current bindingIndex\n * @return {?}\n */\nfunction peekBinding() {\n    ngDevMode && assertNotEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    return data[bindingIndex];\n}\n/**\n * @param {?} QueryType\n * @return {?}\n */\nfunction getCurrentQueries(QueryType) {\n    return currentQueries || (currentQueries = new QueryType());\n}\n/**\n * @return {?}\n */\nfunction getPreviousOrParentNode() {\n    return previousOrParentNode;\n}\n/**\n * @return {?}\n */\nfunction getRenderer() {\n    return renderer;\n}\n/**\n * @template T\n * @param {?} instanceOrArray\n * @return {?}\n */\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in data[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\n/**\n * @return {?}\n */\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'isParent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertNotEqual(previousOrParentNode.parent, null, 'isParent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(index, arr ? arr.length : 0, 'data.length');\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction assertDataNext(index) {\n    assertEqual(data.length, index, 'data.length not in sequence');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options that control how the component should be bootstrapped.\n * @record\n */\n\n/**\n * Bootstraps a component, then creates and returns a `ComponentRef` for that component.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?} opts\n * @return {?}\n */\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nfunction renderComponent(componentType, opts) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var /** @type {?} */ componentDef = /** @type {?} */ (componentType.ngComponentDef);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var /** @type {?} */ component;\n    var /** @type {?} */ hostNode = locateHostElement(rendererFactory, opts.host || componentDef.tag);\n    var /** @type {?} */ oldView = enterView(createLView(-1, rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView()), /** @type {?} */ ((null)));\n    try {\n        // Create element node at index 0 in data array\n        hostElement(hostNode, componentDef);\n        // Create directive instance with n() and store at index 1 in data array (el is 0)\n        component = getDirectiveInstance(directiveCreate(1, componentDef.n(), componentDef));\n    }\n    finally {\n        leaveView(oldView);\n    }\n    opts.features && opts.features.forEach(function (feature) { return feature(component, componentDef); });\n    detectChanges(component);\n    return component;\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction detectChanges(component) {\n    ngDevMode && assertNotNull(component, 'component');\n    var /** @type {?} */ hostNode = /** @type {?} */ ((/** @type {?} */ (component))[NG_HOST_SYMBOL]);\n    if (ngDevMode && !hostNode) {\n        createError('Not a directive instance', component);\n    }\n    ngDevMode && assertNotNull(hostNode.data, 'hostNode.data');\n    renderComponentOrTemplate(hostNode, hostNode.view, component);\n    isDirty = false;\n}\nvar isDirty = false;\n/**\n * @template T\n * @param {?} component\n * @param {?=} scheduler\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 128;\n/**\n * Counter used to generate unique IDs for directives.\n */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param {?} injector The node injector in which the directive should be registered\n * @param {?} type The directive to register\n * @return {?}\n */\nfunction bloomAdd(injector, type) {\n    var /** @type {?} */ id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = (/** @type {?} */ (type))[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (128) slots in our bloom filter (4 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 127 to fit into the filter.\n    // This means that after 128, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var /** @type {?} */ bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var /** @type {?} */ mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127]\n    if (bloomBit < 64) {\n        if (bloomBit < 32) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            injector.bf0 |= mask;\n        }\n        else {\n            injector.bf1 |= mask;\n        }\n    }\n    else {\n        if (bloomBit < 96) {\n            injector.bf2 |= mask;\n        }\n        else {\n            injector.bf3 |= mask;\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(/** @type {?} */ (getPreviousOrParentNode()));\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param {?} node for which an injector should be retrieved / created.\n * @return {?} Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var /** @type {?} */ nodeInjector = node.nodeInjector;\n    var /** @type {?} */ parentInjector = node.parent && node.parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return /** @type {?} */ ((nodeInjector));\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        injector: null,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null\n    };\n}\n/**\n * Constructs an injection error with the given text and token.\n *\n * @param {?} text The text of the error\n * @param {?} token The token associated with the error\n * @return {?} The error that was created\n */\nfunction createInjectionError(text$$1, token) {\n    return new Error(\"ElementInjector: \" + text$$1 + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} di The node injector in which a directive will be added\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(inject(DirectiveA))\n *   });\n * }\n *\n * @template T\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @param {?=} defaultValue\n * @return {?} The instance found\n */\nfunction inject$1(token, flags, defaultValue) {\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags, defaultValue);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @template T\n * @param {?} di Node injector where the search should start\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @param {?=} defaultValue\n * @return {?} The instance found\n */\nfunction getOrCreateInjectable(di, token, flags, defaultValue) {\n    var /** @type {?} */ bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var /** @type {?} */ moduleInjector = di.injector;\n        if (!moduleInjector) {\n            if (defaultValue != null) {\n                return defaultValue;\n            }\n            throw createInjectionError('NotFound', token);\n        }\n        moduleInjector.get(token);\n    }\n    else {\n        var /** @type {?} */ injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var /** @type {?} */ node = injector.node;\n            // The size of the node's directive's list is stored in certain bits of the node's flags,\n            // so exact it with a mask and shift it back such that the bits reflect the real value.\n            var /** @type {?} */ flags_1 = node.flags;\n            var /** @type {?} */ size = (flags_1 & 4092 /* SIZE_MASK */) >> 2;\n            if (size !== 0) {\n                // The start index of the directives list is also part of the node's flags, but there is\n                // nothing to the \"left\" of it so it doesn't need a mask.\n                var /** @type {?} */ start = flags_1 >> 12;\n                var /** @type {?} */ tData = node.view.tView.data;\n                for (var /** @type {?} */ i = start, /** @type {?} */ ii = start + size; i < ii; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var /** @type {?} */ directiveDef = /** @type {?} */ (tData[i]);\n                    if (directiveDef.diPublic && directiveDef.type == token) {\n                        return getDirectiveInstance(node.view.data[i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token from the candidate injector, we had a false\n            // positive. Traverse up the tree and continue.\n            injector = injector.parent;\n        }\n    }\n    // No directive was found for the given token.\n    // TODO: implement optional, check-self, and check-parent.\n    throw createInjectionError('Not found', token);\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param {?} type The directive type\n * @return {?} The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var /** @type {?} */ id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param {?} startInjector\n * @param {?} bloomBit The bit to check in each injector's bloom filter\n * @return {?} An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var /** @type {?} */ mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var /** @type {?} */ injector = startInjector;\n    while (injector) {\n        // Our bloom filter size is 128 bits, which is four 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127]\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var /** @type {?} */ value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n            (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf3). These filters capture *all* ancestor injectors.\n        value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n            (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param {?} di The node injector where we should store a created ElementRef\n * @return {?} The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef ||\n        (di.elementRef = new ElementRef$1(((di.node.flags & 3 /* TYPE_MASK */) === 0 /* Container */) ? null :\n            di.node.native));\n}\nvar QUERY_READ_TEMPLATE_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateTemplateRef(injector); }))));\nvar QUERY_READ_CONTAINER_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateContainerRef(injector); }))));\nvar QUERY_READ_ELEMENT_REF = /** @type {?} */ ((/** @type {?} */ (new ReadFromInjectorFn(function (injector) { return getOrCreateElementRef(injector); }))));\nvar QUERY_READ_FROM_NODE = (/** @type {?} */ ((new ReadFromInjectorFn(function (injector, node, directiveIdx) {\n    ngDevMode && assertNodeOfPossibleTypes(node, 0 /* Container */, 3 /* Element */);\n    if (directiveIdx > -1) {\n        return node.view.data[directiveIdx];\n    }\n    else if ((node.flags & 3 /* TYPE_MASK */) === 3 /* Element */) {\n        return getOrCreateElementRef(injector);\n    }\n    else if ((node.flags & 3 /* TYPE_MASK */) === 0 /* Container */) {\n        return getOrCreateTemplateRef(injector);\n    }\n    throw new Error('fail');\n}))));\n/**\n * A ref to a node's native element.\n */\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} di\n * @return {?} The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    return di.viewContainerRef ||\n        (di.viewContainerRef = new ViewContainerRef$1(/** @type {?} */ (di.node)));\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef(_node) {\n        this._node = _node;\n    }\n    /**\n     * @return {?}\n     */\n    ViewContainerRef.prototype.clear = /**\n     * @return {?}\n     */\n    function () { throw notImplemented(); };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) { throw notImplemented(); };\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(/** @type {?} */ ((context)));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ViewContainerRef.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (index == null) {\n            index = this._node.data.views.length;\n        }\n        else {\n            // +1 because it's legal to insert at the end.\n            ngDevMode && assertLessThan(index, this._node.data.views.length + 1, 'index');\n        }\n        var /** @type {?} */ lView = (/** @type {?} */ (viewRef))._lViewNode;\n        insertView(this._node, lView, index);\n        // If the view is dynamic (has a template), it needs to be counted both at the container\n        // level and at the node above the container.\n        if (lView.data.template !== null) {\n            // Increment the container view count.\n            this._node.data.dynamicViewCount++;\n            // Look for the parent node and increment its dynamic view count.\n            if (this._node.parent !== null && this._node.parent.data !== null) {\n                ngDevMode &&\n                    assertNodeOfPossibleTypes(this._node.parent, 2 /* View */, 3 /* Element */);\n                this._node.parent.data.dynamicViewCount++;\n            }\n        }\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        throw notImplemented();\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) { throw notImplemented(); };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) { throw notImplemented(); };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) { throw notImplemented(); };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @param {?} di The node injector where we should store a created TemplateRef\n * @return {?} The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    ngDevMode && assertNodeType(di.node, 0 /* Container */);\n    var /** @type {?} */ data = (/** @type {?} */ (di.node)).data;\n    return di.templateRef || (di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), /** @type {?} */ ((data.template)), getRenderer()));\n}\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef(elementRef, template, _renderer) {\n        this._renderer = _renderer;\n        this.elementRef = elementRef;\n        this._template = template;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        var /** @type {?} */ viewNode = renderEmbeddedTemplate(null, this._template, context, this._renderer);\n        return new EmbeddedViewRef$2(viewNode, this._template, context);\n    };\n    return TemplateRef;\n}());\nvar EmbeddedViewRef$2 = /** @class */ (function () {\n    function EmbeddedViewRef(viewNode, template, context) {\n        this._lViewNode = viewNode;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.detach = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    /**\n     * @return {?}\n     */\n    EmbeddedViewRef.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { notImplemented(); };\n    return EmbeddedViewRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} componentDefinition\n * @return {?}\n */\nfunction defineComponent(componentDefinition) {\n    var /** @type {?} */ type = componentDefinition.type;\n    var /** @type {?} */ def = /** @type {?} */ ({\n        type: type,\n        diPublic: null,\n        n: componentDefinition.factory,\n        tag: (/** @type {?} */ (componentDefinition)).tag || /** @type {?} */ ((null)),\n        template: (/** @type {?} */ (componentDefinition)).template || /** @type {?} */ ((null)),\n        h: componentDefinition.hostBindings || noop$1,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        methods: invertObject(componentDefinition.methods),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null\n    });\n    var /** @type {?} */ feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * @param {?} definition\n * @return {?}\n */\nfunction NgOnChangesFeature(definition) {\n    var /** @type {?} */ inputs = definition.inputs;\n    var /** @type {?} */ proto = definition.type.prototype;\n    // Place where we will store SimpleChanges if there is a change\n    Object.defineProperty(proto, PRIVATE_PREFIX, { value: undefined, writable: true });\n    var _loop_1 = function (pubKey) {\n        var /** @type {?} */ minKey = inputs[pubKey];\n        var /** @type {?} */ privateMinKey = PRIVATE_PREFIX + minKey;\n        // Create a place where the actual value will be stored and make it non-enumerable\n        Object.defineProperty(proto, privateMinKey, { value: undefined, writable: true });\n        var /** @type {?} */ existingDesc = Object.getOwnPropertyDescriptor(proto, minKey);\n        // create a getter and setter for property\n        Object.defineProperty(proto, minKey, {\n            get: function () {\n                return (existingDesc && existingDesc.get) ? existingDesc.get.call(this) :\n                    this[privateMinKey];\n            },\n            set: function (value) {\n                var /** @type {?} */ simpleChanges = this[PRIVATE_PREFIX];\n                var /** @type {?} */ isFirstChange = simpleChanges === undefined;\n                if (simpleChanges == null) {\n                    simpleChanges = this[PRIVATE_PREFIX] = {};\n                }\n                simpleChanges[pubKey] = new SimpleChange(this[privateMinKey], value, isFirstChange);\n                (existingDesc && existingDesc.set) ? existingDesc.set.call(this, value) :\n                    this[privateMinKey] = value;\n            }\n        });\n    };\n    for (var /** @type {?} */ pubKey in inputs) {\n        _loop_1(pubKey);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n    /**\n     * @param {?} delegateHook\n     * @return {?}\n     */\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var /** @type {?} */ simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\n/**\n * @template T\n * @param {?} definition\n * @return {?}\n */\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/**\n * @return {?}\n */\nfunction noop$1() { }\n/**\n * Swaps the keys and values of an object.\n * @param {?} obj\n * @return {?}\n */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var /** @type {?} */ newObj = {};\n    for (var /** @type {?} */ minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = /** @type {?} */ (defineComponent);\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} __0\n * @return {?}\n */\nfunction definePipe(_a) {\n    var type = _a.type, factory = _a.factory, pure = _a.pure;\n    throw new Error('TODO: implement!');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @template T\n * @param {?} index Pipe index where the pipe will be stored.\n * @param {?} pipeDef Pipe definition object for registering life cycle hooks.\n * @param {?} pipe A Pipe instance.\n * @return {?}\n */\nfunction pipe(index, pipeDef, pipe) {\n    throw new Error('TODO: implement!');\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind1(index, v1) {\n    throw new Error('TODO: implement!');\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind2(index, v1, v2) {\n    throw new Error('TODO: implement!');\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 4rd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind3(index, v1, v2, v3) {\n    throw new Error('TODO: implement!');\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 3rd argument to {\\@link PipeTransform#transform}.\n * @param {?} v4 4th argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind4(index, v1, v2, v3, v4) {\n    throw new Error('TODO: implement!');\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} values Array of arguments to pass to {\\@link PipeTransform#transform} method.\n * @return {?}\n */\nfunction pipeBindV(index, values) {\n    throw new Error('TODO: implement!');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * `DirectiveDef` is a compiled version of the Directive used by the renderer instructions.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n *\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used for tracking queries (e.g. ViewChild, ContentChild).\n * @record\n */\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n * @record\n */\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n * @record\n */\n\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    LQueries_.prototype.track = /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.child = /**\n     * @return {?}\n     */\n    function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LQueries_.prototype.container = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = null;\n        var /** @type {?} */ query = this.deep;\n        while (query) {\n            var /** @type {?} */ containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var /** @type {?} */ clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: containerValues };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    LQueries_.prototype.enterView = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ result = null;\n        var /** @type {?} */ query = this.deep;\n        while (query) {\n            var /** @type {?} */ viewValues = []; // prepare room for view nodes\n            query.values.splice(index, 0, viewValues);\n            var /** @type {?} */ clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: viewValues };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    LQueries_.prototype.addNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    LQueries_.prototype.removeView = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ query = this.deep;\n        while (query) {\n            var /** @type {?} */ removed = query.values.splice(index, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} tNode static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var /** @type {?} */ localNames = tNode.localNames;\n    if (localNames) {\n        for (var /** @type {?} */ i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param {?} node Node on which directives are present.\n * @param {?} type Type of a directive to look for.\n * @return {?} Index of a found directive or null when none found.\n */\nfunction geIdxOfMatchingDirective(node, type) {\n    var /** @type {?} */ tData = node.view.tView.data;\n    var /** @type {?} */ flags = node.flags;\n    for (var /** @type {?} */ i = flags >> 12 /* INDX_SHIFT */, /** @type {?} */\n    ii = i + ((flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */); i < ii; i++) {\n        var /** @type {?} */ def = /** @type {?} */ (tData[i]);\n        if (def.diPublic && def.type === type) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @param {?} read\n * @param {?} directiveIdx\n * @return {?}\n */\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var /** @type {?} */ matchingIdx = geIdxOfMatchingDirective(node, /** @type {?} */ (read));\n        if (matchingIdx !== null) {\n            return node.view.data[matchingIdx];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} query\n * @param {?} node\n * @return {?}\n */\nfunction add(query, node) {\n    var /** @type {?} */ nodeInjector = getOrCreateNodeInjectorForNode(/** @type {?} */ (node));\n    while (query) {\n        var /** @type {?} */ predicate = query.predicate;\n        var /** @type {?} */ type = predicate.type;\n        if (type) {\n            var /** @type {?} */ directiveIdx = geIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var /** @type {?} */ result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var /** @type {?} */ selector = /** @type {?} */ ((predicate.selector));\n            for (var /** @type {?} */ i = 0; i < selector.length; i++) {\n                ngDevMode && assertNotNull(node.tNode, 'node.tNode');\n                var /** @type {?} */ directiveIdx = getIdxOfMatchingSelector(/** @type {?} */ ((node.tNode)), selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertNotNull(predicate.read, 'predicate.read');\n                    var /** @type {?} */ result = readFromNodeInjector(nodeInjector, node, /** @type {?} */ ((predicate.read)), directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @param {?} matchingValue\n * @return {?}\n */\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(predicate, read) {\n    var /** @type {?} */ isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read\n    };\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: (/** @type {?} */ ((queryList)))._valuesTree\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /**\n         * \\@internal\n         */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList_.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._values.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._values.slice(0); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._values))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._values.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList_.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._values = flatten$1(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.setDirty = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList$1 = /** @type {?} */ (QueryList_);\n/**\n * Creates and returns a QueryList.\n *\n * @template T\n * @param {?} memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param {?} predicate The type for which the query will search\n * @param {?=} descend Whether or not to descend into children\n * @param {?=} read What to save in the query\n * @return {?} QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var /** @type {?} */ queryList = new QueryList$1();\n    var /** @type {?} */ queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    if (memoryIndex != null) {\n        memory(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n * @param {?} queryList\n * @return {?}\n */\nfunction queryRefresh(queryList) {\n    var /** @type {?} */ queryListImpl = (/** @type {?} */ ((queryList)));\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the object or array has changed, returns a copy with the updated expression.\n * Or if the expression hasn't changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn Function that returns an updated instance of the object/array\n * @param {?} exp Updated expression value\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral1(factoryFn, exp) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestValue = exp === NO_CHANGE ? peekBinding() : exp;\n    if (bind(exp) !== NO_CHANGE)\n        different = true;\n    return different ? factoryFn(latestValue) : NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral2(factoryFn, exp1, exp2) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    return different ? factoryFn(latestVal1, latestVal2) : NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral3(factoryFn, exp1, exp2, exp3) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal3 = exp3 === NO_CHANGE ? peekBinding() : exp3;\n    if (bind(exp3) !== NO_CHANGE)\n        different = true;\n    return different ? factoryFn(latestVal1, latestVal2, latestVal3) : NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral4(factoryFn, exp1, exp2, exp3, exp4) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal3 = exp3 === NO_CHANGE ? peekBinding() : exp3;\n    if (bind(exp3) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal4 = exp4 === NO_CHANGE ? peekBinding() : exp4;\n    if (bind(exp4) !== NO_CHANGE)\n        different = true;\n    return different ? factoryFn(latestVal1, latestVal2, latestVal3, latestVal4) : NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral5(factoryFn, exp1, exp2, exp3, exp4, exp5) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal3 = exp3 === NO_CHANGE ? peekBinding() : exp3;\n    if (bind(exp3) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal4 = exp4 === NO_CHANGE ? peekBinding() : exp4;\n    if (bind(exp4) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal5 = exp5 === NO_CHANGE ? peekBinding() : exp5;\n    if (bind(exp5) !== NO_CHANGE)\n        different = true;\n    return different ? factoryFn(latestVal1, latestVal2, latestVal3, latestVal4, latestVal5) :\n        NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral6(factoryFn, exp1, exp2, exp3, exp4, exp5, exp6) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal3 = exp3 === NO_CHANGE ? peekBinding() : exp3;\n    if (bind(exp3) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal4 = exp4 === NO_CHANGE ? peekBinding() : exp4;\n    if (bind(exp4) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal5 = exp5 === NO_CHANGE ? peekBinding() : exp5;\n    if (bind(exp5) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal6 = exp6 === NO_CHANGE ? peekBinding() : exp6;\n    if (bind(exp6) !== NO_CHANGE)\n        different = true;\n    return different ?\n        factoryFn(latestVal1, latestVal2, latestVal3, latestVal4, latestVal5, latestVal6) :\n        NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral7(factoryFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal3 = exp3 === NO_CHANGE ? peekBinding() : exp3;\n    if (bind(exp3) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal4 = exp4 === NO_CHANGE ? peekBinding() : exp4;\n    if (bind(exp4) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal5 = exp5 === NO_CHANGE ? peekBinding() : exp5;\n    if (bind(exp5) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal6 = exp6 === NO_CHANGE ? peekBinding() : exp6;\n    if (bind(exp6) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal7 = exp7 === NO_CHANGE ? peekBinding() : exp7;\n    if (bind(exp7) !== NO_CHANGE)\n        different = true;\n    return different ?\n        factoryFn(latestVal1, latestVal2, latestVal3, latestVal4, latestVal5, latestVal6, latestVal7) :\n        NO_CHANGE;\n}\n/**\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?} exp8\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteral8(factoryFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) {\n    var /** @type {?} */ different = false;\n    var /** @type {?} */ latestVal1 = exp1 === NO_CHANGE ? peekBinding() : exp1;\n    if (bind(exp1) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal2 = exp2 === NO_CHANGE ? peekBinding() : exp2;\n    if (bind(exp2) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal3 = exp3 === NO_CHANGE ? peekBinding() : exp3;\n    if (bind(exp3) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal4 = exp4 === NO_CHANGE ? peekBinding() : exp4;\n    if (bind(exp4) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal5 = exp5 === NO_CHANGE ? peekBinding() : exp5;\n    if (bind(exp5) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal6 = exp6 === NO_CHANGE ? peekBinding() : exp6;\n    if (bind(exp6) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal7 = exp7 === NO_CHANGE ? peekBinding() : exp7;\n    if (bind(exp7) !== NO_CHANGE)\n        different = true;\n    var /** @type {?} */ latestVal8 = exp8 === NO_CHANGE ? peekBinding() : exp8;\n    if (bind(exp8) !== NO_CHANGE)\n        different = true;\n    return different ? factoryFn(latestVal1, latestVal2, latestVal3, latestVal4, latestVal5, latestVal6, latestVal7, latestVal8) :\n        NO_CHANGE;\n}\n/**\n * objectLiteral instruction that can support any number of bindings.\n *\n * If the object or array has changed, returns a copy with all updated expressions.\n * Or if no expressions have changed, returns NO_CHANGE.\n *\n * @param {?} factoryFn A factory function that takes binding values and builds an object or array\n * containing those values.\n * @param {?} exps\n * @return {?} A copy of the object/array or NO_CHANGE\n */\nfunction objectLiteralV(factoryFn, exps) {\n    var /** @type {?} */ different = false;\n    for (var /** @type {?} */ i = 0; i < exps.length; i++) {\n        var /** @type {?} */ exp = exps[i];\n        if (exp === NO_CHANGE)\n            exps[i] = peekBinding();\n        if (bind(exp) !== NO_CHANGE)\n            different = true;\n    }\n    return different ? factoryFn(exps) : NO_CHANGE;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// clang-format on\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disabled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\" *ngFor=\"let banner of banners\"> {{ banner }} </div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ]))\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.defineInjectable = defineInjectable;\nexports.Injectable = Injectable;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearOverrides = clearOverrides;\nexports.ɵoverrideComponentView = overrideComponentView;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵdefineComponent = defineComponent;\nexports.ɵdefineDirective = defineDirective;\nexports.ɵdefinePipe = definePipe;\nexports.ɵdetectChanges = detectChanges;\nexports.ɵrenderComponent = renderComponent;\nexports.ɵinject = inject$1;\nexports.ɵinjectTemplateRef = injectTemplateRef;\nexports.ɵinjectViewContainerRef = injectViewContainerRef;\nexports.ɵPublicFeature = PublicFeature;\nexports.ɵNgOnChangesFeature = NgOnChangesFeature;\nexports.ɵC = container;\nexports.ɵE = elementStart;\nexports.ɵL = listener;\nexports.ɵT = text;\nexports.ɵV = embeddedViewStart;\nexports.ɵQ = query;\nexports.ɵP = projection;\nexports.ɵb = bind;\nexports.ɵb1 = bind1;\nexports.ɵb2 = bind2;\nexports.ɵb3 = bind3;\nexports.ɵb4 = bind4;\nexports.ɵb5 = bind5;\nexports.ɵb6 = bind6;\nexports.ɵb7 = bind7;\nexports.ɵb8 = bind8;\nexports.ɵbV = bindV;\nexports.ɵpb1 = pipeBind1;\nexports.ɵpb2 = pipeBind2;\nexports.ɵpb3 = pipeBind3;\nexports.ɵpb4 = pipeBind4;\nexports.ɵpbV = pipeBindV;\nexports.ɵo1 = objectLiteral1;\nexports.ɵo2 = objectLiteral2;\nexports.ɵo3 = objectLiteral3;\nexports.ɵo4 = objectLiteral4;\nexports.ɵo5 = objectLiteral5;\nexports.ɵo6 = objectLiteral6;\nexports.ɵo7 = objectLiteral7;\nexports.ɵo8 = objectLiteral8;\nexports.ɵoV = objectLiteralV;\nexports.ɵcR = containerRefreshStart;\nexports.ɵcr = containerRefreshEnd;\nexports.ɵqR = queryRefresh;\nexports.ɵe = elementEnd;\nexports.ɵp = elementProperty;\nexports.ɵpD = projectionDef;\nexports.ɵs = elementStyle;\nexports.ɵt = textBinding;\nexports.ɵv = embeddedViewEnd;\nexports.ɵr = componentRefresh;\nexports.ɵm = memory;\nexports.ɵPp = pipe;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY$1;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵbk = animate$1;\nexports.ɵbl = group$1;\nexports.ɵbp = keyframes$1;\nexports.ɵbm = sequence$1;\nexports.ɵbo = state$1;\nexports.ɵbn = style$1;\nexports.ɵbq = transition$1;\nexports.ɵbj = trigger$1;\nexports.ɵn = _iterableDiffersFactory;\nexports.ɵo = _keyValueDiffersFactory;\nexports.ɵq = _localeFactory;\nexports.ɵh = _appIdRandomProviderFactory;\nexports.ɵi = defaultIterableDiffers;\nexports.ɵj = defaultKeyValueDiffers;\nexports.ɵk = DefaultIterableDifferFactory;\nexports.ɵl = DefaultKeyValueDifferFactory;\nexports.ɵd = ReflectiveInjector_;\nexports.ɵf = ReflectiveDependency;\nexports.ɵg = resolveReflectiveProviders;\nexports.ɵu = wtfEnabled;\nexports.ɵx = createScope;\nexports.ɵw = detectWTF;\nexports.ɵba = endTimeRange;\nexports.ɵy = leave;\nexports.ɵz = startTimeRange;\nexports.ɵbf = getOrCreateContainerRef;\nexports.ɵbe = getOrCreateInjectable;\nexports.ɵbd = getOrCreateNodeInjector;\nexports.ɵbg = getOrCreateTemplateRef;\nexports.ɵbh = stringify$1;\nexports.ɵa = makeParamDecorator;\nexports.ɵc = makePropDecorator;\nexports.ɵbb = _def;\nexports.ɵbc = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}