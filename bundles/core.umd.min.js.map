{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","RendererStyleFlags3","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","getConfig","hasConfig","allowDirectStyling","hostBindingsMode","allow","config","contextIsLocked","getLockedConfig","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","bindingIndex","getValue","isContextLocked","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","isHostStylingActive","directiveOrSourceId","stylingMapToString","isClassBased","str","prop","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","bindingValue","totalSources","addNewSourceColumn","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","lockAndFinalizeContext","updateInitialStylingOnContext","initialStyling","hasInitialStyling","lockContext","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","applyStylingValue","applyFn","valueToApply","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","_mapValues","mockElement","mapFn","hasMapBindings","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","templateBindingsLocked","hostBindingsLocked","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","inputsToStore","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","constsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","isHostStyling","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","foundChar","applyStylingMapDirectly","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","hasDirectives","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","propertyName","splitByComma","piece","static","compilePipe","ngPipeDef","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","createProxy","handler","g","Proxy","contains","toggle","ownKeys","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_PIPE_DEF","ɵNG_MOD_DEF","ɵNG_BASE_DEF","ɵNG_PROV_DEF","ɵNG_INJ_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.13+31.sha-0d9be22.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        var def = (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ɵprov's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[BINDING_INDEX] = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);\n        return instructionState.lFrame.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        var config = 0 /* Initial */;\n        if (hasDirectives) {\n            config |= 1 /* HasDirectives */;\n        }\n        if (initialStyling.length > 1 /* ValuesStartPosition */) {\n            config |= 16 /* HasInitialStyling */;\n        }\n        return [\n            config,\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function hasConfig(context, flag) {\n        return (getConfig(context) & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND ngDevMode is falsy\n     * 2. context is locked for template or host bindings (depending on `hostBindingsMode`)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(context, hostBindingsMode) {\n        var allow = false;\n        var config = getConfig(context);\n        var contextIsLocked = (config & getLockedConfig(hostBindingsMode)) !== 0;\n        var hasNoDirectives = (config & 1 /* HasDirectives */) === 0;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        if (hasNoDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? contextIsLocked : true;\n        }\n        else if (contextIsLocked) {\n            var hasNoCollisions = (config & 8 /* HasCollisions */) === 0;\n            var hasOnlyMapsOrOnlyProps = (config & 6 /* HasPropAndMapBindings */) !== 6 /* HasPropAndMapBindings */;\n            allow = hasNoCollisions && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function patchConfig(context, flag) {\n        context[0 /* ConfigPosition */] |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[1 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function lockContext(context, hostBindingsMode) {\n        patchConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function isContextLocked(context, hostBindingsMode) {\n        return hasConfig(context, getLockedConfig(hostBindingsMode));\n    }\n    function getLockedConfig(hostBindingsMode) {\n        return hostBindingsMode ? 256 /* HostBindingsLocked */ :\n            128 /* TemplateBindingsLocked */;\n    }\n    function getPropValuesStartPosition(context) {\n        var startPosition = 3 /* ValuesStartPosition */;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[2 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 3 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lView, index, tNode) {\n        var value = lView[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding before it gets locked.\n        if (!isContextLocked(context, hostBindingsMode) || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding before it gets locked.\n        if (!isContextLocked(context, hostBindingsMode) || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        if (!isContextLocked(context, hostBindingsMode)) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tNode.firstTemplatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired);\n            patchConfig(context, hostBindingsMode ? 64 /* HasHostBindings */ : 32 /* HasTemplateBindings */);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = (getConfig(context) & 64 /* HasHostBindings */) &&\n                !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, data, prop);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, data, prop) {\n        var valuesCount = getValuesCount(context);\n        if (prop !== null && hasConfig(context, 2 /* HasPropBindings */)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 3 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            var bindingsStart = 3 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, countId, sourceIndex, prop, bindingValue, sanitizationRequired) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 3 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(context, 8 /* HasCollisions */);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 3 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[1 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            if (!isContextLocked(stylesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(stylesContext, hostBindingsMode);\n            }\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode);\n            }\n        }\n        if (classesContext) {\n            if (!isContextLocked(classesContext, hostBindingsMode)) {\n                lockAndFinalizeContext(classesContext, hostBindingsMode);\n            }\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     *\n     * Note that the `TStylingContext` styling context contains two locks: one for template bindings\n     * and another for host bindings. Either one of these locks will be set when styling is applied\n     * during the template binding flush and/or during the host bindings flush.\n     */\n    function lockAndFinalizeContext(context, hostBindingsMode) {\n        var initialValues = getStylingMapArray(context);\n        updateInitialStylingOnContext(context, initialValues);\n        lockContext(context, hostBindingsMode);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, COUNT_ID_FOR_STYLING, 0, prop, value, false);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(context, 16 /* HasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        if (hasConfig(context, 4 /* HasMapBindings */)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 3 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, element, data, bindingIndex, map, isClassBased, applyFn, sanitizer, forceUpdate) {\n        if (forceUpdate || hasValueChanged(data[bindingIndex], map)) {\n            setValue(data, bindingIndex, map);\n            var initialStyles = hasConfig(context, 16 /* HasInitialStyling */) ? getStylingMapArray(context) : null;\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                // case 1: apply the map value (if it exists)\n                var applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n                // case 2: apply the initial value (if it exists)\n                if (!applied && initialStyles) {\n                    applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                }\n                // default case: apply `null` to remove the value\n                if (!applied) {\n                    applyFn(renderer, element, prop, null, bindingIndex);\n                }\n            }\n            var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n            if (isClassBased) {\n                state.lastDirectClassMap = map;\n            }\n            else {\n                state.lastDirectStyleMap = map;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, element, data, bindingIndex, prop, value, isClassBased, applyFn, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            if (!applied && hasConfig(context, 4 /* HasMapBindings */)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(context, 16 /* HasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 3 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, isClassBased) {\n        var debug = new TStylingContextDebug(context, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _isClassBased) {\n            this.context = context;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 3 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 3 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this.context.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = hasConfig(this.context.context, 4 /* HasMapBindings */);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, false);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, null, mockElement, this._data, true, mapFn, sanitizer, true);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(context) {\n        var hasMapBindings = hasConfig(context, 4 /* HasMapBindings */);\n        var hasPropBindings = hasConfig(context, 2 /* HasPropBindings */);\n        var hasCollisions = hasConfig(context, 8 /* HasCollisions */);\n        var hasTemplateBindings = hasConfig(context, 32 /* HasTemplateBindings */);\n        var hasHostBindings = hasConfig(context, 64 /* HasHostBindings */);\n        var templateBindingsLocked = hasConfig(context, 128 /* TemplateBindingsLocked */);\n        var hostBindingsLocked = hasConfig(context, 256 /* HostBindingsLocked */);\n        var allowDirectStyling$1 = allowDirectStyling(context, false) || allowDirectStyling(context, true);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            templateBindingsLocked: templateBindingsLocked,\n            hostBindingsLocked: hostBindingsLocked,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = NG_DEV_MODE && createNamedArrayType('LView') || null;\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 64 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 256 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 128 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        enterView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        if ((tNode.flags & 256 /* hasHostBindings */) === 256 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TAttributes[]\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives !== null) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 256 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i - start);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.initialInputs !== null) {\n            setInputsFromAttrs(lView, directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentLViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 128 /* isDetached */) !== 128 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        ngFactoryDef =\n                            getCompilerFacade().compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                                name: metadata.name,\n                                type: metadata.type,\n                                typeArgumentCount: metadata.typeArgumentCount,\n                                deps: reflectDependencies(type),\n                                injectFn: 'inject',\n                                isPipe: false\n                            });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param constsIndex Index of template in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, constsIndex, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex]);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = stylingProp(getSelectedIndex(), bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(elementIndex, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var hostBindingsMode = isHostStyling();\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 2 /* HasPropBindings */);\n        }\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, native, lView, bindingIndex, prop, value, isClassBased, isClassBased ? setClass : setStyle, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value);\n            }\n            else {\n                updated = updateStyleViaContext(context, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = stylingMap(index, context, bindingIndex, styles, false);\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!isHostStyling() && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = stylingMap(elementIndex, context, bindingIndex, classes, true);\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(elementIndex, context, bindingIndex, value, isClassBased) {\n        var updated = false;\n        var lView = getLView();\n        var directiveIndex = getActiveDirectiveId();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var hostBindingsMode = isHostStyling();\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (!isContextLocked(context, hostBindingsMode)) {\n            patchConfig(context, 4 /* HasMapBindings */);\n        }\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(context, hostBindingsMode)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingMapDirectly(renderer, context, native, lView, bindingIndex, stylingMapArr, isClassBased, isClassBased ? setClass : setStyle, sanitizerToUse, valueHasChanged);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            updated = valueHasChanged;\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged);\n            }\n            else {\n                updateStyleViaContext(context, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context, false)) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, classesContext, stylesContext, native, directiveIndex, sanitizer);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 64 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, consts);\n        if (consts != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, consts);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, consts, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 64 /* hasInitialStyling */) === 64 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param constsIndex Index of the element in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, constsIndex, localRefs) {\n        ɵɵelementStart(index, name, constsIndex, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, constsIndex, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var consts = tViewConsts === null || constsIndex == null ? null : tViewConsts[constsIndex];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, consts);\n        if (consts && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, consts, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param constsIndex Index of the container in the `consts` array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, constsIndex, localRefs) {\n        ɵɵelementContainerStart(index, constsIndex, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, tNode, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, tNode, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, tNode, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.13+31.sha-0d9be22.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, lView, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 128 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error_1.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', isPipe: false }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', isPipe: true }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_be = getLView;\n    exports.ɵangular_packages_core_core_bf = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bd = instructionState;\n    exports.ɵangular_packages_core_core_bg = nextContextImpl;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bi = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bj = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bk = makePropDecorator;\n    exports.ɵangular_packages_core_core_bl = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode$1;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}