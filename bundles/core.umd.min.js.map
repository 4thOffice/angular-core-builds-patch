{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","lContainer","ngContainerChild","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","NG_HOST_SYMBOL","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","previousOrParentNode","isParent","currentQueries","currentElementNode","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","host","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","hostVars","executeInitAndContentHooks","createLViewData","instance","blueprint","createLNodeObject","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","adjustBlueprintForNewNode","resetApplicationState","rf","_isParent","_previousOrParentNode","template","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","lNode","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","isContentQueryHost","clone","tDirectives","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","consts","vars","pipes","viewQuery","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","styles","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","reserveSlots","numSlots","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootContext","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","encapsulation","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ngOnDestroy","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getClosureSafeProperty$1","fillProperties","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","ngBaseDef","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ViewRef","_view","_appRef","_viewContainerRef","_lViewNode","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","componentDef","isInternalRootView","wrapper","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","clear","createEmbeddedView","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","move","newIndex","shift","TemplateRef$1","getFactoryOf","ngInjectorDef","getInheritedFactory","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","previousNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","ÉµreserveSlots","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","wrapReference","isNgModule","directiveMetadata","metadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","GET_PROPERTY_NAME$1","noop","R3_COMPILE_COMPONENT$1","R3_COMPILE_DIRECTIVE$1","R3_COMPILE_PIPE$1","GET_PROPERTY_NAME$2","USE_VALUE$2","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Directive","Component","Default","Pipe","NG_BASE_DEF","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","preR3NgModuleCompile","R3_COMPILE_NGMODULE$1","Version","VERSION","full","major","minor","patch","Injectable","preR3InjectableCompile","injectableType","R3_COMPILE_INJECTABLE$1","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_x","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_y","Éµangular_packages_core_core_v","Éµangular_packages_core_core_w","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_bf","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","Éµi18nApply","i18nApply","instructions","localParentNode","localPreviousNode","instruction","textRNode","removedNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","compileNgModuleDefs","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","ÉµpatchComponentDefWithScope","ÉµcompileComponent","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","scopes","transitiveScopesFor","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","ÉµcompileDirective","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","ÉµcompilePipe","compilePipe","compilePipeFromMetadata","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.3+24.sha-61218f5\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // NOTE: The order here matters: Checking window, then global, then self is important.\n    //   checking them in another order can result in errors in some Node environments.\n    var __global$1 = typeof window != 'undefined' && window || typeof global != 'undefined' && global ||\n        typeof self != 'undefined' && self;\n    function ngDevModeResetPerfCounters() {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        return __global$1['ngDevMode'] = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for clousre.\n        __global$1['ngDevMode'] = ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reason:\n     * - view is not inserted into any container (view was created but not iserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view this view was inserted into a container and\n     * the container itself has it render parent determined.\n     */\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                while (grandParent.tNode.type === 4 /* ElementContainer */) {\n                    grandParent = getParentLNode(grandParent);\n                }\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        else if (node.tNode.type === 4 /* ElementContainer */) {\n            var ngContainerChild = getChildLNode(node);\n            while (ngContainerChild) {\n                appendProjectedNode(ngContainerChild, currentParent, currentView, renderParent);\n                ngContainerChild = getNextLNode(ngContainerChild);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    var currentElementNode = null;\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var tNode = previousOrParentNode.tNode;\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentNode.data !== viewData && !isContentQueryHost(tNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            tNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 4 /* ElementContainer */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(node, localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(lNode) {\n        return lNode.native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(lNode, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(lNode.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(lNode, localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentNode.tNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentNode.tNode.index - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(tNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(lNode, localRefExtractor) {\n        var localNames = lNode.tNode.localNames;\n        if (localNames) {\n            var localIndex = lNode.tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(lNode) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        ngDevMode && assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */);\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        currentQueries && (currentQueries = currentQueries.addNode(previousOrParentNode));\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var node = containerInternal(index, tagName || null, attrs || null, localRefs || null);\n        if (firstTemplatePass) {\n            node.tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(node, localRefs, localRefExtractor);\n        currentQueries && (currentQueries = currentQueries.addNode(node));\n        queueLifecycleHooks(node.tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var node = containerInternal(index, null, null, null);\n        firstTemplatePass && (node.tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        return node;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    // TODO(kara): Remove this when updating the compiler (cannot remove without breaking JIT test)\n    function reserveSlots(numSlots) { }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            if (componentDef.hostBindings) {\n                queueHostBindingForCheck(0, componentDef.hostVars);\n            }\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(rootView[TVIEW].hostBindings);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation;\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || EMPTY$1,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation == null ? 2 /* ViewEncapsulation.None */ : encapsulation,\n            id: \"c\" + _renderCompCount++,\n            styles: EMPTY_ARRAY,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef);\n                rootContext.components.push(component);\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 15 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer);\n            appendChild(hostParent, comment, vcRefHost.view);\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = typeAny.ngComponentDef || typeAny.ngDirectiveDef || typeAny.ngPipeDef ||\n            typeAny.ngInjectableDef || typeAny.ngInjectorDef;\n        if (def === undefined || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(lNode) {\n        return getOrCreateTemplateRef(getOrCreateNodeInjectorForNode(lNode));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1;\n                    var textLNode = createLNode(lastNodeIndex - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.deep, node);\n            if (isContentQueryHost(node.tNode)) {\n                add(this.shallow, node);\n                if (node.tNode.parent && isContentQueryHost(node.tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, node);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(node.tNode) && add(this.shallow, node);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 15 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'ÉµreserveSlots': reserveSlots,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$1 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: Éµ0$1 }, GET_PROPERTY_NAME$1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() { }\n    var R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n    var R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n    var R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n    var R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n    var R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n    var ivyEnable__PRE_NGCC__ = false;\n    var ivyEnabled$1 = ivyEnable__PRE_NGCC__;\n    var R3_COMPILE_COMPONENT$1 = R3_COMPILE_COMPONENT__PRE_NGCC__;\n    var R3_COMPILE_DIRECTIVE$1 = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n    var R3_COMPILE_INJECTABLE$1 = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n    var R3_COMPILE_NGMODULE$1 = R3_COMPILE_NGMODULE__PRE_NGCC__;\n    var R3_COMPILE_PIPE$1 = R3_COMPILE_PIPE__PRE_NGCC__;\n    ////////////////////////////////////////////////////////////\n    // Glue code which should be removed after Ivy is default //\n    ////////////////////////////////////////////////////////////\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var Éµ0$2 = GET_PROPERTY_NAME$2;\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: Éµ0$2 }, GET_PROPERTY_NAME$2);\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE$1(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT$1(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE$1(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Used to get the minified alias of ngBaseDef\n     */\n    var NG_BASE_DEF = Object.keys({ ngBaseDef: true })[0];\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.3+24.sha-61218f5');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.decorators = [\n            { type: Injectable }\n        ];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.decorators = [\n            { type: Injectable }\n        ];\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone }\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        PlatformRef.ctorParameters = function () { return [\n            { type: Injector }\n        ]; };\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationRef.ctorParameters = function () { return [\n            { type: NgZone },\n            { type: Console },\n            { type: Injector },\n            { type: ErrorHandler },\n            { type: ComponentFactoryResolver },\n            { type: ApplicationInitStatus }\n        ]; };\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return [\n            { type: ApplicationRef }\n        ]; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (directive[NG_HOST_SYMBOL] === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_x = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_ba = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_z = getOrCreateElementRef;\n    exports.Éµangular_packages_core_core_y = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_w = getOrCreateNodeInjectorForNode;\n    exports.Éµangular_packages_core_core_bb = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_bc = bindingUpdated;\n    exports.Éµangular_packages_core_core_bf = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_u = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled$1;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµreserveSlots = reserveSlots;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}