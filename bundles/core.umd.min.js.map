{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","NgModule","ngModule","R3_COMPILE_NGMODULE","preR3NgModuleCompile","moduleType","ngInjectorDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","findNextRNodeSibling","node","stopNode","currentNode","pNextOrParent","nativeNode","findFirstRNode","currentSibling","getNextLNode","parentNode","getParentLNode","parentType","viewData","view","getChildLNode","child","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","nextNode","walkLNodeTree","startingNode","action","renderParentNode","beforeNode","native","parent_1","insertBefore","parent_2","removeChild","destroyNode","childContainerData","dynamicLContainerNode","head","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","splice","lView","containerNextNativeNode","detachView","removeIndex","removedLview","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","appendChild","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","step","attrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$1","getCurrentSanitizer","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicChildren","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","adjustedIndex","tData","previousTNode","dynamicContainerNode","lViewData","_isParent","_previousOrParentNode","rf","createView","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrVal","setAttribute","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","resetApplicationState","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","setProperty","tViews","initialInputs","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyleNamed","styleName","suffixOrSanitizer","removeStyle","DashCase","removeProperty","setStyle","elementStyle","style","styleValue","textNode","createTextNode","createText","textBinding","existingNode","setValue","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","embeddedViewEnd","setRenderParentInProjectedNodes","renderParent","nodeToProject","lastNodeToProject","tail","adjustedElementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","viewRootLNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","component","detectChanges","initBindings","bindingUpdated","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","different","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","loadInternal","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","currValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","styles","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","getRenderer","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","lContainerNode","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","viewRef","insert","createComponent","componentFactory","notImplemented","adjustedIdx","_adjustIndex","move","newIndex","shift","_tView","_renderer","_queries","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","NgOnChangesFeature","inputPropertyNames","definition","proto","_loop_1","pubKey","minKey","propertyName","privateMinKey","originalProperty","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","EMPTY$1","newObj","minifiedKey","defineDirective","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","NgModuleRef","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","bootstrap","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeBind1","pipeInstance","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","pure","NgModuleFactory$$1","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","query","containerValues","clonedQuery","list","viewValuesIdx","setDirty","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","dirty","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","defineNgModule","declarations","transitiveCompileScopes","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","Éµk","Éµkn","ÉµL","Éµld","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµQ","ÉµqR","Éµs","Éµsn","Éµst","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_PIPE_DEF","NG_MODULE_DEF","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","pipe","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","WrappedNodeExpr","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","param","_pendingPromises","directiveMetadata","field","ann","isOutput","bindingPropertyName","listeners","properties","lifecycle","usesOnChanges","typeSourceSpan","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","compileNgModule","emitInline","declaration","ngSelectorScope","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponentDecorator","compileComponent","templateStr","parseTemplate","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","Pipe","Input","Output","HostBinding","hostPropertyName","HostListener","VERSION","full","major","split","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","e_1","_c","e_1_1","return","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","createComment","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","previouslyProjected","ÉµiV","interpolationV","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","ÉµrS","reserveSlots","numSlots","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.0+43.sha-6ea6926\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * ### Example\n     *\n     * #### Tree-shakeable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n            var _a;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     *\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {@link forwardRef}\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * @usageNotes\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * @description\n     *\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n        var _a;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n                var _a;\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * NgModule decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 14;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 13 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the first RNode following the given LNode in the same parent DOM element.\n     *\n     * This is needed in order to insert the given node with insertBefore.\n     *\n     * @param node The node whose following DOM node must be found.\n     * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n     * lookup should not be stopped until the result is found.\n     * @returns RNode before which the provided node should be inserted or null if the lookup was\n     * stopped\n     * or if there is no native node after the given logical node in the same native parent.\n     */\n    function findNextRNodeSibling(node, stopNode) {\n        var currentNode = node;\n        while (currentNode && currentNode !== stopNode) {\n            var pNextOrParent = currentNode.pNextOrParent;\n            if (pNextOrParent) {\n                while (pNextOrParent.tNode.type !== 1 /* Projection */) {\n                    var nativeNode = findFirstRNode(pNextOrParent);\n                    if (nativeNode) {\n                        return nativeNode;\n                    }\n                    pNextOrParent = pNextOrParent.pNextOrParent;\n                }\n                currentNode = pNextOrParent;\n            }\n            else {\n                var currentSibling = getNextLNode(currentNode);\n                while (currentSibling) {\n                    var nativeNode = findFirstRNode(currentSibling);\n                    if (nativeNode) {\n                        return nativeNode;\n                    }\n                    currentSibling = getNextLNode(currentSibling);\n                }\n                var parentNode = getParentLNode(currentNode);\n                currentNode = null;\n                if (parentNode) {\n                    var parentType = parentNode.tNode.type;\n                    if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                        currentNode = parentNode;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return viewData[node.tNode.child.index];\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1)\n            return null;\n        var parent = node.tNode.parent;\n        return parent ? node.view[parent.index] : node.view[HOST_NODE];\n    }\n    /**\n     * Get the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * @param node The node whose next node in the LNode tree must be found.\n     * @return LNode|null The next sibling in the LNode tree.\n     */\n    function getNextLNodeWithProjection(node) {\n        var pNextOrParent = node.pNextOrParent;\n        if (pNextOrParent) {\n            // The node is projected\n            var isLastProjectedNode = pNextOrParent.tNode.type === 1 /* Projection */;\n            // returns pNextOrParent if we are not at the end of the list, null otherwise\n            return isLastProjectedNode ? null : pNextOrParent;\n        }\n        // returns node.next because the the node is not projected\n        return getNextLNode(node);\n    }\n    /**\n     * Find the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * If there is no sibling node, this function goes to the next sibling of the parent node...\n     * until it reaches rootNode (at which point null is returned).\n     *\n     * @param initialNode The node whose following node in the LNode tree must be found.\n     * @param rootNode The root node at which the lookup should stop.\n     * @return LNode|null The following node in the LNode tree.\n     */\n    function getNextOrParentSiblingNode(initialNode, rootNode) {\n        var node = initialNode;\n        var nextNode = getNextLNodeWithProjection(node);\n        while (node && !nextNode) {\n            // if node.pNextOrParent is not null here, it is not the next node\n            // (because, at this point, nextNode is null, so it is the parent)\n            node = node.pNextOrParent || getParentLNode(node);\n            if (node === rootNode) {\n                return null;\n            }\n            nextNode = node && getNextLNodeWithProjection(node);\n        }\n        return nextNode;\n    }\n    /**\n     * Returns the first RNode inside the given LNode.\n     *\n     * @param node The node whose first DOM node must be found\n     * @returns RNode The first RNode of the given LNode or null if there is none.\n     */\n    function findFirstRNode(rootNode) {\n        return walkLNodeTree(rootNode, rootNode, 0 /* Find */) || null;\n    }\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered.\n     * @param action Identifies the action to be performed on the LElement nodes.\n     * @param renderer Optional the current renderer, required for action modes 1, 2 and 3.\n     * @param renderParentNode Optionnal the render parent node to be set in all LContainerNodes found,\n     * required for action modes 1 and 2.\n     * @param beforeNode Optionnal the node before which elements should be added, required for action\n     * modes 1.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        while (node) {\n            var nextNode = null;\n            if (node.tNode.type === 3 /* Element */) {\n                // Execute the action\n                if (action === 0 /* Find */) {\n                    return node.native;\n                }\n                else if (action === 1 /* Insert */) {\n                    var parent_1 = renderParentNode.native;\n                    isProceduralRenderer(renderer) ?\n                        renderer\n                            .insertBefore(parent_1, node.native, beforeNode) :\n                        parent_1.insertBefore(node.native, beforeNode, true);\n                }\n                else if (action === 2 /* Detach */) {\n                    var parent_2 = renderParentNode.native;\n                    isProceduralRenderer(renderer) ?\n                        renderer.removeChild(parent_2, node.native) :\n                        parent_2.removeChild(node.native);\n                }\n                else if (action === 3 /* Destroy */) {\n                    ngDevMode && ngDevMode.rendererDestroyNode++;\n                    renderer.destroyNode(node.native);\n                }\n                nextNode = getNextLNode(node);\n            }\n            else if (node.tNode.type === 0 /* Container */) {\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            }\n            else if (node.tNode.type === 1 /* Projection */) {\n                // For Projection look at the first projected node\n                nextNode = node.data.head;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 1 /* Insert */ : 2 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = viewNode.data;\n        }\n        if (index < views.length) {\n            viewNode.data[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            viewNode.data[NEXT] = null;\n        }\n        // Notify query that a new view has been added\n        var lView = viewNode.data;\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // If the container's renderParent is null, we know that it is a root node of its own parent view\n        // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n        // nodes twice - once now and once when its parent inserts its views).\n        if (container.data[RENDER_PARENT] !== null) {\n            var beforeNode = findNextRNodeSibling(viewNode, container);\n            if (!beforeNode) {\n                var containerNextNativeNode = container.native;\n                if (containerNextNativeNode === undefined) {\n                    containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n                }\n                beforeNode = containerNextNativeNode;\n            }\n            addRemoveViewFromContainer(container, viewNode, true, beforeNode);\n        }\n        // Sets the attached flag\n        viewNode.data[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(container, viewNode, false);\n        // Notify query that view has been removed\n        var removedLview = viewNode.data;\n        if (removedLview[QUERIES]) {\n            removedLview[QUERIES].removeView();\n        }\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 3 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = viewData[cleanup[i + 1]].native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element should be inserted in the given parent.\n     *\n     * The native node can be inserted when its parent is:\n     * - A regular element => Yes\n     * - A component host element =>\n     *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n     *      template)\n     *      => don't add as the parent component will project if needed.\n     *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n     *      add it\n     * - View element => delay insertion, will be done on `viewEnd()`\n     *\n     * @param parent The parent in which to insert the child\n     * @param currentView The LView being processed\n     * @return boolean Whether the child element should be inserted.\n     */\n    function canInsertNativeNode(parent, currentView) {\n        var parentIsElement = parent.tNode.type === 3 /* Element */;\n        return parentIsElement &&\n            (parent.view !== currentView || parent.data === null /* Regular Element. */);\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only add element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView) {\n        if (node.tNode.type !== 0 /* Container */) {\n            appendChild(currentParent, node.native, currentView);\n        }\n        else {\n            // The node we are adding is a Container and we are adding it to Element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assignee the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = currentParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, null);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = currentParent;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SELECT_ONLY */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx ?\n                        '' :\n                        nodeAttrs[attrIndexInNode + 1];\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function findAttrIndexInNode(name, attrs) {\n        var step = 2;\n        if (attrs === null)\n            return -1;\n        for (var i = 0; i < attrs.length; i += step) {\n            var attrName = attrs[i];\n            if (attrName === name)\n                return i;\n            if (attrName === 1 /* SELECT_ONLY */) {\n                step = 1;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries || (currentQueries = new QueryType());\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic children, triggers content hooks, sets host bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     * */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicChildren();\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null // tail\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            pNextOrParent: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode =\n                state[TVIEW].node || createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        var rf = 2 /* Update */;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            if (viewNode == null) {\n                var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n                if (queries) {\n                    lView[QUERIES] = queries.createView();\n                }\n                viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n                rf = 1 /* Create */;\n            }\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs)\n            setUpAttributes(native, attrs);\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        for (var i = 0; i < attrs.length; i += 2) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                var attrVal = attrs[i + 1];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = load(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            ngDevMode && ngDevMode.rendererSetClassName++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    function elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                isProceduralRenderer(renderer) ?\n                    renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].removeProperty(styleName);\n            }\n            else {\n                var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n                if (typeof suffixOrSanitizer == 'string')\n                    strValue = strValue + suffixOrSanitizer;\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].setProperty(styleName, strValue);\n            }\n        }\n    }\n    /**\n     * Set the `style` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage.\n     *\n     *\n     * @param index The index of the element to update in the LViewData array\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is falsy, then the style is removed. An absence\n     *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n     *   performed.\n     */\n    function elementStyle(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            if (isProceduralRenderer(renderer)) {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                renderer.setProperty(lElement.native, 'style', value);\n            }\n            else {\n                var style = lElement.native['style'];\n                for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                    var styleName = keys[i];\n                    var styleValue = value[styleName];\n                    if (styleValue == null) {\n                        ngDevMode && ngDevMode.rendererRemoveStyle++;\n                        style.removeProperty(styleName);\n                    }\n                    else {\n                        ngDevMode && ngDevMode.rendererSetStyle++;\n                        style.setProperty(styleName, styleValue);\n                    }\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = load(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(index, directive, directiveDef) {\n        var instance = baseDirectiveCreate(index, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(index, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        for (var i = 0; i < attrs.length; i += 2) {\n            var attrName = attrs[i];\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (attrName === 1 /* SELECT_ONLY */)\n                break;\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            canInsertNativeNode(parentLNode, currentView) ? parentLNode :\n                null // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var node = createLNode(index, 0 /* Container */, undefined, tagName || null, attrs || null, lContainer);\n        if (firstTemplatePass) {\n            node.tNode.tViews =\n                template ? createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry) : [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = load(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        container.native = undefined;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    function refreshDynamicChildren() {\n        for (var current = getLViewChild(viewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], renderer);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        var viewNode = previousOrParentNode = viewData[HOST_NODE];\n        var containerNode = getParentLNode(previousOrParentNode);\n        if (containerNode) {\n            ngDevMode && assertNodeType(viewNode, 2 /* View */);\n            ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n            var lContainer = containerNode.data;\n            if (creationMode) {\n                // When projected nodes are going to be inserted, the renderParent of the dynamic container\n                // used by the ViewContainerRef must be set.\n                setRenderParentInProjectedNodes(lContainer[RENDER_PARENT], viewNode);\n                // it is a new view, insert it into collection of views for a given container\n                insertView(containerNode, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /**\n     * For nodes which are projected inside an embedded view, this function sets the renderParent\n     * of their dynamic LContainerNode.\n     * @param renderParent the renderParent of the LContainer which contains the embedded view.\n     * @param viewNode the embedded view.\n     */\n    function setRenderParentInProjectedNodes(renderParent, viewNode) {\n        if (renderParent != null) {\n            var node = getChildLNode(viewNode);\n            while (node) {\n                if (node.tNode.type === 1 /* Projection */) {\n                    var nodeToProject = node.data.head;\n                    var lastNodeToProject = node.data.tail;\n                    while (nodeToProject) {\n                        if (nodeToProject.dynamicLContainerNode) {\n                            nodeToProject.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n                        }\n                        nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                    }\n                }\n                node = getNextLNode(node);\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, getDirectiveInstance(directives[directiveIndex]));\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(index, selectors, textSelectors) {\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        var distributedNodes = new Array(noOfNodeBuckets);\n        for (var i = 0; i < noOfNodeBuckets; i++) {\n            distributedNodes[i] = [];\n        }\n        var componentNode = findComponentHost(viewData);\n        var componentChild = getChildLNode(componentNode);\n        while (componentChild !== null) {\n            // execute selector matching logic if and only if:\n            // - there are selectors defined\n            // - a node has a tag name / attributes that can be matched\n            if (selectors && componentChild.tNode) {\n                var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n                distributedNodes[matchedIdx].push(componentChild);\n            }\n            else {\n                distributedNodes[0].push(componentChild);\n            }\n            componentChild = getNextLNode(componentChild);\n        }\n        ngDevMode && assertDataNext(index + HEADER_OFFSET);\n        store(index, distributedNodes);\n    }\n    /**\n     * Updates the linked list of a projection node, by appending another linked list.\n     *\n     * @param projectionNode Projection node whose projected nodes linked list has to be updated\n     * @param appendedFirst First node of the linked list to append.\n     * @param appendedLast Last node of the linked list to append.\n     */\n    function appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n        ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n        if (!appendedLast) {\n            // nothing to append\n            return;\n        }\n        var projectionNodeData = projectionNode.data;\n        if (projectionNodeData.tail) {\n            projectionNodeData.tail.pNextOrParent = appendedFirst;\n        }\n        else {\n            projectionNodeData.head = appendedFirst;\n        }\n        projectionNodeData.tail = appendedLast;\n        appendedLast.pNextOrParent = projectionNode;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param localIndex - index under which distribution of projected nodes was memorized\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, localIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, { head: null, tail: null });\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is memorized on a component's view level\n        var componentNode = findComponentHost(viewData);\n        var componentLView = componentNode.data;\n        var distributedNodes = loadInternal(localIndex, componentLView);\n        var nodesForSelector = distributedNodes[selectorIndex];\n        // build the linked list of projected nodes:\n        for (var i = 0; i < nodesForSelector.length; i++) {\n            var nodeToProject = nodesForSelector[i];\n            if (nodeToProject.tNode.type === 1 /* Projection */) {\n                // Reprojecting a projection -> append the list of previously projected nodes\n                var previouslyProjected = nodeToProject.data;\n                appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n            }\n            else {\n                // Projecting a single node\n                appendToProjectionNode(node, nodeToProject, nodeToProject);\n            }\n        }\n        var currentParent = getParentLNode(node);\n        if (canInsertNativeNode(currentParent, viewData)) {\n            ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n            // process each node in the list of projected nodes:\n            var nodeToProject = node.data.head;\n            var lastNodeToProject = node.data.tail;\n            while (nodeToProject) {\n                appendProjectedNode(nodeToProject, currentParent, viewData);\n                nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n            }\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var template = hostView[TVIEW].template;\n        try {\n            namespaceHTML();\n            template(getRenderFlags(hostView), component);\n            refreshView();\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    function getDirectiveInstance(instanceOrArray) {\n        // Directives with content queries store an array in directives[directiveIndex]\n        // with the instance as the first index\n        return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     *\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {@link Provider} into {@link ResolvedProvider}.\n     *\n     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n     * convenience provider syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link ReflectiveInjector#resolve resolve} and\n         * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n            var _a;\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SELECT_ONLY */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 13 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return getDirectiveInstance(node.view[DIRECTIVES][i]);\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.tNode.type === 0 /* Container */ ? null : di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, undefined, lContainer, null);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode = createTNode(0 /* Container */, -1, null, null, null, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            viewRef.attachToViewContainerRef(this);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n            // instruction)\n            this._lContainerNode.native = undefined;\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context) {\n            var viewNode = renderEmbeddedTemplate(null, this._tView, context, this._renderer, this._queries);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs),\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * Creates an NgOnChangesFeature function for a component's features list.\n     *\n     * It accepts an optional map of minified input property names to original property names,\n     * if any input properties have a public alias.\n     *\n     * The NgOnChangesFeature function that is returned decorates a component with support for\n     * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature({name: 'name'})]\n     * });\n     * ```\n     *\n     * @param inputPropertyNames Map of input property names, if they are aliased\n     * @returns DirectiveDefFeature\n     */\n    function NgOnChangesFeature(inputPropertyNames) {\n        return function (definition) {\n            var inputs = definition.inputs;\n            var proto = definition.type.prototype;\n            var _loop_1 = function (pubKey) {\n                var minKey = inputs[pubKey];\n                var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n                var privateMinKey = PRIVATE_PREFIX + minKey;\n                var originalProperty = Object.getOwnPropertyDescriptor(proto, minKey);\n                var getter = originalProperty && originalProperty.get;\n                var setter = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minKey, {\n                    get: getter ||\n                        (setter ? undefined : function () { return this[privateMinKey]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges = {}, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey);\n                        var currentChange = simpleChanges[propertyName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[propertyName] =\n                                new SimpleChange(this[privateMinKey], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey] = value;\n                        }\n                        setter && setter.call(this, value);\n                    }\n                });\n            };\n            for (var pubKey in inputs) {\n                _loop_1(pubKey);\n            }\n            // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n            // so the call order is changes-init-check in creation mode. In subsequent\n            // change detection runs, only the check wrapper will be called.\n            if (definition.onInit != null) {\n                definition.onInit = onChangesWrapper(definition.onInit);\n            }\n            definition.doCheck = onChangesWrapper(definition.doCheck);\n        };\n        function onChangesWrapper(delegateHook) {\n            return function () {\n                var simpleChanges = this[PRIVATE_PREFIX];\n                if (simpleChanges != null) {\n                    this.ngOnChanges(simpleChanges);\n                    this[PRIVATE_PREFIX] = null;\n                }\n                delegateHook && delegateHook.apply(this);\n            };\n        }\n    }\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n    var EMPTY$1 = {};\n    /** Swaps the keys and values of an object. */\n    function invertObject(obj) {\n        if (obj == null)\n            return EMPTY$1;\n        var newObj = {};\n        for (var minifiedKey in obj) {\n            newObj[obj[minifiedKey]] = minifiedKey;\n        }\n        return newObj;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n            // mutate parent.\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 13 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'Éµk': elementClass,\n        'Éµkn': elementClassNamed,\n        'ÉµL': listener,\n        'Éµld': load,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'Éµs': elementStyle,\n        'Éµsn': elementStyleNamed,\n        'Éµst': store,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var def = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return def;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _pendingPromises = [];\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will return a `Promise` which will resolve when compilation completes and the component becomes\n     * usable.\n     */\n    function compileComponent(type, metadata) {\n        // TODO(alxhub): implement ResourceLoader support for template compilation.\n        if (!metadata.template) {\n            throw new Error('templateUrl not yet supported');\n        }\n        var templateStr = metadata.template;\n        var def = null;\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(templateStr, \"ng://\" + type.name + \"/template.html\");\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + type.name + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n        return null;\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n        return null;\n    }\n    /**\n     * A wrapper around `compileComponent` which is intended to be used for the `@Component` decorator.\n     *\n     * This wrapper keeps track of the `Promise` returned by `compileComponent` and will cause\n     * `awaitCurrentlyCompilingComponents` to wait on the compilation to be finished.\n     */\n    function compileComponentDecorator(type, metadata) {\n        var res = compileComponent(type, metadata);\n        if (res !== null) {\n            _pendingPromises.push(res);\n        }\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var props = getReflect().propMetadata(type);\n        var inputs = {};\n        var outputs = {};\n        var _loop_1 = function (field) {\n            props[field].forEach(function (ann) {\n                if (isInput(ann)) {\n                    inputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (isOutput(ann)) {\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n            });\n        };\n        for (var field in props) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: {\n                attributes: {},\n                listeners: {},\n                properties: {},\n            },\n            inputs: inputs,\n            outputs: outputs,\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n        };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, 'ngInjectableDef', {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponentDecorator;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     * Pipe decorator and metadata.\n     *\n     * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n     * class must also implement {@link PipeTransform} interface.\n     *\n     * To use the pipe include a reference to the pipe class in\n     * {@link NgModule#declarations}.\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n    /**\n     * Input decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * Output decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * HostBinding decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * HostListener decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.0+43.sha-6ea6926');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     *\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     *\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the [componentType]'s\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * [componentType]'s selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n        var ApplicationRef_1;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n            var _a;\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var res = {};\n        try {\n            for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var t = _b.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n        var e_1, _c;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n        var e_2, _a;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n        var _b;\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n                var _a;\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyle;\n    exports.Éµsn = elementStyleNamed;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}